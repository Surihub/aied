/*
  Face-API
  homepage: <https://github.com/vladmandic/face-api>
  author: <https://github.com/vladmandic>'
*/

var faceapi=(()=>{var q0=Object.defineProperty;var WA=e=>q0(e,"__esModule",{value:!0});var Zr=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof require!="undefined"?require:t)[n]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var Ep=(e,t)=>{WA(e);for(var n in t)q0(e,n,{get:t[n],enumerable:!0})};var Wce={};Ep(Wce,{AgeGenderNet:()=>Um,BoundingBox:()=>Bu,Box:()=>ut,ComposableTask:()=>Dr,ComputeAllFaceDescriptorsTask:()=>Ea,ComputeFaceDescriptorsTaskBase:()=>Zm,ComputeSingleFaceDescriptorTask:()=>Aa,DetectAllFaceLandmarksTask:()=>Qm,DetectAllFacesTask:()=>op,DetectFaceLandmarksTaskBase:()=>Jm,DetectFacesTaskBase:()=>tg,DetectSingleFaceLandmarksTask:()=>eg,DetectSingleFaceTask:()=>ng,Dimensions:()=>Nn,FACE_EXPRESSION_LABELS:()=>x0,FaceDetection:()=>vt,FaceDetectionNet:()=>PE,FaceExpressionNet:()=>Wm,FaceExpressions:()=>_a,FaceLandmark68Net:()=>Ku,FaceLandmark68TinyNet:()=>Gm,FaceLandmarkNet:()=>IE,FaceLandmarks:()=>yr,FaceLandmarks5:()=>cE,FaceLandmarks68:()=>Wu,FaceMatch:()=>Xd,FaceMatcher:()=>sg,FaceRecognitionNet:()=>Xu,Gender:()=>Ws,LabeledBox:()=>Yd,LabeledFaceDescriptors:()=>Ls,NetInput:()=>Bs,NeuralNetwork:()=>ln,ObjectDetection:()=>Ta,Point:()=>Oe,PredictedBox:()=>uE,Rect:()=>zu,SsdMobilenetv1:()=>Ei,SsdMobilenetv1Options:()=>Ar,TinyFaceDetector:()=>el,TinyFaceDetectorOptions:()=>Ym,TinyYolov2:()=>Ju,TinyYolov2Options:()=>gs,allFaces:()=>Mce,allFacesSsdMobilenetv1:()=>YE,allFacesTinyYolov2:()=>Oce,awaitMediaLoaded:()=>f0,bufferToImage:()=>m0,computeFaceDescriptor:()=>kce,createCanvas:()=>Ci,createCanvasFromMedia:()=>Qd,createFaceDetectionNet:()=>mce,createFaceRecognitionNet:()=>sce,createSsdMobilenetv1:()=>RE,createTinyFaceDetector:()=>Lce,createTinyYolov2:()=>yce,detectAllFaces:()=>rg,detectFaceLandmarks:()=>KE,detectFaceLandmarksTiny:()=>wce,detectLandmarks:()=>Rce,detectSingleFace:()=>Pce,draw:()=>S0,env:()=>Je,euclideanDistance:()=>R0,extendWithAge:()=>qm,extendWithFaceDescriptor:()=>jm,extendWithFaceDetection:()=>ki,extendWithFaceExpressions:()=>Vm,extendWithFaceLandmarks:()=>qu,extendWithGender:()=>Km,extractFaceTensors:()=>Uu,extractFaces:()=>Vu,fetchImage:()=>Hie,fetchJson:()=>y0,fetchNetWeights:()=>jie,fetchOrThrow:()=>zs,fetchVideo:()=>qie,getContext2dOrThrow:()=>Wn,getMediaDimensions:()=>Si,imageTensorToCanvas:()=>g0,imageToSquare:()=>b0,inverseSigmoid:()=>Lie,iou:()=>r0,isMediaElement:()=>$m,isMediaLoaded:()=>Jd,isWithAge:()=>ace,isWithFaceDetection:()=>fs,isWithFaceExpressions:()=>w0,isWithFaceLandmarks:()=>Ni,isWithGender:()=>oce,loadAgeGenderModel:()=>Dce,loadFaceDetectionModel:()=>$ce,loadFaceExpressionModel:()=>Ace,loadFaceLandmarkModel:()=>Nce,loadFaceLandmarkTinyModel:()=>_ce,loadFaceRecognitionModel:()=>Ece,loadSsdMobilenetv1Model:()=>XE,loadTinyFaceDetectorModel:()=>Cce,loadTinyYolov2Model:()=>Tce,loadWeightMap:()=>v0,locateFaces:()=>Fce,matchDimensions:()=>Kie,minBbox:()=>s0,nets:()=>Qe,nonMaxSuppression:()=>a0,normalize:()=>qr,padToSquare:()=>o0,predictAgeAndGender:()=>Sce,recognizeFaceExpressions:()=>Ice,resizeResults:()=>ZE,resolveInput:()=>Ii,shuffleArray:()=>Mie,sigmoid:()=>Kd,ssdMobilenetv1:()=>qE,tf:()=>Jw,tinyFaceDetector:()=>vce,tinyYolov2:()=>xce,toNetInput:()=>mt,utils:()=>n0,validateConfig:()=>A0,version:()=>zce});var Jw={};Ep(Jw,{Abs:()=>Xi,Acos:()=>Yi,Acosh:()=>Zi,AdadeltaOptimizer:()=>lf,AdagradOptimizer:()=>df,AdamOptimizer:()=>pf,AdamaxOptimizer:()=>hf,Add:()=>Js,AddN:()=>La,All:()=>Ji,Any:()=>Qi,ArgMax:()=>Ba,ArgMin:()=>xl,Asin:()=>ec,Asinh:()=>tc,Atan:()=>nc,Atan2:()=>sc,Atanh:()=>rc,AvgPool:()=>za,AvgPool3D:()=>wl,AvgPool3DGrad:()=>Mp,AvgPoolGrad:()=>Op,BackendWasm:()=>oE,BatchMatMul:()=>Wa,BatchToSpaceND:()=>ac,Bincount:()=>Lp,BroadcastArgs:()=>Mb,BroadcastTo:()=>p1,Callback:()=>tC,CallbackList:()=>qI,Cast:()=>Va,Ceil:()=>Ua,ClipByValue:()=>Qs,Complex:()=>Bp,ComplexAbs:()=>kl,Concat:()=>oc,Conv2D:()=>Ga,Conv2DBackpropFilter:()=>zp,Conv2DBackpropInput:()=>Ha,Conv3D:()=>Il,Conv3DBackpropFilterV2:()=>Wp,Conv3DBackpropInputV2:()=>Vp,Cos:()=>ja,Cosh:()=>qa,CropAndResize:()=>ic,Cumsum:()=>Ka,CustomCallback:()=>XI,DataStorage:()=>Dp,DenseBincount:()=>Up,DepthToSpace:()=>cc,DepthwiseConv2dNative:()=>Xa,DepthwiseConv2dNativeBackpropFilter:()=>Gp,DepthwiseConv2dNativeBackpropInput:()=>Hp,Diag:()=>jp,Dilation2D:()=>Sl,Dilation2DBackpropFilter:()=>Kp,Dilation2DBackpropInput:()=>qp,ENV:()=>Ma,EarlyStopping:()=>rC,Einsum:()=>Xp,Elu:()=>Za,EluGrad:()=>Yp,Environment:()=>l1,Equal:()=>lc,Erf:()=>uc,Exp:()=>Ja,ExpandDims:()=>dc,Expm1:()=>pc,FFT:()=>Zp,Fill:()=>Cl,FlipLeftRight:()=>hc,Floor:()=>Qa,FloorDiv:()=>eo,FromPixels:()=>yh,FusedBatchNorm:()=>to,FusedConv2D:()=>Oo,FusedDepthwiseConv2D:()=>Mo,GPGPUContext:()=>tN,GatherNd:()=>mc,GatherV2:()=>fc,GraphModel:()=>PC,Greater:()=>gc,GreaterEqual:()=>no,History:()=>KI,IFFT:()=>Jp,Identity:()=>ro,Imag:()=>Qp,InputSpec:()=>Lt,IsFinite:()=>bc,IsInf:()=>yc,IsNan:()=>vc,KernelBackend:()=>bl,LRN:()=>_l,LRNGrad:()=>th,LayerVariable:()=>VI,LayersModel:()=>$s,LeakyRelu:()=>so,Less:()=>xc,LessEqual:()=>wc,LinSpace:()=>eh,Log:()=>ao,Log1p:()=>kc,LogSoftmax:()=>h1,LogicalAnd:()=>Ic,LogicalNot:()=>Tl,LogicalOr:()=>Nl,MathBackendWebGL:()=>mm,Max:()=>oo,MaxPool:()=>co,MaxPool3D:()=>El,MaxPool3DGrad:()=>rh,MaxPoolGrad:()=>nh,MaxPoolWithArgmax:()=>sh,Maximum:()=>io,Mean:()=>uo,Min:()=>lo,Minimum:()=>po,MirrorPad:()=>ho,Mod:()=>Sc,MomentumOptimizer:()=>ff,Multinomial:()=>ah,Multiply:()=>fo,Neg:()=>Cc,NonMaxSuppressionV3:()=>Nc,NonMaxSuppressionV4:()=>_c,NonMaxSuppressionV5:()=>Ec,NotEqual:()=>Tc,OP_SCOPE_SUFFIX:()=>_1,OneHot:()=>mo,OnesLike:()=>Ac,Optimizer:()=>Es,Pack:()=>Dc,PadV2:()=>go,Pool:()=>MD,Pow:()=>bo,Prelu:()=>yo,Prod:()=>$c,RMSPropOptimizer:()=>mf,RNN:()=>ls,Range:()=>Al,Rank:()=>Vb,Real:()=>oh,RealDiv:()=>Ya,Reciprocal:()=>Fc,Reduction:()=>wn,Relu:()=>vo,Relu6:()=>wo,Reshape:()=>Rc,ResizeBilinear:()=>xo,ResizeBilinearGrad:()=>ch,ResizeNearestNeighbor:()=>Dl,ResizeNearestNeighborGrad:()=>ih,Reverse:()=>ko,RotateWithOffset:()=>Xc,Round:()=>Io,Rsqrt:()=>So,SGDOptimizer:()=>id,ScatterNd:()=>Pc,Select:()=>Oc,Selu:()=>Mc,Sequential:()=>vu,Sigmoid:()=>To,Sign:()=>zc,Sin:()=>Co,Sinh:()=>Bc,Slice:()=>Lc,Softmax:()=>Eo,Softplus:()=>Wc,SpaceToBatchND:()=>Vc,SparseFillEmptyRows:()=>uh,SparseReshape:()=>lh,SparseSegmentMean:()=>dh,SparseSegmentSum:()=>ph,SparseToDense:()=>hh,SplitV:()=>Uc,Sqrt:()=>No,Square:()=>$l,SquaredDifference:()=>Ao,Step:()=>ta,StridedSlice:()=>Gc,StringNGrams:()=>fh,StringSplit:()=>mh,StringToHashBucketFast:()=>gh,Sub:()=>Do,Sum:()=>_o,SymbolicTensor:()=>Wr,Tan:()=>$o,Tanh:()=>Fo,Tensor:()=>Ee,TensorBuffer:()=>Wt,Tile:()=>ea,TopK:()=>Hc,Transform:()=>jc,Transpose:()=>Ro,Unique:()=>bh,Unpack:()=>qc,UnsortedSegmentSum:()=>Fl,Variable:()=>ra,ZerosLike:()=>Kc,_FusedMatMul:()=>Po,abs:()=>Mt,acos:()=>my,acosh:()=>gy,add:()=>Y,addN:()=>pk,all:()=>Fh,any:()=>jl,argMax:()=>Ho,argMin:()=>by,asin:()=>yy,asinh:()=>vy,atan:()=>xy,atan2:()=>wy,atanh:()=>ky,avgPool:()=>ur,avgPool3d:()=>Cy,backend:()=>dk,backend_util:()=>_,basicLSTMCell:()=>kR,batchNorm:()=>Ts,batchNorm2d:()=>gk,batchNorm3d:()=>bk,batchNorm4d:()=>yk,batchToSpaceND:()=>Kl,bincount:()=>Ty,booleanMaskAsync:()=>_O,broadcastArgs:()=>vk,broadcastTo:()=>su,browser:()=>Uo,buffer:()=>ze,callbacks:()=>VU,cast:()=>ce,ceil:()=>Ny,clipByValue:()=>Zt,clone:()=>Ss,complex:()=>sa,concat:()=>Ze,concat1d:()=>xk,concat2d:()=>wk,concat3d:()=>kk,concat4d:()=>Ik,constraints:()=>wI,conv1d:()=>Ph,conv2d:()=>Ft,conv2dTranspose:()=>Oh,conv3d:()=>Ey,conv3dTranspose:()=>Ck,copyRegisteredKernels:()=>zD,cos:()=>Xl,cosh:()=>Mh,cosineWindow:()=>tv,cumsum:()=>Lh,customGrad:()=>ns,data:()=>OC,denseBincount:()=>Tk,deprecationWarn:()=>fy,depthToSpace:()=>Ay,depthwiseConv2d:()=>ua,deregisterOp:()=>GU,device_util:()=>Ul,diag:()=>JR,dilation2d:()=>Dy,disableDeprecationWarnings:()=>RF,dispose:()=>$e,disposeVariables:()=>PF,div:()=>ge,divNoNan:()=>$y,dot:()=>Nk,dropout:()=>Kk,einsum:()=>_k,elu:()=>au,enableDebugMode:()=>FF,enableProdMode:()=>$F,enclosingPowerOfTwo:()=>Xk,engine:()=>Cs,env:()=>Q,equal:()=>qn,erf:()=>Fy,exp:()=>hn,expandDims:()=>fn,expm1:()=>Ry,eye:()=>Py,fft:()=>sd,fill:()=>xn,findBackend:()=>VF,findBackendFactory:()=>UF,floor:()=>ou,floorDiv:()=>$h,forceHalfFloat:()=>dN,fused:()=>pa,gather:()=>Ko,gatherND:()=>qk,gather_util:()=>iy,getBackend:()=>zF,getGradient:()=>Lb,getKernel:()=>vh,getKernelsForBackend:()=>xh,gpgpu_util:()=>L2,grad:()=>_P,grads:()=>EP,greater:()=>Rn,greaterEqual:()=>la,ifft:()=>du,imag:()=>Bh,image:()=>Jn,inTopKAsync:()=>BO,initializers:()=>_I,input:()=>yS,io:()=>Xt,irfft:()=>Qh,isFinite:()=>Ek,isInf:()=>Ak,isNaN:()=>Oy,keep:()=>Yt,kernel_impls:()=>as,layers:()=>BI,leakyRelu:()=>Yl,less:()=>zh,lessEqual:()=>da,linalg:()=>iI,linspace:()=>Dk,loadGraphModel:()=>qG,loadLayersModel:()=>JW,localResponseNormalization:()=>My,log:()=>Kn,log1p:()=>Zl,logSigmoid:()=>Fk,logSoftmax:()=>Vh,logSumExp:()=>zy,logicalAnd:()=>Sr,logicalNot:()=>Jl,logicalOr:()=>Uh,logicalXor:()=>Mk,losses:()=>wL,matMul:()=>De,math:()=>j1,max:()=>Ir,maxPool:()=>Rt,maxPool3d:()=>Wy,maxPoolWithArgmax:()=>Lk,maximum:()=>rs,mean:()=>_t,memory:()=>Ah,meshgrid:()=>ZP,metrics:()=>JS,min:()=>Ql,minimum:()=>iu,mirrorPad:()=>Vy,mod:()=>Uy,model:()=>YW,models:()=>QS,moments:()=>Gh,movingAverage:()=>DO,mul:()=>V,multiRNNCell:()=>a3,multinomial:()=>Bk,neg:()=>kt,nextFrame:()=>gf,norm:()=>rf,notEqual:()=>Zo,oneHot:()=>tu,ones:()=>Xn,onesLike:()=>Yn,op:()=>W,outerProduct:()=>l3,pad:()=>dr,pad1d:()=>h3,pad2d:()=>m3,pad3d:()=>b3,pad4d:()=>v3,pool:()=>zk,pow:()=>Ns,prelu:()=>td,print:()=>z1,prod:()=>Hh,profile:()=>OF,rand:()=>_3,randomGamma:()=>$3,randomNormal:()=>Wk,randomUniform:()=>cu,range:()=>uu,ready:()=>BF,real:()=>nd,reciprocal:()=>jy,registerBackend:()=>Dh,registerCallbackConstructor:()=>QW,registerGradient:()=>f1,registerKernel:()=>Pl,registerOp:()=>UU,regularizers:()=>eC,relu:()=>qe,relu6:()=>jh,removeBackend:()=>WF,reshape:()=>U,reverse:()=>Zn,reverse1d:()=>W3,reverse2d:()=>U3,reverse3d:()=>H3,reverse4d:()=>q3,rfft:()=>ad,round:()=>qh,rsqrt:()=>Kh,scalar:()=>Ie,scatterND:()=>jk,scatter_util:()=>cy,selu:()=>Xh,separableConv2d:()=>Jo,sequential:()=>ZW,serialization:()=>oe,setBackend:()=>LF,setPlatform:()=>GF,setWasmPath:()=>Iie,setWasmPaths:()=>Sie,setWebGLContext:()=>c2,setdiff1dAsync:()=>Vk,sigmoid:()=>lr,sign:()=>qy,signal:()=>xL,sin:()=>Yh,sinh:()=>Zh,slice:()=>We,slice1d:()=>Jh,slice2d:()=>Ky,slice3d:()=>lu,slice4d:()=>rd,slice_util:()=>vn,softmax:()=>Rr,softplus:()=>Xo,spaceToBatchND:()=>ed,sparse:()=>od,sparseToDense:()=>ev,spectral:()=>vL,split:()=>Pn,sqrt:()=>an,square:()=>ct,squaredDifference:()=>ef,squeeze:()=>ss,stack:()=>Pt,step:()=>pu,stridedSlice:()=>Xy,string:()=>uf,sub:()=>fe,sum:()=>ve,sumOutType:()=>Ch,tan:()=>Yy,tanh:()=>qo,tensor:()=>jn,tensor1d:()=>He,tensor2d:()=>Pr,tensor3d:()=>_h,tensor4d:()=>Or,tensor5d:()=>vO,tensor6d:()=>xO,tensor_util:()=>$r,test_util:()=>ck,tidy:()=>M,tile:()=>Fn,time:()=>MF,topk:()=>Zy,train:()=>ei,transpose:()=>Pe,truncatedNormal:()=>tf,unique:()=>nf,unregisterGradient:()=>BD,unregisterKernel:()=>LD,unsortedSegmentSum:()=>Jy,unstack:()=>dt,upcastType:()=>kr,util:()=>w,valueAndGrad:()=>AP,valueAndGrads:()=>DP,variable:()=>Uk,variableGrads:()=>$k,version:()=>Pie,version_converter:()=>KG,version_core:()=>DF,version_layers:()=>Ov,version_wasm:()=>Cie,version_webgl:()=>o9,webgl:()=>i9,webgl_util:()=>i2,where:()=>pn,whereAsync:()=>Qy,zeros:()=>It,zerosLike:()=>Ge});var VA=Object.create,Ap=Object.defineProperty,UA=Object.getOwnPropertyDescriptor,GA=Object.getOwnPropertyNames,HA=Object.getPrototypeOf,jA=Object.prototype.hasOwnProperty,K0=e=>Ap(e,"__esModule",{value:!0}),ji=(e=>typeof Zr!="undefined"?Zr:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof Zr!="undefined"?Zr:t)[n]}):e)(function(e){if(typeof Zr!="undefined")return Zr.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),wt=(e,t)=>function(){return t||(0,e[Object.keys(e)[0]])((t={exports:{}}).exports,t),t.exports},Re=(e,t)=>{K0(e);for(var n in t)Ap(e,n,{get:t[n],enumerable:!0})},qA=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of GA(t))!jA.call(e,r)&&r!=="default"&&Ap(e,r,{get:()=>t[r],enumerable:!(n=UA(t,r))||n.enumerable});return e},Ra=e=>qA(K0(Ap(e!=null?VA(HA(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),KA=wt({"node_modules/.pnpm/long@4.0.0/node_modules/long/src/long.js"(e,t){t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(P){}function r(P,T,L){this.low=P|0,this.high=T|0,this.unsigned=!!L}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0});function s(P){return(P&&P.__isLong__)===!0}r.isLong=s;var a={},o={};function i(P,T){var L,G,j;return T?(P>>>=0,(j=0<=P&&P<256)&&(G=o[P],G)?G:(L=u(P,(P|0)<0?-1:0,!0),j&&(o[P]=L),L)):(P|=0,(j=-128<=P&&P<128)&&(G=a[P],G)?G:(L=u(P,P<0?-1:0,!1),j&&(a[P]=L),L))}r.fromInt=i;function c(P,T){if(isNaN(P))return T?x:v;if(T){if(P<0)return x;if(P>=g)return R}else{if(P<=-b)return O;if(P+1>=b)return $}return P<0?c(-P,T).neg():u(P%m|0,P/m|0,T)}r.fromNumber=c;function u(P,T,L){return new r(P,T,L)}r.fromBits=u;var l=Math.pow;function d(P,T,L){if(P.length===0)throw Error("empty string");if(P==="NaN"||P==="Infinity"||P==="+Infinity"||P==="-Infinity")return v;if(typeof T=="number"?(L=T,T=!1):T=!!T,L=L||10,L<2||36<L)throw RangeError("radix");var G;if((G=P.indexOf("-"))>0)throw Error("interior hyphen");if(G===0)return d(P.substring(1),T,L).neg();for(var j=c(l(L,8)),q=v,K=0;K<P.length;K+=8){var te=Math.min(8,P.length-K),ne=parseInt(P.substring(K,K+te),L);if(te<8){var re=c(l(L,te));q=q.mul(re).add(c(ne))}else q=q.mul(j),q=q.add(c(ne))}return q.unsigned=T,q}r.fromString=d;function p(P,T){return typeof P=="number"?c(P,T):typeof P=="string"?d(P,T):u(P.low,P.high,typeof T=="boolean"?T:P.unsigned)}r.fromValue=p;var h=1<<16,f=1<<24,m=h*h,g=m*m,b=g/2,y=i(f),v=i(0);r.ZERO=v;var x=i(0,!0);r.UZERO=x;var k=i(1);r.ONE=k;var C=i(1,!0);r.UONE=C;var N=i(-1);r.NEG_ONE=N;var $=u(4294967295|0,2147483647|0,!1);r.MAX_VALUE=$;var R=u(4294967295|0,4294967295|0,!0);r.MAX_UNSIGNED_VALUE=R;var O=u(0,2147483648|0,!1);r.MIN_VALUE=O;var D=r.prototype;D.toInt=function(){return this.unsigned?this.low>>>0:this.low},D.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},D.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(O)){var L=c(T),G=this.div(L),j=G.mul(L).sub(this);return G.toString(T)+j.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var q=c(l(T,6),this.unsigned),K=this,te="";;){var ne=K.div(q),re=K.sub(ne.mul(q)).toInt()>>>0,se=re.toString(T);if(K=ne,K.isZero())return se+te;for(;se.length<6;)se="0"+se;te=""+se+te}},D.getHighBits=function(){return this.high},D.getHighBitsUnsigned=function(){return this.high>>>0},D.getLowBits=function(){return this.low},D.getLowBitsUnsigned=function(){return this.low>>>0},D.getNumBitsAbs=function(){if(this.isNegative())return this.eq(O)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,L=31;L>0&&(T&1<<L)==0;L--);return this.high!=0?L+33:L+1},D.isZero=function(){return this.high===0&&this.low===0},D.eqz=D.isZero,D.isNegative=function(){return!this.unsigned&&this.high<0},D.isPositive=function(){return this.unsigned||this.high>=0},D.isOdd=function(){return(this.low&1)==1},D.isEven=function(){return(this.low&1)==0},D.equals=function(T){return s(T)||(T=p(T)),this.unsigned!==T.unsigned&&this.high>>>31==1&&T.high>>>31==1?!1:this.high===T.high&&this.low===T.low},D.eq=D.equals,D.notEquals=function(T){return!this.eq(T)},D.neq=D.notEquals,D.ne=D.notEquals,D.lessThan=function(T){return this.comp(T)<0},D.lt=D.lessThan,D.lessThanOrEqual=function(T){return this.comp(T)<=0},D.lte=D.lessThanOrEqual,D.le=D.lessThanOrEqual,D.greaterThan=function(T){return this.comp(T)>0},D.gt=D.greaterThan,D.greaterThanOrEqual=function(T){return this.comp(T)>=0},D.gte=D.greaterThanOrEqual,D.ge=D.greaterThanOrEqual,D.compare=function(T){if(s(T)||(T=p(T)),this.eq(T))return 0;var L=this.isNegative(),G=T.isNegative();return L&&!G?-1:!L&&G?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},D.comp=D.compare,D.negate=function(){return!this.unsigned&&this.eq(O)?O:this.not().add(k)},D.neg=D.negate,D.add=function(T){s(T)||(T=p(T));var L=this.high>>>16,G=this.high&65535,j=this.low>>>16,q=this.low&65535,K=T.high>>>16,te=T.high&65535,ne=T.low>>>16,re=T.low&65535,se=0,J=0,ie=0,ue=0;return ue+=q+re,ie+=ue>>>16,ue&=65535,ie+=j+ne,J+=ie>>>16,ie&=65535,J+=G+te,se+=J>>>16,J&=65535,se+=L+K,se&=65535,u(ie<<16|ue,se<<16|J,this.unsigned)},D.subtract=function(T){return s(T)||(T=p(T)),this.add(T.neg())},D.sub=D.subtract,D.multiply=function(T){if(this.isZero())return v;if(s(T)||(T=p(T)),n){var L=n.mul(this.low,this.high,T.low,T.high);return u(L,n.get_high(),this.unsigned)}if(T.isZero())return v;if(this.eq(O))return T.isOdd()?O:v;if(T.eq(O))return this.isOdd()?O:v;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(y)&&T.lt(y))return c(this.toNumber()*T.toNumber(),this.unsigned);var G=this.high>>>16,j=this.high&65535,q=this.low>>>16,K=this.low&65535,te=T.high>>>16,ne=T.high&65535,re=T.low>>>16,se=T.low&65535,J=0,ie=0,ue=0,le=0;return le+=K*se,ue+=le>>>16,le&=65535,ue+=q*se,ie+=ue>>>16,ue&=65535,ue+=K*re,ie+=ue>>>16,ue&=65535,ie+=j*se,J+=ie>>>16,ie&=65535,ie+=q*re,J+=ie>>>16,ie&=65535,ie+=K*ne,J+=ie>>>16,ie&=65535,J+=G*se+j*re+q*ne+K*te,J&=65535,u(ue<<16|le,J<<16|ie,this.unsigned)},D.mul=D.multiply,D.divide=function(T){if(s(T)||(T=p(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var L=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return u(L,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?x:v;var G,j,q;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return x;if(T.gt(this.shru(1)))return C;q=x}else{if(this.eq(O)){if(T.eq(k)||T.eq(N))return O;if(T.eq(O))return k;var K=this.shr(1);return G=K.div(T).shl(1),G.eq(v)?T.isNegative()?k:N:(j=this.sub(T.mul(G)),q=G.add(j.div(T)),q)}else if(T.eq(O))return this.unsigned?x:v;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();q=v}for(j=this;j.gte(T);){G=Math.max(1,Math.floor(j.toNumber()/T.toNumber()));for(var te=Math.ceil(Math.log(G)/Math.LN2),ne=te<=48?1:l(2,te-48),re=c(G),se=re.mul(T);se.isNegative()||se.gt(j);)G-=ne,re=c(G,this.unsigned),se=re.mul(T);re.isZero()&&(re=k),q=q.add(re),j=j.sub(se)}return q},D.div=D.divide,D.modulo=function(T){if(s(T)||(T=p(T)),n){var L=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return u(L,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},D.mod=D.modulo,D.rem=D.modulo,D.not=function(){return u(~this.low,~this.high,this.unsigned)},D.and=function(T){return s(T)||(T=p(T)),u(this.low&T.low,this.high&T.high,this.unsigned)},D.or=function(T){return s(T)||(T=p(T)),u(this.low|T.low,this.high|T.high,this.unsigned)},D.xor=function(T){return s(T)||(T=p(T)),u(this.low^T.low,this.high^T.high,this.unsigned)},D.shiftLeft=function(T){return s(T)&&(T=T.toInt()),(T&=63)==0?this:T<32?u(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):u(0,this.low<<T-32,this.unsigned)},D.shl=D.shiftLeft,D.shiftRight=function(T){return s(T)&&(T=T.toInt()),(T&=63)==0?this:T<32?u(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):u(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},D.shr=D.shiftRight,D.shiftRightUnsigned=function(T){if(s(T)&&(T=T.toInt()),T&=63,T===0)return this;var L=this.high;if(T<32){var G=this.low;return u(G>>>T|L<<32-T,L>>>T,this.unsigned)}else return T===32?u(L,0,this.unsigned):u(L>>>T-32,0,this.unsigned)},D.shru=D.shiftRightUnsigned,D.shr_u=D.shiftRightUnsigned,D.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},D.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},D.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},D.toBytesLE=function(){var T=this.high,L=this.low;return[L&255,L>>>8&255,L>>>16&255,L>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},D.toBytesBE=function(){var T=this.high,L=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,L>>>24,L>>>16&255,L>>>8&255,L&255]},r.fromBytes=function(T,L,G){return G?r.fromBytesLE(T,L):r.fromBytesBE(T,L)},r.fromBytesLE=function(T,L){return new r(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,L)},r.fromBytesBE=function(T,L){return new r(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],L)}}}),XA=wt({"(disabled):node_modules/.pnpm/node-fetch@2.6.5/node_modules/node-fetch/browser.js"(){}}),YA=wt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,r,s){function a(u){var l=this,d=c();l.next=function(){var p=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=p-(l.c=p|0)},l.c=1,l.s0=d(" "),l.s1=d(" "),l.s2=d(" "),l.s0-=d(u),l.s0<0&&(l.s0+=1),l.s1-=d(u),l.s1<0&&(l.s1+=1),l.s2-=d(u),l.s2<0&&(l.s2+=1),d=null}function o(u,l){return l.c=u.c,l.s0=u.s0,l.s1=u.s1,l.s2=u.s2,l}function i(u,l){var d=new a(u),p=l&&l.state,h=d.next;return h.int32=function(){return d.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&o(p,d),h.state=function(){return o(d,{})}),h}function c(){var u=4022871197,l=function(d){d=d.toString();for(var p=0;p<d.length;p++){u+=d.charCodeAt(p);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return l}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),ZA=wt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,r,s){function a(c){var u=this,l="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var p=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^p^p>>>8},c===(c|0)?u.x=c:l+=c;for(var d=0;d<l.length+64;d++)u.x^=l.charCodeAt(d)|0,u.next()}function o(c,u){return u.x=c.x,u.y=c.y,u.z=c.z,u.w=c.w,u}function i(c,u){var l=new a(c),d=u&&u.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(typeof d=="object"&&o(d,l),p.state=function(){return o(l,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),JA=wt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,r,s){function a(c){var u=this,l="";u.next=function(){var p=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(p^p<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,c===(c|0)?u.x=c:l+=c;for(var d=0;d<l.length+64;d++)u.x^=l.charCodeAt(d)|0,d==l.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(c,u){return u.x=c.x,u.y=c.y,u.z=c.z,u.w=c.w,u.v=c.v,u.d=c.d,u}function i(c,u){var l=new a(c),d=u&&u.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(typeof d=="object"&&o(d,l),p.state=function(){return o(l,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),QA=wt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,r,s){function a(c){var u=this;u.next=function(){var d=u.x,p=u.i,h,f,m;return h=d[p],h^=h>>>7,f=h^h<<24,h=d[p+1&7],f^=h^h>>>10,h=d[p+3&7],f^=h^h>>>3,h=d[p+4&7],f^=h^h<<7,h=d[p+7&7],h=h^h<<13,f^=h^h<<9,d[p]=f,u.i=p+1&7,f};function l(d,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],d.x=m,d.i=0,h=256;h>0;--h)d.next()}l(u,c)}function o(c,u){return u.x=c.x.slice(),u.i=c.i,u}function i(c,u){c==null&&(c=+new Date);var l=new a(c),d=u&&u.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(d.x&&o(d,l),p.state=function(){return o(l,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),eD=wt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,r,s){function a(c){var u=this;u.next=function(){var d=u.w,p=u.X,h=u.i,f,m;return u.w=d=d+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,u.i=h,m+(d^d>>>16)|0};function l(d,p){var h,f,m,g,b,y=[],v=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,v=Math.max(v,p.length)),m=0,g=-32;g<v;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(b=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(b=b+1640531527|0,h=y[g&127]^=f+b,m=h==0?m+1:0);for(m>=128&&(y[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=y[m+34&127],h=y[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,y[m]=f^h;d.w=b,d.X=y,d.i=m}l(u,c)}function o(c,u){return u.i=c.i,u.w=c.w,u.X=c.X.slice(),u}function i(c,u){c==null&&(c=+new Date);var l=new a(c),d=u&&u.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(d.X&&o(d,l),p.state=function(){return o(l,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),tD=wt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,r,s){function a(c){var u=this,l="";u.next=function(){var p=u.b,h=u.c,f=u.d,m=u.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,u.b=p=p<<20^p>>>12^h,u.c=h=h-f|0,u.d=f<<16^h>>>16^m,u.a=m-p|0},u.a=0,u.b=0,u.c=2654435769|0,u.d=1367130551,c===Math.floor(c)?(u.a=c/4294967296|0,u.b=c|0):l+=c;for(var d=0;d<l.length+20;d++)u.b^=l.charCodeAt(d)|0,u.next()}function o(c,u){return u.a=c.a,u.b=c.b,u.c=c.c,u.d=c.d,u}function i(c,u){var l=new a(c),d=u&&u.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(typeof d=="object"&&o(d,l),p.state=function(){return o(l,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),X0=wt({"(disabled):crypto"(){}}),nD=wt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,r){var s=this,a=256,o=6,i=52,c="random",u=r.pow(a,o),l=r.pow(2,i),d=l*2,p=a-1,h;function f(k,C,N){var $=[];C=C==!0?{entropy:!0}:C||{};var R=y(b(C.entropy?[k,x(n)]:k==null?v():k,3),$),O=new m($),D=function(){for(var P=O.g(o),T=u,L=0;P<l;)P=(P+L)*a,T*=a,L=O.g(1);for(;P>=d;)P/=2,T/=2,L>>>=1;return(P+L)/T};return D.int32=function(){return O.g(4)|0},D.quick=function(){return O.g(4)/4294967296},D.double=D,y(x(O.S),n),(C.pass||N||function(P,T,L,G){return G&&(G.S&&g(G,O),P.state=function(){return g(O,{})}),L?(r[c]=P,T):P})(D,R,"global"in C?C.global:this==r,C.state)}r["seed"+c]=f;function m(k){var C,N=k.length,$=this,R=0,O=$.i=$.j=0,D=$.S=[];for(N||(k=[N++]);R<a;)D[R]=R++;for(R=0;R<a;R++)D[R]=D[O=p&O+k[R%N]+(C=D[R])],D[O]=C;($.g=function(P){for(var T,L=0,G=$.i,j=$.j,q=$.S;P--;)T=q[G=p&G+1],L=L*a+q[p&(q[G]=q[j=p&j+T])+(q[j]=T)];return $.i=G,$.j=j,L})(a)}function g(k,C){return C.i=k.i,C.j=k.j,C.S=k.S.slice(),C}function b(k,C){var N=[],$=typeof k,R;if(C&&$=="object")for(R in k)try{N.push(b(k[R],C-1))}catch(O){}return N.length?N:$=="string"?k:k+"\0"}function y(k,C){for(var N=k+"",$,R=0;R<N.length;)C[p&R]=p&($^=C[p&R]*19)+N.charCodeAt(R++);return x(C)}function v(){try{var k;return h&&(k=h.randomBytes)?k=k(a):(k=new Uint8Array(a),(s.crypto||s.msCrypto).getRandomValues(k)),x(k)}catch($){var C=s.navigator,N=C&&C.plugins;return[+new Date,s,N,s.screen,x(n)]}}function x(k){return String.fromCharCode.apply(0,k)}if(y(r.random(),n),typeof t=="object"&&t.exports){t.exports=f;try{h=X0()}catch(k){}}else typeof define=="function"&&define.amd&&define(function(){return f})})([],Math)}}),Y0=wt({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/index.js"(e,t){var n=YA(),r=ZA(),s=JA(),a=QA(),o=eD(),i=tD(),c=nD();c.alea=n,c.xor128=r,c.xorwow=s,c.xorshift7=a,c.xor4096=o,c.tychei=i,t.exports=c}}),rD=wt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,r,s){function a(u){var l=this,d=c();l.next=function(){var p=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=p-(l.c=p|0)},l.c=1,l.s0=d(" "),l.s1=d(" "),l.s2=d(" "),l.s0-=d(u),l.s0<0&&(l.s0+=1),l.s1-=d(u),l.s1<0&&(l.s1+=1),l.s2-=d(u),l.s2<0&&(l.s2+=1),d=null}function o(u,l){return l.c=u.c,l.s0=u.s0,l.s1=u.s1,l.s2=u.s2,l}function i(u,l){var d=new a(u),p=l&&l.state,h=d.next;return h.int32=function(){return d.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&o(p,d),h.state=function(){return o(d,{})}),h}function c(){var u=4022871197,l=function(d){d=String(d);for(var p=0;p<d.length;p++){u+=d.charCodeAt(p);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return l}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),sD=wt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,r,s){function a(c){var u=this,l="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var p=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^p^p>>>8},c===(c|0)?u.x=c:l+=c;for(var d=0;d<l.length+64;d++)u.x^=l.charCodeAt(d)|0,u.next()}function o(c,u){return u.x=c.x,u.y=c.y,u.z=c.z,u.w=c.w,u}function i(c,u){var l=new a(c),d=u&&u.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(typeof d=="object"&&o(d,l),p.state=function(){return o(l,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),aD=wt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,r,s){function a(c){var u=this,l="";u.next=function(){var p=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(p^p<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,c===(c|0)?u.x=c:l+=c;for(var d=0;d<l.length+64;d++)u.x^=l.charCodeAt(d)|0,d==l.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(c,u){return u.x=c.x,u.y=c.y,u.z=c.z,u.w=c.w,u.v=c.v,u.d=c.d,u}function i(c,u){var l=new a(c),d=u&&u.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(typeof d=="object"&&o(d,l),p.state=function(){return o(l,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),oD=wt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,r,s){function a(c){var u=this;u.next=function(){var d=u.x,p=u.i,h,f,m;return h=d[p],h^=h>>>7,f=h^h<<24,h=d[p+1&7],f^=h^h>>>10,h=d[p+3&7],f^=h^h>>>3,h=d[p+4&7],f^=h^h<<7,h=d[p+7&7],h=h^h<<13,f^=h^h<<9,d[p]=f,u.i=p+1&7,f};function l(d,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],d.x=m,d.i=0,h=256;h>0;--h)d.next()}l(u,c)}function o(c,u){return u.x=c.x.slice(),u.i=c.i,u}function i(c,u){c==null&&(c=+new Date);var l=new a(c),d=u&&u.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(d.x&&o(d,l),p.state=function(){return o(l,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),iD=wt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,r,s){function a(c){var u=this;u.next=function(){var d=u.w,p=u.X,h=u.i,f,m;return u.w=d=d+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,u.i=h,m+(d^d>>>16)|0};function l(d,p){var h,f,m,g,b,y=[],v=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,v=Math.max(v,p.length)),m=0,g=-32;g<v;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(b=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(b=b+1640531527|0,h=y[g&127]^=f+b,m=h==0?m+1:0);for(m>=128&&(y[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=y[m+34&127],h=y[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,y[m]=f^h;d.w=b,d.X=y,d.i=m}l(u,c)}function o(c,u){return u.i=c.i,u.w=c.w,u.X=c.X.slice(),u}function i(c,u){c==null&&(c=+new Date);var l=new a(c),d=u&&u.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(d.X&&o(d,l),p.state=function(){return o(l,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),cD=wt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,r,s){function a(c){var u=this,l="";u.next=function(){var p=u.b,h=u.c,f=u.d,m=u.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,u.b=p=p<<20^p>>>12^h,u.c=h=h-f|0,u.d=f<<16^h>>>16^m,u.a=m-p|0},u.a=0,u.b=0,u.c=2654435769|0,u.d=1367130551,c===Math.floor(c)?(u.a=c/4294967296|0,u.b=c|0):l+=c;for(var d=0;d<l.length+20;d++)u.b^=l.charCodeAt(d)|0,u.next()}function o(c,u){return u.a=c.a,u.b=c.b,u.c=c.c,u.d=c.d,u}function i(c,u){var l=new a(c),d=u&&u.state,p=function(){return(l.next()>>>0)/4294967296};return p.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=l.next,p.quick=p,d&&(typeof d=="object"&&o(d,l),p.state=function(){return o(l,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),uD=wt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,r,s){var a=256,o=6,i=52,c="random",u=s.pow(a,o),l=s.pow(2,i),d=l*2,p=a-1,h;function f(k,C,N){var $=[];C=C==!0?{entropy:!0}:C||{};var R=y(b(C.entropy?[k,x(r)]:k==null?v():k,3),$),O=new m($),D=function(){for(var P=O.g(o),T=u,L=0;P<l;)P=(P+L)*a,T*=a,L=O.g(1);for(;P>=d;)P/=2,T/=2,L>>>=1;return(P+L)/T};return D.int32=function(){return O.g(4)|0},D.quick=function(){return O.g(4)/4294967296},D.double=D,y(x(O.S),r),(C.pass||N||function(P,T,L,G){return G&&(G.S&&g(G,O),P.state=function(){return g(O,{})}),L?(s[c]=P,T):P})(D,R,"global"in C?C.global:this==s,C.state)}function m(k){var C,N=k.length,$=this,R=0,O=$.i=$.j=0,D=$.S=[];for(N||(k=[N++]);R<a;)D[R]=R++;for(R=0;R<a;R++)D[R]=D[O=p&O+k[R%N]+(C=D[R])],D[O]=C;($.g=function(P){for(var T,L=0,G=$.i,j=$.j,q=$.S;P--;)T=q[G=p&G+1],L=L*a+q[p&(q[G]=q[j=p&j+T])+(q[j]=T)];return $.i=G,$.j=j,L})(a)}function g(k,C){return C.i=k.i,C.j=k.j,C.S=k.S.slice(),C}function b(k,C){var N=[],$=typeof k,R;if(C&&$=="object")for(R in k)try{N.push(b(k[R],C-1))}catch(O){}return N.length?N:$=="string"?k:k+"\0"}function y(k,C){for(var N=k+"",$,R=0;R<N.length;)C[p&R]=p&($^=C[p&R]*19)+N.charCodeAt(R++);return x(C)}function v(){try{var k;return h&&(k=h.randomBytes)?k=k(a):(k=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(k)),x(k)}catch($){var C=n.navigator,N=C&&C.plugins;return[+new Date,n,N,n.screen,x(r)]}}function x(k){return String.fromCharCode.apply(0,k)}if(y(s.random(),r),typeof t=="object"&&t.exports){t.exports=f;try{h=X0()}catch(k){}}else typeof define=="function"&&define.amd?define(function(){return f}):s["seed"+c]=f})(typeof self!="undefined"?self:e,[],Math)}}),Z0=wt({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js"(e,t){var n=rD(),r=sD(),s=aD(),a=oD(),o=iD(),i=cD(),c=uD();c.alea=n,c.xor128=r,c.xorwow=s,c.xorshift7=a,c.xor4096=o,c.tychei=i,t.exports=c}}),J0=wt({"(disabled):node_modules/.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js"(){}}),gl=wt({"(disabled):path"(){}}),lD=wt({"(disabled):worker_threads"(){}}),dD=wt({"(disabled):perf_hooks"(){}}),pD=wt({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.9.0_@tensorflow+tfjs-core@3.9.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(s){s=s||{};function a(){return J.buffer!=Ve&&rn(J.buffer),An}function o(){return J.buffer!=Ve&&rn(J.buffer),Tt}function i(){return J.buffer!=Ve&&rn(J.buffer),vr}function c(){return J.buffer!=Ve&&rn(J.buffer),mn}function u(){return J.buffer!=Ve&&rn(J.buffer),ar}var l=typeof s!="undefined"?s:{},d,p;l.ready=new Promise(function(S,A){d=S,p=A});var h={},f;for(f in l)l.hasOwnProperty(f)&&(h[f]=l[f]);var m=[],g="./this.program",b=function(S,A){throw A},y=!1,v=!1,x=!1,k=!1;y=typeof window=="object",v=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",k=!y&&!x&&!v;var C=l.ENVIRONMENT_IS_PTHREAD||!1;C&&(Ve=l.buffer);var N="";function $(S){return l.locateFile?l.locateFile(S,N):N+S}var R,O,D,P,T,L;if(x){v?N=gl().dirname(N)+"/":N=__dirname+"/",R=function(A,z){return T||(T=ji("fs")),L||(L=gl()),A=L.normalize(A),T.readFileSync(A,z?null:"utf8")},D=function(A){var z=R(A,!0);return z.buffer||(z=new Uint8Array(z)),me(z.buffer),z},process.argv.length>1&&(g=process.argv[1].replace(/\\/g,"/")),m=process.argv.slice(2),process.on("uncaughtException",function(S){if(!(S instanceof ml))throw S}),process.on("unhandledRejection",vs),b=function(S){process.exit(S)},l.inspect=function(){return"[Emscripten Module object]"};var G;try{G=lD()}catch(S){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),S}global.Worker=G.Worker}else k?(typeof read!="undefined"&&(R=function(A){return read(A)}),D=function(A){var z;return typeof readbuffer=="function"?new Uint8Array(readbuffer(A)):(z=read(A,"binary"),me(typeof z=="object"),z)},typeof scriptArgs!="undefined"?m=scriptArgs:typeof arguments!="undefined"&&(m=arguments),typeof quit=="function"&&(b=function(S){quit(S)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(y||v)&&(v?N=self.location.href:typeof document!="undefined"&&document.currentScript&&(N=document.currentScript.src),typeof r!="undefined"&&r&&(N=r),N.indexOf("blob:")!==0?N=N.substr(0,N.lastIndexOf("/")+1):N="",x?(R=function(A,z){return T||(T=ji("fs")),L||(L=gl()),A=L.normalize(A),T.readFileSync(A,z?null:"utf8")},D=function(A){var z=R(A,!0);return z.buffer||(z=new Uint8Array(z)),me(z.buffer),z}):(R=function(S){var A=new XMLHttpRequest;return A.open("GET",S,!1),A.send(null),A.responseText},v&&(D=function(S){var A=new XMLHttpRequest;return A.open("GET",S,!1),A.responseType="arraybuffer",A.send(null),new Uint8Array(A.response)}),O=function(S,A,z){var X=new XMLHttpRequest;X.open("GET",S,!0),X.responseType="arraybuffer",X.onload=function(){if(X.status==200||X.status==0&&X.response){A(X.response);return}z()},X.onerror=z,X.send(null)}),P=function(S){document.title=S});x&&typeof performance=="undefined"&&(global.performance=dD().performance);var j=l.print||console.log.bind(console),q=l.printErr||console.warn.bind(console);for(f in h)h.hasOwnProperty(f)&&(l[f]=h[f]);h=null,l.arguments&&(m=l.arguments),l.thisProgram&&(g=l.thisProgram),l.quit&&(b=l.quit);var K=Atomics.load,te=Atomics.store,ne=Atomics.compareExchange,re;l.wasmBinary&&(re=l.wasmBinary);var se=l.noExitRuntime||!0;typeof WebAssembly!="object"&&vs("no native wasm support detected");var J,ie,ue=!1,le;function me(S,A){S||vs("Assertion failed: "+A)}function Ce(S){var A=l["_"+S];return me(A,"Cannot call unknown function "+S+", make sure it is exported"),A}function Te(S,A,z,X,he){var de={string:function(gn){var Hi=0;if(gn!=null&&gn!==0){var j0=(gn.length<<2)+1;Hi=Vi(j0),nt(gn,Hi,j0)}return Hi},array:function(gn){var Hi=Vi(gn.length);return et(gn,Hi),Hi}};function pe(gn){return A==="string"?Ae(gn):A==="boolean"?Boolean(gn):gn}var we=Ce(S),st=[],jt=0;if(X)for(var zt=0;zt<X.length;zt++){var Xs=de[z[zt]];Xs?(jt===0&&(jt=fl()),st[zt]=Xs(X[zt])):st[zt]=X[zt]}var Gi=we.apply(null,st);return Gi=pe(Gi),jt!==0&&Wi(jt),Gi}function _e(S,A,z,X){z=z||[];var he=z.every(function(pe){return pe==="number"}),de=A!=="string";return de&&he&&!X?Ce(S):function(){return Te(S,A,z,arguments,X)}}function Me(S,A,z){for(var X=A+z,he="";!(A>=X);){var de=S[A++];if(!de)return he;if(!(de&128)){he+=String.fromCharCode(de);continue}var pe=S[A++]&63;if((de&224)==192){he+=String.fromCharCode((de&31)<<6|pe);continue}var we=S[A++]&63;if((de&240)==224?de=(de&15)<<12|pe<<6|we:de=(de&7)<<18|pe<<12|we<<6|S[A++]&63,de<65536)he+=String.fromCharCode(de);else{var st=de-65536;he+=String.fromCharCode(55296|st>>10,56320|st&1023)}}return he}function Ae(S,A){return S?Me(o(),S,A):""}function lt(S,A,z,X){if(!(X>0))return 0;for(var he=z,de=z+X-1,pe=0;pe<S.length;++pe){var we=S.charCodeAt(pe);if(we>=55296&&we<=57343){var st=S.charCodeAt(++pe);we=65536+((we&1023)<<10)|st&1023}if(we<=127){if(z>=de)break;A[z++]=we}else if(we<=2047){if(z+1>=de)break;A[z++]=192|we>>6,A[z++]=128|we&63}else if(we<=65535){if(z+2>=de)break;A[z++]=224|we>>12,A[z++]=128|we>>6&63,A[z++]=128|we&63}else{if(z+3>=de)break;A[z++]=240|we>>18,A[z++]=128|we>>12&63,A[z++]=128|we>>6&63,A[z++]=128|we&63}}return A[z]=0,z-he}function nt(S,A,z){return lt(S,o(),A,z)}function rt(S){for(var A=0,z=0;z<S.length;++z){var X=S.charCodeAt(z);X>=55296&&X<=57343&&(X=65536+((X&1023)<<10)|S.charCodeAt(++z)&1023),X<=127?++A:X<=2047?A+=2:X<=65535?A+=3:A+=4}return A}function et(S,A){a().set(S,A)}function it(S,A){return S%A>0&&(S+=A-S%A),S}var Ve,An,Tt,Un,nn,vr,mn,sr,ar;function rn(S){Ve=S,l.HEAP8=An=new Int8Array(S),l.HEAP16=Un=new Int16Array(S),l.HEAP32=vr=new Int32Array(S),l.HEAPU8=Tt=new Uint8Array(S),l.HEAPU16=nn=new Uint16Array(S),l.HEAPU32=mn=new Uint32Array(S),l.HEAPF32=sr=new Float32Array(S),l.HEAPF64=ar=new Float64Array(S)}var or=l.INITIAL_MEMORY||16777216;if(C)J=l.wasmMemory,Ve=l.buffer;else if(l.wasmMemory)J=l.wasmMemory;else if(J=new WebAssembly.Memory({initial:or/65536,maximum:2147483648/65536,shared:!0}),!(J.buffer instanceof SharedArrayBuffer))throw q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");J&&(Ve=J.buffer),or=Ve.byteLength,rn(Ve);var ir,Gn=[],Xr=[],bs=[],Gs=[],Pi=[],Yr=!1,ip=!1;C||Xr.push({func:function(){kp()}});function ag(){if(!C){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)up(l.preRun.shift());Mi(Gn)}}function al(){Yr=!0,!C&&Mi(Xr)}function og(){C||Mi(bs)}function cp(){C||(ip=!0)}function Dn(){if(!C){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)ig(l.postRun.shift());Mi(Pi)}}function up(S){Gn.unshift(S)}function ig(S){Pi.unshift(S)}var ys=0,Hs=null,Da=null;function cg(S){me(!C,"addRunDependency cannot be used in a pthread worker"),ys++,l.monitorRunDependencies&&l.monitorRunDependencies(ys)}function ug(S){if(ys--,l.monitorRunDependencies&&l.monitorRunDependencies(ys),ys==0&&(Hs!==null&&(clearInterval(Hs),Hs=null),Da)){var A=Da;Da=null,A()}}l.preloadedImages={},l.preloadedAudios={};function vs(S){l.onAbort&&l.onAbort(S),C&&console.error("Pthread aborting at "+new Error().stack),S+="",q(S),ue=!0,le=1,S="abort("+S+"). Build with -s ASSERTIONS=1 for more info.";var A=new WebAssembly.RuntimeError(S);throw p(A),A}function lp(S,A){return String.prototype.startsWith?S.startsWith(A):S.indexOf(A)===0}var Oi="data:application/octet-stream;base64,";function dp(S){return lp(S,Oi)}var lg="file://";function pp(S){return lp(S,lg)}var $n="tfjs-backend-wasm-threaded-simd.wasm";dp($n)||($n=$($n));function hp(S){try{if(S==$n&&re)return new Uint8Array(re);if(D)return D(S);throw"both async and sync fetching of the wasm failed"}catch(A){vs(A)}}function dg(){if(!re&&(y||v)){if(typeof fetch=="function"&&!pp($n))return fetch($n,{credentials:"same-origin"}).then(function(S){if(!S.ok)throw"failed to load wasm binary file at '"+$n+"'";return S.arrayBuffer()}).catch(function(){return hp($n)});if(O)return new Promise(function(S,A){O($n,function(z){S(new Uint8Array(z))},A)})}return Promise.resolve().then(function(){return hp($n)})}function pg(){var S={a:nb};function A(pe,we){var st=pe.exports;if(l.asm=st,ir=l.asm.F,ie=we,!C){var jt=Se.unusedWorkers.length;Se.unusedWorkers.forEach(function(zt){Se.loadWasmModuleToWorker(zt,function(){--jt||ug("wasm-instantiate")})})}}C||cg("wasm-instantiate");function z(pe){A(pe.instance,pe.module)}function X(pe){return dg().then(function(we){return WebAssembly.instantiate(we,S)}).then(pe,function(we){q("failed to asynchronously prepare wasm: "+we),vs(we)})}function he(){return!re&&typeof WebAssembly.instantiateStreaming=="function"&&!dp($n)&&!pp($n)&&typeof fetch=="function"?fetch($n,{credentials:"same-origin"}).then(function(pe){var we=WebAssembly.instantiateStreaming(pe,S);return we.then(z,function(st){return q("wasm streaming compile failed: "+st),q("falling back to ArrayBuffer instantiation"),X(z)})}):X(z)}if(l.instantiateWasm)try{var de=l.instantiateWasm(S,A);return de}catch(pe){return q("Module.instantiateWasm callback failed with error: "+pe),!1}return he().catch(p),{}}var hg={10024:function(){throw"Canceled!"},10042:function(S,A){setTimeout(function(){z0(S,A)},0)}};function fp(){Se.initRuntime()}function Mi(S){for(;S.length>0;){var A=S.shift();if(typeof A=="function"){A(l);continue}var z=A.func;typeof z=="number"?A.arg===void 0?ir.get(z)():ir.get(z)(A.arg):z(A.arg===void 0?null:A.arg)}}function ol(S,A){if(S<=0||S>a().length||S&!0||A<0)return-28;if(A==0)return 0;A>=2147483647&&(A=1/0);var z=Atomics.load(i(),Ui>>2),X=0;if(z==S){var he=Atomics.compareExchange(i(),Ui>>2,z,0);if(he==z&&(--A,X=1,A<=0))return 1}var de=Atomics.notify(i(),S>>2,A);if(de>=0)return de+X;throw"Atomics.notify returned an unexpected value "+de}l._emscripten_futex_wake=ol;function fg(S){if(C)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in killThread!";i()[S+12>>2]=0;var A=Se.pthreads[S];A.worker.terminate(),Se.freeThreadData(A),Se.runningWorkers.splice(Se.runningWorkers.indexOf(A.worker),1),A.worker.pthread=void 0}function mg(S){if(C)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cancelThread!";var A=Se.pthreads[S];A.worker.postMessage({cmd:"cancel"})}function gg(S){if(C)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cleanupThread!";var A=Se.pthreads[S];if(A){i()[S+12>>2]=0;var z=A.worker;Se.returnWorkerToPool(z)}}var Se={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var S=Math.min(4,Math.max(1,(navigator.hardwareConcurrency||1)/2)),A=0;A<S;++A)Se.allocateUnusedWorker()},initRuntime:function(){for(var S=Fa(228),A=0;A<228/4;++A)c()[S/4+A]=0;i()[S+12>>2]=S;var z=S+152;i()[z>>2]=z;for(var X=Fa(512),A=0;A<128;++A)c()[X/4+A]=0;Atomics.store(c(),S+100>>2,X),Atomics.store(c(),S+40>>2,S),Eb(S,!v,1),B0(S)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Se.threadExitHandlers.length>0;)Se.threadExitHandlers.pop()();C&&zi()&&L0()},runExitHandlersAndDeinitThread:function(S,A){Atomics.store(c(),S+56>>2,1),Atomics.store(c(),S+60>>2,0),Se.runExitHandlers(),Atomics.store(c(),S+4>>2,A),Atomics.store(c(),S+0>>2,1),ol(S+0,2147483647),Eb(0,0,0)},threadExit:function(S){var A=zi();A&&(Se.runExitHandlersAndDeinitThread(A,S),C&&postMessage({cmd:"exit"}))},threadCancel:function(){Se.runExitHandlersAndDeinitThread(zi(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var S in Se.pthreads){var A=Se.pthreads[S];A&&A.worker&&Se.returnWorkerToPool(A.worker)}Se.pthreads={};for(var z=0;z<Se.unusedWorkers.length;++z){var X=Se.unusedWorkers[z];X.terminate()}Se.unusedWorkers=[];for(var z=0;z<Se.runningWorkers.length;++z){var X=Se.runningWorkers[z],A=X.pthread;Se.freeThreadData(A),X.terminate()}Se.runningWorkers=[]},freeThreadData:function(S){if(!!S){if(S.threadInfoStruct){var A=i()[S.threadInfoStruct+100>>2];i()[S.threadInfoStruct+100>>2]=0,hl(A),hl(S.threadInfoStruct)}S.threadInfoStruct=0,S.allocatedOwnStack&&S.stackBase&&hl(S.stackBase),S.stackBase=0,S.worker&&(S.worker.pthread=null)}},returnWorkerToPool:function(S){Se.runWithoutMainThreadQueuedCalls(function(){delete Se.pthreads[S.pthread.threadInfoStruct],Se.unusedWorkers.push(S),Se.runningWorkers.splice(Se.runningWorkers.indexOf(S),1),Se.freeThreadData(S.pthread),S.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(S){i()[H0>>2]=0;try{S()}finally{i()[H0>>2]=1}},receiveObjectTransfer:function(S){},loadWasmModuleToWorker:function(S,A){S.onmessage=function(z){var X=z.data,he=X.cmd;if(S.pthread&&(Se.currentProxiedOperationCallerThread=S.pthread.threadInfoStruct),X.targetThread&&X.targetThread!=zi()){var de=Se.pthreads[X.targetThread];de?de.worker.postMessage(z.data,X.transferList):console.error('Internal error! Worker sent a message "'+he+'" to target pthread '+X.targetThread+", but that thread no longer exists!"),Se.currentProxiedOperationCallerThread=void 0;return}if(he==="processQueuedMainThreadWork")Nb();else if(he==="spawnThread")xp(z.data);else if(he==="cleanupThread")gg(X.thread);else if(he==="killThread")fg(X.thread);else if(he==="cancelThread")mg(X.thread);else if(he==="loaded")S.loaded=!0,A&&A(S),S.runPthread&&(S.runPthread(),delete S.runPthread);else if(he==="print")j("Thread "+X.threadId+": "+X.text);else if(he==="printErr")q("Thread "+X.threadId+": "+X.text);else if(he==="alert")alert("Thread "+X.threadId+": "+X.text);else if(he==="exit"){var pe=S.pthread&&Atomics.load(c(),S.pthread.threadInfoStruct+64>>2);pe&&Se.returnWorkerToPool(S)}else if(he==="exitProcess")try{zA(X.returnCode)}catch(we){if(we instanceof ml)return;throw we}else he==="cancelDone"?Se.returnWorkerToPool(S):he==="objectTransfer"?Se.receiveObjectTransfer(z.data):z.data.target==="setimmediate"?S.postMessage(z.data):q("worker sent an unknown command "+he);Se.currentProxiedOperationCallerThread=void 0},S.onerror=function(z){q("pthread sent an error! "+z.filename+":"+z.lineno+": "+z.message)},x&&(S.on("message",function(z){S.onmessage({data:z})}),S.on("error",function(z){S.onerror(z)}),S.on("exit",function(z){})),S.postMessage({cmd:"load",urlOrBlob:l.mainScriptUrlOrBlob||r,wasmMemory:J,wasmModule:ie})},allocateUnusedWorker:function(){var S=$("tfjs-backend-wasm-threaded-simd.worker.js");Se.unusedWorkers.push(new Worker(S))},getNewWorker:function(){return Se.unusedWorkers.length==0&&(Se.allocateUnusedWorker(),Se.loadWasmModuleToWorker(Se.unusedWorkers[0])),Se.unusedWorkers.length>0?Se.unusedWorkers.pop():null},busySpinWait:function(S){for(var A=performance.now()+S;performance.now()<A;);}};function bg(S,A){U0(S,A),Wi(S)}l.establishStackSpace=bg;function yg(){return se}l.getNoExitRuntime=yg;function vg(S,A){return ir.get(S)(A)}l.invokeEntryPoint=vg;function xg(S,A,z,X){vs("Assertion failed: "+Ae(S)+", at: "+[A?Ae(A):"unknown filename",z,X?Ae(X):"unknown function"])}function wg(S,A){var z=_main(S,A)}var $a;x?$a=function(){var S=process.hrtime();return S[0]*1e3+S[1]/1e6}:C?$a=function(){return performance.now()-l.__performance_now_clock_drift}:typeof dateNow!="undefined"?$a=dateNow:$a=function(){return performance.now()};function kg(S){return i()[O0()>>2]=S,S}function Ig(S,A){if(C)return js(1,1,S,A)}function Sg(S,A){if(S==A)postMessage({cmd:"processQueuedMainThreadWork"});else if(C)postMessage({targetThread:S,cmd:"processThreadQueue"});else{var z=Se.pthreads[S],X=z&&z.worker;if(!X)return;X.postMessage({cmd:"processThreadQueue"})}return 1}function Cg(){vs()}function Tg(S,A,z){var X=Dg(A,z);return hg[S].apply(null,X)}function Ng(S,A){}function _g(S,A,z){if(S<=0||S>a().length||S&!0)return-28;if(y){if(Atomics.load(i(),S>>2)!=A)return-6;for(var he=performance.now(),de=he+z,pe=Atomics.exchange(i(),Ui>>2,S);;){if(he=performance.now(),he>de)return pe=Atomics.exchange(i(),Ui>>2,0),-73;if(pe=Atomics.exchange(i(),Ui>>2,0),pe==0)break;if(Nb(),Atomics.load(i(),S>>2)!=A)return-6;pe=Atomics.exchange(i(),Ui>>2,S)}return 0}else{var X=Atomics.wait(i(),S>>2,A,z);if(X==="timed-out")return-73;if(X==="not-equal")return-6;if(X==="ok")return 0;throw"Atomics.wait returned an unexpected value "+X}}function Eg(S,A,z){o().copyWithin(S,A,A+z)}function Ag(){return x?ji("os").cpus().length:navigator.hardwareConcurrency}function js(S,A){for(var z=arguments.length-2,X=fl(),he=z,de=Vi(he*8),pe=de>>3,we=0;we<z;we++){var st=arguments[2+we];u()[pe+we]=st}var jt=V0(S,he,de,A);return Wi(X),jt}var il=[],cl=[];function Dg(S,A){cl.length=0;var z;for(A>>=2;z=o()[S++];){var X=z<105;X&&A&1&&A++,cl.push(X?u()[A++>>1]:i()[A]),++A}return cl}function $g(S,A,z){il.length=A;for(var X=z>>3,he=0;he<A;he++)il[he]=u()[X+he];var de=S<0,pe=de?hg[-S-1]:tb[S];return pe.apply(null,il)}function Fg(){return o().length}function Rg(S){try{return J.grow(S-Ve.byteLength+65535>>>16),rn(J.buffer),1}catch(A){}}function Pg(S){var A=Fg();if(S<=A)return!1;var z=2147483648;if(S>z)return!1;for(var X=1;X<=4;X*=2){var he=A*(1+.2/X);he=Math.min(he,S+100663296);var de=Math.min(z,it(Math.max(S,he),65536)),pe=Rg(de);if(pe)return!0}return!1}var Be={inEventHandler:0,removeAllEventListeners:function(){for(var S=Be.eventHandlers.length-1;S>=0;--S)Be._removeHandler(S);Be.eventHandlers=[],Be.deferredCalls=[]},registerRemoveEventListeners:function(){Be.removeEventListenersRegistered||(Gs.push(Be.removeAllEventListeners),Be.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(S,A,z){function X(pe,we){if(pe.length!=we.length)return!1;for(var st in pe)if(pe[st]!=we[st])return!1;return!0}for(var he in Be.deferredCalls){var de=Be.deferredCalls[he];if(de.targetFunction==S&&X(de.argsList,z))return}Be.deferredCalls.push({targetFunction:S,precedence:A,argsList:z}),Be.deferredCalls.sort(function(pe,we){return pe.precedence<we.precedence})},removeDeferredCalls:function(S){for(var A=0;A<Be.deferredCalls.length;++A)Be.deferredCalls[A].targetFunction==S&&(Be.deferredCalls.splice(A,1),--A)},canPerformEventHandlerRequests:function(){return Be.inEventHandler&&Be.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Be.canPerformEventHandlerRequests())for(var S=0;S<Be.deferredCalls.length;++S){var A=Be.deferredCalls[S];Be.deferredCalls.splice(S,1),--S,A.targetFunction.apply(null,A.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(S,A){for(var z=0;z<Be.eventHandlers.length;++z)Be.eventHandlers[z].target==S&&(!A||A==Be.eventHandlers[z].eventTypeString)&&Be._removeHandler(z--)},_removeHandler:function(S){var A=Be.eventHandlers[S];A.target.removeEventListener(A.eventTypeString,A.eventListenerFunc,A.useCapture),Be.eventHandlers.splice(S,1)},registerOrRemoveHandler:function(S){var A=function(he){++Be.inEventHandler,Be.currentEventHandler=S,Be.runDeferredCalls(),S.handlerFunc(he),Be.runDeferredCalls(),--Be.inEventHandler};if(S.callbackfunc)S.eventListenerFunc=A,S.target.addEventListener(S.eventTypeString,A,S.useCapture),Be.eventHandlers.push(S),Be.registerRemoveEventListeners();else for(var z=0;z<Be.eventHandlers.length;++z)Be.eventHandlers[z].target==S.target&&Be.eventHandlers[z].eventTypeString==S.eventTypeString&&Be._removeHandler(z--)},queueEventHandlerOnThread_iiii:function(S,A,z,X,he){var de=fl(),pe=Vi(12);i()[pe>>2]=z,i()[pe+4>>2]=X,i()[pe+8>>2]=he,_b(0,S,637534208,A,X,pe),Wi(de)},getTargetThreadForEventCallback:function(S){switch(S){case 1:return 0;case 2:return Se.currentProxiedOperationCallerThread;default:return S}},getNodeNameForTarget:function(S){return S?S==window?"#window":S==screen?"#screen":S&&S.nodeName?S.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Og(S){var A=rt(S)+1,z=Fa(A);return nt(S,z,A),z}function Mg(S,A,z,X){var he=fl(),de=Vi(12),pe=0;A&&(pe=Og(A)),i()[de>>2]=pe,i()[de+4>>2]=z,i()[de+8>>2]=X,_b(0,S,657457152,0,pe,de),Wi(he)}function Lg(S,A,z,X){A=A?Ae(A):"",Mg(S,A,z,X)}function Bg(S){return S>2?Ae(S):S}var zg=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function Wg(S){S=Bg(S);var A=zg[S]||(typeof document!="undefined"?document.querySelector(S):void 0);return A}function ul(S){return Wg(S)}function mp(S,A,z){var X=ul(S);if(!X)return-4;if(X.canvasSharedPtr&&(i()[X.canvasSharedPtr>>2]=A,i()[X.canvasSharedPtr+4>>2]=z),X.offscreenCanvas||!X.controlTransferredOffscreen){X.offscreenCanvas&&(X=X.offscreenCanvas);var he=!1;if(X.GLctxObject&&X.GLctxObject.GLctx){var de=X.GLctxObject.GLctx.getParameter(2978);he=de[0]===0&&de[1]===0&&de[2]===X.width&&de[3]===X.height}X.width=A,X.height=z,he&&X.GLctxObject.GLctx.viewport(0,0,A,z)}else if(X.canvasSharedPtr){var pe=i()[X.canvasSharedPtr+8>>2];return Lg(pe,S,A,z),1}else return-4;return 0}function gp(S,A,z){return C?js(2,1,S,A,z):mp(S,A,z)}function Vg(S,A,z){var X=ul(S);return X?mp(S,A,z):gp(S,A,z)}function Ug(S){}function Gg(S,A){}function Hg(S){var A=S.getExtension("ANGLE_instanced_arrays");if(A)return S.vertexAttribDivisor=function(z,X){A.vertexAttribDivisorANGLE(z,X)},S.drawArraysInstanced=function(z,X,he,de){A.drawArraysInstancedANGLE(z,X,he,de)},S.drawElementsInstanced=function(z,X,he,de,pe){A.drawElementsInstancedANGLE(z,X,he,de,pe)},1}function jg(S){var A=S.getExtension("OES_vertex_array_object");if(A)return S.createVertexArray=function(){return A.createVertexArrayOES()},S.deleteVertexArray=function(z){A.deleteVertexArrayOES(z)},S.bindVertexArray=function(z){A.bindVertexArrayOES(z)},S.isVertexArray=function(z){return A.isVertexArrayOES(z)},1}function qg(S){var A=S.getExtension("WEBGL_draw_buffers");if(A)return S.drawBuffers=function(z,X){A.drawBuffersWEBGL(z,X)},1}function Kg(S){return!!(S.multiDrawWebgl=S.getExtension("WEBGL_multi_draw"))}var tt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(A){tt.lastError||(tt.lastError=A)},getNewId:function(S){for(var A=tt.counter++,z=S.length;z<A;z++)S[z]=null;return A},getSource:function(S,A,z,X){for(var he="",de=0;de<A;++de){var pe=X?i()[X+de*4>>2]:-1;he+=Ae(i()[z+de*4>>2],pe<0?void 0:pe)}return he},createContext:function(S,A){var z=S.getContext("webgl",A);if(!z)return 0;var X=tt.registerContext(z,A);return X},registerContext:function(S,A){var z=Fa(8);i()[z+4>>2]=zi();var X={handle:z,attributes:A,version:A.majorVersion,GLctx:S};return S.canvas&&(S.canvas.GLctxObject=X),tt.contexts[z]=X,(typeof A.enableExtensionsByDefault=="undefined"||A.enableExtensionsByDefault)&&tt.initExtensions(X),z},makeContextCurrent:function(S){return tt.currentContext=tt.contexts[S],l.ctx=qs=tt.currentContext&&tt.currentContext.GLctx,!(S&&!qs)},getContext:function(S){return tt.contexts[S]},deleteContext:function(S){tt.currentContext===tt.contexts[S]&&(tt.currentContext=null),typeof Be=="object"&&Be.removeAllHandlersOnTarget(tt.contexts[S].GLctx.canvas),tt.contexts[S]&&tt.contexts[S].GLctx.canvas&&(tt.contexts[S].GLctx.canvas.GLctxObject=void 0),hl(tt.contexts[S].handle),tt.contexts[S]=null},initExtensions:function(S){if(S||(S=tt.currentContext),!S.initExtensionsDone){S.initExtensionsDone=!0;var A=S.GLctx;Hg(A),jg(A),qg(A),A.disjointTimerQueryExt=A.getExtension("EXT_disjoint_timer_query"),Kg(A);var z=A.getSupportedExtensions()||[];z.forEach(function(X){X.indexOf("lose_context")<0&&X.indexOf("debug")<0&&A.getExtension(X)})}},populateUniformTable:function(S){for(var A=tt.programs[S],z=tt.programInfos[S]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},X=z.uniforms,he=qs.getProgramParameter(A,35718),de=0;de<he;++de){var pe=qs.getActiveUniform(A,de),we=pe.name;z.maxUniformLength=Math.max(z.maxUniformLength,we.length+1),we.slice(-1)=="]"&&(we=we.slice(0,we.lastIndexOf("[")));var st=qs.getUniformLocation(A,we);if(st){var jt=tt.getNewId(tt.uniforms);X[we]=[pe.size,jt],tt.uniforms[jt]=st;for(var zt=1;zt<pe.size;++zt){var Xs=we+"["+zt+"]";st=qs.getUniformLocation(A,Xs),jt=tt.getNewId(tt.uniforms),tt.uniforms[jt]=st}}}}},Xg=["default","low-power","high-performance"];function Yg(S,A){var z=A>>2,X=i()[z+(24>>2)],he={alpha:!!i()[z+(0>>2)],depth:!!i()[z+(4>>2)],stencil:!!i()[z+(8>>2)],antialias:!!i()[z+(12>>2)],premultipliedAlpha:!!i()[z+(16>>2)],preserveDrawingBuffer:!!i()[z+(20>>2)],powerPreference:Xg[X],failIfMajorPerformanceCaveat:!!i()[z+(28>>2)],majorVersion:i()[z+(32>>2)],minorVersion:i()[z+(36>>2)],enableExtensionsByDefault:i()[z+(40>>2)],explicitSwapControl:i()[z+(44>>2)],proxyContextToMainThread:i()[z+(48>>2)],renderViaOffscreenBackBuffer:i()[z+(52>>2)]},de=ul(S);if(!de||he.explicitSwapControl)return 0;var pe=tt.createContext(de,he);return pe}function Zg(S,A){return Yg(S,A)}var Li={mappings:{},buffers:[null,[],[]],printChar:function(S,A){var z=Li.buffers[S];A===0||A===10?((S===1?j:q)(Me(z,0)),z.length=0):z.push(A)},varargs:void 0,get:function(){Li.varargs+=4;var S=i()[Li.varargs-4>>2];return S},getStr:function(S){var A=Ae(S);return A},get64:function(S,A){return S}};function bp(S){return C?js(3,1,S):0}function yp(S,A,z,X,he){if(C)return js(4,1,S,A,z,X,he)}function vp(S,A,z,X){if(C)return js(5,1,S,A,z,X);for(var he=0,de=0;de<z;de++){for(var pe=i()[A+de*8>>2],we=i()[A+(de*8+4)>>2],st=0;st<we;st++)Li.printChar(S,o()[pe+st]);he+=we}return i()[X>>2]=he,0}function Jg(S){var A=Se.threadExitHandlers.pop();S&&A()}function Qg(S,A){Se.threadExitHandlers.push(function(){ir.get(S)(A)})}function xp(S){if(C)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var A=Se.getNewWorker();if(A.pthread!==void 0)throw"Internal error!";if(!S.pthread_ptr)throw"Internal error, no pthread ptr!";Se.runningWorkers.push(A);for(var z=Fa(128*4),X=0;X<128;++X)i()[z+X*4>>2]=0;var he=S.stackBase+S.stackSize,de=Se.pthreads[S.pthread_ptr]={worker:A,stackBase:S.stackBase,stackSize:S.stackSize,allocatedOwnStack:S.allocatedOwnStack,threadInfoStruct:S.pthread_ptr},pe=de.threadInfoStruct>>2;Atomics.store(c(),pe+(64>>2),S.detached),Atomics.store(c(),pe+(100>>2),z),Atomics.store(c(),pe+(40>>2),de.threadInfoStruct),Atomics.store(c(),pe+(80>>2),S.stackSize),Atomics.store(c(),pe+(76>>2),he),Atomics.store(c(),pe+(104>>2),S.stackSize),Atomics.store(c(),pe+(104+8>>2),he),Atomics.store(c(),pe+(104+12>>2),S.detached);var we=M0(),st=we+40;Atomics.store(c(),pe+(172>>2),st),A.pthread=de;var jt={cmd:"run",start_routine:S.startRoutine,arg:S.arg,threadInfoStruct:S.pthread_ptr,stackBase:S.stackBase,stackSize:S.stackSize};A.runPthread=function(){jt.time=performance.now(),A.postMessage(jt,S.transferList)},A.loaded&&(A.runPthread(),delete A.runPthread)}function eb(S,A,z,X){if(typeof SharedArrayBuffer=="undefined")return q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!S)return q("pthread_create called with a null thread pointer!"),28;var he=[],de=0;if(C&&(he.length===0||de))return W0(687865856,S,A,z,X);if(de)return de;var pe=0,we=0,st=0;A&&A!=-1?(pe=i()[A>>2],pe+=81920,we=i()[A+8>>2],st=i()[A+12>>2]!==0):pe=2097152;var jt=we==0;jt?we=G0(16,pe):(we-=pe,me(we>0));for(var zt=Fa(228),Xs=0;Xs<228>>2;++Xs)c()[(zt>>2)+Xs]=0;i()[S>>2]=zt,i()[zt+12>>2]=zt;var Gi=zt+152;i()[Gi>>2]=Gi;var gn={stackBase:we,stackSize:pe,allocatedOwnStack:jt,detached:st,startRoutine:z,pthread_ptr:zt,arg:X,transferList:he};return C?(gn.cmd="spawnThread",postMessage(gn,he)):xp(gn),0}function wp(S){if(C)return js(6,1,S);switch(S){case 30:return 16384;case 85:var A=2147483648;return A/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return kg(28),-1}C||Se.initMainThreadBlock();var qs,tb=[null,Ig,gp,bp,yp,vp,wp],nb={e:xg,r:wg,x:Sg,b:Cg,y:Tg,j:Ng,c:_g,d:ol,f:$a,p:Eg,z:Ag,u:$g,q:Pg,v:Vg,i:Ug,t:Gg,w:Zg,m:bp,n:yp,g:vp,o:fp,a:J||l.wasmMemory,k:Jg,l:Qg,h:eb,s:wp},P0=pg(),kp=l.___wasm_call_ctors=function(){return(kp=l.___wasm_call_ctors=l.asm.A).apply(null,arguments)},rb=l._init=function(){return(rb=l._init=l.asm.B).apply(null,arguments)},sb=l._register_tensor=function(){return(sb=l._register_tensor=l.asm.C).apply(null,arguments)},ab=l._dispose_data=function(){return(ab=l._dispose_data=l.asm.D).apply(null,arguments)},ob=l._dispose=function(){return(ob=l._dispose=l.asm.E).apply(null,arguments)},ib=l._Abs=function(){return(ib=l._Abs=l.asm.G).apply(null,arguments)},cb=l._Add=function(){return(cb=l._Add=l.asm.H).apply(null,arguments)},ub=l._AddN=function(){return(ub=l._AddN=l.asm.I).apply(null,arguments)},lb=l._All=function(){return(lb=l._All=l.asm.J).apply(null,arguments)},db=l._Any=function(){return(db=l._Any=l.asm.K).apply(null,arguments)},pb=l._ArgMax=function(){return(pb=l._ArgMax=l.asm.L).apply(null,arguments)},hb=l._AvgPool=function(){return(hb=l._AvgPool=l.asm.M).apply(null,arguments)},fb=l._BatchMatMul=function(){return(fb=l._BatchMatMul=l.asm.N).apply(null,arguments)},mb=l._Ceil=function(){return(mb=l._Ceil=l.asm.O).apply(null,arguments)},gb=l._ClipByValue=function(){return(gb=l._ClipByValue=l.asm.P).apply(null,arguments)},bb=l._Conv2D=function(){return(bb=l._Conv2D=l.asm.Q).apply(null,arguments)},yb=l._Conv2DBackpropInput=function(){return(yb=l._Conv2DBackpropInput=l.asm.R).apply(null,arguments)},vb=l._Cos=function(){return(vb=l._Cos=l.asm.S).apply(null,arguments)},xb=l._Cosh=function(){return(xb=l._Cosh=l.asm.T).apply(null,arguments)},wb=l._CropAndResize=function(){return(wb=l._CropAndResize=l.asm.U).apply(null,arguments)},kb=l._Cumsum=function(){return(kb=l._Cumsum=l.asm.V).apply(null,arguments)},Ib=l._DepthToSpace=function(){return(Ib=l._DepthToSpace=l.asm.W).apply(null,arguments)},Sb=l._DepthwiseConv2dNative=function(){return(Sb=l._DepthwiseConv2dNative=l.asm.X).apply(null,arguments)},Cb=l._Elu=function(){return(Cb=l._Elu=l.asm.Y).apply(null,arguments)},Ip=l._Equal=function(){return(Ip=l._Equal=l.asm.Z).apply(null,arguments)},Sp=l._Exp=function(){return(Sp=l._Exp=l.asm._).apply(null,arguments)},Cp=l._FlipLeftRight=function(){return(Cp=l._FlipLeftRight=l.asm.$).apply(null,arguments)},ll=l._Floor=function(){return(ll=l._Floor=l.asm.aa).apply(null,arguments)},Bi=l._FloorDiv=function(){return(Bi=l._FloorDiv=l.asm.ba).apply(null,arguments)},Tb=l._FusedBatchNorm=function(){return(Tb=l._FusedBatchNorm=l.asm.ca).apply(null,arguments)},dl=l._FusedConv2D=function(){return(dl=l._FusedConv2D=l.asm.da).apply(null,arguments)},Z=l._FusedDepthwiseConv2D=function(){return(Z=l._FusedDepthwiseConv2D=l.asm.ea).apply(null,arguments)},ae=l._Gather=function(){return(ae=l._Gather=l.asm.fa).apply(null,arguments)},ye=l._GatherNd=function(){return(ye=l._GatherNd=l.asm.ga).apply(null,arguments)},Ye=l._Greater=function(){return(Ye=l._Greater=l.asm.ha).apply(null,arguments)},At=l._GreaterEqual=function(){return(At=l._GreaterEqual=l.asm.ia).apply(null,arguments)},xt=l._LeakyRelu=function(){return(xt=l._LeakyRelu=l.asm.ja).apply(null,arguments)},Ue=l._Less=function(){return(Ue=l._Less=l.asm.ka).apply(null,arguments)},je=l._LessEqual=function(){return(je=l._LessEqual=l.asm.la).apply(null,arguments)},sn=l._Log=function(){return(sn=l._Log=l.asm.ma).apply(null,arguments)},xs=l._LogicalAnd=function(){return(xs=l._LogicalAnd=l.asm.na).apply(null,arguments)},ws=l._Max=function(){return(ws=l._Max=l.asm.oa).apply(null,arguments)},Tp=l._MaxPool=function(){return(Tp=l._MaxPool=l.asm.pa).apply(null,arguments)},pl=l._Maximum=function(){return(pl=l._Maximum=l.asm.qa).apply(null,arguments)},Hn=l._Mean=function(){return(Hn=l._Mean=l.asm.ra).apply(null,arguments)},Ks=l._Min=function(){return(Ks=l._Min=l.asm.sa).apply(null,arguments)},Np=l._Minimum=function(){return(Np=l._Minimum=l.asm.ta).apply(null,arguments)},QE=l._MirrorPad=function(){return(QE=l._MirrorPad=l.asm.ua).apply(null,arguments)},eA=l._Multiply=function(){return(eA=l._Multiply=l.asm.va).apply(null,arguments)},tA=l._Neg=function(){return(tA=l._Neg=l.asm.wa).apply(null,arguments)},nA=l._NonMaxSuppressionV3=function(){return(nA=l._NonMaxSuppressionV3=l.asm.xa).apply(null,arguments)},rA=l._NonMaxSuppressionV4=function(){return(rA=l._NonMaxSuppressionV4=l.asm.ya).apply(null,arguments)},sA=l._NonMaxSuppressionV5=function(){return(sA=l._NonMaxSuppressionV5=l.asm.za).apply(null,arguments)},aA=l._NotEqual=function(){return(aA=l._NotEqual=l.asm.Aa).apply(null,arguments)},oA=l._OneHot=function(){return(oA=l._OneHot=l.asm.Ba).apply(null,arguments)},iA=l._PadV2=function(){return(iA=l._PadV2=l.asm.Ca).apply(null,arguments)},cA=l._Pow=function(){return(cA=l._Pow=l.asm.Da).apply(null,arguments)},uA=l._Prelu=function(){return(uA=l._Prelu=l.asm.Ea).apply(null,arguments)},lA=l._Prod=function(){return(lA=l._Prod=l.asm.Fa).apply(null,arguments)},dA=l._RealDiv=function(){return(dA=l._RealDiv=l.asm.Ga).apply(null,arguments)},pA=l._Relu=function(){return(pA=l._Relu=l.asm.Ha).apply(null,arguments)},hA=l._Relu6=function(){return(hA=l._Relu6=l.asm.Ia).apply(null,arguments)},fA=l._ResizeBilinear=function(){return(fA=l._ResizeBilinear=l.asm.Ja).apply(null,arguments)},mA=l._Reverse=function(){return(mA=l._Reverse=l.asm.Ka).apply(null,arguments)},gA=l._RotateWithOffset=function(){return(gA=l._RotateWithOffset=l.asm.La).apply(null,arguments)},bA=l._Round=function(){return(bA=l._Round=l.asm.Ma).apply(null,arguments)},yA=l._Rsqrt=function(){return(yA=l._Rsqrt=l.asm.Na).apply(null,arguments)},vA=l._ScatterNd=function(){return(vA=l._ScatterNd=l.asm.Oa).apply(null,arguments)},xA=l._SelectV2=function(){return(xA=l._SelectV2=l.asm.Pa).apply(null,arguments)},wA=l._Sigmoid=function(){return(wA=l._Sigmoid=l.asm.Qa).apply(null,arguments)},kA=l._Sin=function(){return(kA=l._Sin=l.asm.Ra).apply(null,arguments)},IA=l._Softmax=function(){return(IA=l._Softmax=l.asm.Sa).apply(null,arguments)},SA=l._Sqrt=function(){return(SA=l._Sqrt=l.asm.Ta).apply(null,arguments)},CA=l._Square=function(){return(CA=l._Square=l.asm.Ua).apply(null,arguments)},TA=l._SquaredDifference=function(){return(TA=l._SquaredDifference=l.asm.Va).apply(null,arguments)},NA=l._Step=function(){return(NA=l._Step=l.asm.Wa).apply(null,arguments)},_A=l._StridedSlice=function(){return(_A=l._StridedSlice=l.asm.Xa).apply(null,arguments)},EA=l._Sub=function(){return(EA=l._Sub=l.asm.Ya).apply(null,arguments)},AA=l._Sum=function(){return(AA=l._Sum=l.asm.Za).apply(null,arguments)},DA=l._Tan=function(){return(DA=l._Tan=l.asm._a).apply(null,arguments)},$A=l._Tanh=function(){return($A=l._Tanh=l.asm.$a).apply(null,arguments)},FA=l._Tile=function(){return(FA=l._Tile=l.asm.ab).apply(null,arguments)},RA=l._TopK=function(){return(RA=l._TopK=l.asm.bb).apply(null,arguments)},PA=l._Transform=function(){return(PA=l._Transform=l.asm.cb).apply(null,arguments)},OA=l._Transpose=function(){return(OA=l._Transpose=l.asm.db).apply(null,arguments)},MA=l.__FusedMatMul=function(){return(MA=l.__FusedMatMul=l.asm.eb).apply(null,arguments)},Fa=l._malloc=function(){return(Fa=l._malloc=l.asm.fb).apply(null,arguments)},hl=l._free=function(){return(hl=l._free=l.asm.gb).apply(null,arguments)},O0=l.___errno_location=function(){return(O0=l.___errno_location=l.asm.hb).apply(null,arguments)},M0=l._emscripten_get_global_libc=function(){return(M0=l._emscripten_get_global_libc=l.asm.ib).apply(null,arguments)},zi=l._pthread_self=function(){return(zi=l._pthread_self=l.asm.jb).apply(null,arguments)},L0=l.___pthread_tsd_run_dtors=function(){return(L0=l.___pthread_tsd_run_dtors=l.asm.kb).apply(null,arguments)},Nb=l._emscripten_main_thread_process_queued_calls=function(){return(Nb=l._emscripten_main_thread_process_queued_calls=l.asm.lb).apply(null,arguments)},LA=l._emscripten_current_thread_process_queued_calls=function(){return(LA=l._emscripten_current_thread_process_queued_calls=l.asm.mb).apply(null,arguments)},B0=l._emscripten_register_main_browser_thread_id=function(){return(B0=l._emscripten_register_main_browser_thread_id=l.asm.nb).apply(null,arguments)},z0=l.__emscripten_do_dispatch_to_thread=function(){return(z0=l.__emscripten_do_dispatch_to_thread=l.asm.ob).apply(null,arguments)},W0=l._emscripten_sync_run_in_main_thread_4=function(){return(W0=l._emscripten_sync_run_in_main_thread_4=l.asm.pb).apply(null,arguments)},V0=l._emscripten_run_in_main_runtime_thread_js=function(){return(V0=l._emscripten_run_in_main_runtime_thread_js=l.asm.qb).apply(null,arguments)},_b=l.__emscripten_call_on_thread=function(){return(_b=l.__emscripten_call_on_thread=l.asm.rb).apply(null,arguments)},BA=l._emscripten_tls_init=function(){return(BA=l._emscripten_tls_init=l.asm.sb).apply(null,arguments)},Eb=l.__emscripten_thread_init=function(){return(Eb=l.__emscripten_thread_init=l.asm.tb).apply(null,arguments)},fl=l.stackSave=function(){return(fl=l.stackSave=l.asm.ub).apply(null,arguments)},Wi=l.stackRestore=function(){return(Wi=l.stackRestore=l.asm.vb).apply(null,arguments)},Vi=l.stackAlloc=function(){return(Vi=l.stackAlloc=l.asm.wb).apply(null,arguments)},U0=l._emscripten_stack_set_limits=function(){return(U0=l._emscripten_stack_set_limits=l.asm.xb).apply(null,arguments)},G0=l._memalign=function(){return(G0=l._memalign=l.asm.yb).apply(null,arguments)},H0=l.__emscripten_allow_main_runtime_queued_calls=10016,Ui=l.__emscripten_main_thread_futex=11652;l.cwrap=_e,l.PThread=Se,l.PThread=Se,l.wasmMemory=J,l.ExitStatus=ml;var _p;function ml(S){this.name="ExitStatus",this.message="Program terminated with exit("+S+")",this.status=S}Da=function S(){_p||Ab(),_p||(Da=S)};function Ab(S){if(S=S||m,ys>0)return;if(C){d(l),al(),postMessage({cmd:"loaded"});return}if(ag(),ys>0)return;function A(){_p||(_p=!0,l.calledRun=!0,!ue&&(al(),og(),d(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),Dn()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),A()},1)):A()}l.run=Ab;function zA(S,A){if(!(A&&se&&S===0)){if(!A&&C)throw postMessage({cmd:"exitProcess",returnCode:S}),new ml(S);se||(Se.terminateAllThreads(),le=S,cp(),l.onExit&&l.onExit(S),ue=!0),b(S,new ml(S))}}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();return C&&(se=!1,Se.initWorker()),Ab(),s.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),hD=wt({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.9.0_@tensorflow+tfjs-core@3.9.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(s){s=s||{};var a=typeof s!="undefined"?s:{},o,i;a.ready=new Promise(function(Z,ae){o=Z,i=ae});var c={},u;for(u in a)a.hasOwnProperty(u)&&(c[u]=a[u]);var l=[],d="./this.program",p=function(Z,ae){throw ae},h=!1,f=!1,m=!1,g=!1;h=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g=!h&&!m&&!f;var b="";function y(Z){return a.locateFile?a.locateFile(Z,b):b+Z}var v,x,k,C,N,$;m?(f?b=gl().dirname(b)+"/":b=__dirname+"/",v=function(ae,ye){return N||(N=ji("fs")),$||($=gl()),ae=$.normalize(ae),N.readFileSync(ae,ye?null:"utf8")},k=function(ae){var ye=v(ae,!0);return ye.buffer||(ye=new Uint8Array(ye)),j(ye.buffer),ye},process.argv.length>1&&(d=process.argv[1].replace(/\\/g,"/")),l=process.argv.slice(2),process.on("uncaughtException",function(Z){if(!(Z instanceof Tb))throw Z}),process.on("unhandledRejection",Yr),p=function(Z){process.exit(Z)},a.inspect=function(){return"[Emscripten Module object]"}):g?(typeof read!="undefined"&&(v=function(ae){return read(ae)}),k=function(ae){var ye;return typeof readbuffer=="function"?new Uint8Array(readbuffer(ae)):(ye=read(ae,"binary"),j(typeof ye=="object"),ye)},typeof scriptArgs!="undefined"?l=scriptArgs:typeof arguments!="undefined"&&(l=arguments),typeof quit=="function"&&(p=function(Z){quit(Z)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(h||f)&&(f?b=self.location.href:typeof document!="undefined"&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b.indexOf("blob:")!==0?b=b.substr(0,b.lastIndexOf("/")+1):b="",v=function(Z){var ae=new XMLHttpRequest;return ae.open("GET",Z,!1),ae.send(null),ae.responseText},f&&(k=function(Z){var ae=new XMLHttpRequest;return ae.open("GET",Z,!1),ae.responseType="arraybuffer",ae.send(null),new Uint8Array(ae.response)}),x=function(Z,ae,ye){var Ye=new XMLHttpRequest;Ye.open("GET",Z,!0),Ye.responseType="arraybuffer",Ye.onload=function(){if(Ye.status==200||Ye.status==0&&Ye.response){ae(Ye.response);return}ye()},Ye.onerror=ye,Ye.send(null)},C=function(Z){document.title=Z});var R=a.print||console.log.bind(console),O=a.printErr||console.warn.bind(console);for(u in c)c.hasOwnProperty(u)&&(a[u]=c[u]);c=null,a.arguments&&(l=a.arguments),a.thisProgram&&(d=a.thisProgram),a.quit&&(p=a.quit);var D;a.wasmBinary&&(D=a.wasmBinary);var P=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Yr("no native wasm support detected");var T,L=!1,G;function j(Z,ae){Z||Yr("Assertion failed: "+ae)}function q(Z){var ae=a["_"+Z];return j(ae,"Cannot call unknown function "+Z+", make sure it is exported"),ae}function K(Z,ae,ye,Ye,At){var xt={string:function(Hn){var Ks=0;if(Hn!=null&&Hn!==0){var Np=(Hn.length<<2)+1;Ks=ll(Np),ie(Hn,Ks,Np)}return Ks},array:function(Hn){var Ks=ll(Hn.length);return ue(Hn,Ks),Ks}};function Ue(Hn){return ae==="string"?se(Hn):ae==="boolean"?Boolean(Hn):Hn}var je=q(Z),sn=[],xs=0;if(Ye)for(var ws=0;ws<Ye.length;ws++){var Tp=xt[ye[ws]];Tp?(xs===0&&(xs=Sp()),sn[ws]=Tp(Ye[ws])):sn[ws]=Ye[ws]}var pl=je.apply(null,sn);return pl=Ue(pl),xs!==0&&Cp(xs),pl}function te(Z,ae,ye,Ye){ye=ye||[];var At=ye.every(function(Ue){return Ue==="number"}),xt=ae!=="string";return xt&&At&&!Ye?q(Z):function(){return K(Z,ae,ye,arguments,Ye)}}var ne=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function re(Z,ae,ye){for(var Ye=ae+ye,At=ae;Z[At]&&!(At>=Ye);)++At;if(At-ae>16&&Z.subarray&&ne)return ne.decode(Z.subarray(ae,At));for(var xt="";ae<At;){var Ue=Z[ae++];if(!(Ue&128)){xt+=String.fromCharCode(Ue);continue}var je=Z[ae++]&63;if((Ue&224)==192){xt+=String.fromCharCode((Ue&31)<<6|je);continue}var sn=Z[ae++]&63;if((Ue&240)==224?Ue=(Ue&15)<<12|je<<6|sn:Ue=(Ue&7)<<18|je<<12|sn<<6|Z[ae++]&63,Ue<65536)xt+=String.fromCharCode(Ue);else{var xs=Ue-65536;xt+=String.fromCharCode(55296|xs>>10,56320|xs&1023)}}return xt}function se(Z,ae){return Z?re(Te,Z,ae):""}function J(Z,ae,ye,Ye){if(!(Ye>0))return 0;for(var At=ye,xt=ye+Ye-1,Ue=0;Ue<Z.length;++Ue){var je=Z.charCodeAt(Ue);if(je>=55296&&je<=57343){var sn=Z.charCodeAt(++Ue);je=65536+((je&1023)<<10)|sn&1023}if(je<=127){if(ye>=xt)break;ae[ye++]=je}else if(je<=2047){if(ye+1>=xt)break;ae[ye++]=192|je>>6,ae[ye++]=128|je&63}else if(je<=65535){if(ye+2>=xt)break;ae[ye++]=224|je>>12,ae[ye++]=128|je>>6&63,ae[ye++]=128|je&63}else{if(ye+3>=xt)break;ae[ye++]=240|je>>18,ae[ye++]=128|je>>12&63,ae[ye++]=128|je>>6&63,ae[ye++]=128|je&63}}return ae[ye]=0,ye-At}function ie(Z,ae,ye){return J(Z,Te,ae,ye)}function ue(Z,ae){Ce.set(Z,ae)}function le(Z,ae){return Z%ae>0&&(Z+=ae-Z%ae),Z}var me,Ce,Te,_e,Me,Ae,lt,nt,rt;function et(Z){me=Z,a.HEAP8=Ce=new Int8Array(Z),a.HEAP16=_e=new Int16Array(Z),a.HEAP32=Ae=new Int32Array(Z),a.HEAPU8=Te=new Uint8Array(Z),a.HEAPU16=Me=new Uint16Array(Z),a.HEAPU32=lt=new Uint32Array(Z),a.HEAPF32=nt=new Float32Array(Z),a.HEAPF64=rt=new Float64Array(Z)}var it=a.INITIAL_MEMORY||16777216,Ve,An=[],Tt=[],Un=[],nn=[],vr=!1;Tt.push({func:function(){fp()}});function mn(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)or(a.preRun.shift());Hs(An)}function sr(){vr=!0,Hs(Tt)}function ar(){Hs(Un)}function rn(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)ir(a.postRun.shift());Hs(nn)}function or(Z){An.unshift(Z)}function ir(Z){nn.unshift(Z)}var Gn=0,Xr=null,bs=null;function Gs(Z){Gn++,a.monitorRunDependencies&&a.monitorRunDependencies(Gn)}function Pi(Z){if(Gn--,a.monitorRunDependencies&&a.monitorRunDependencies(Gn),Gn==0&&(Xr!==null&&(clearInterval(Xr),Xr=null),bs)){var ae=bs;bs=null,ae()}}a.preloadedImages={},a.preloadedAudios={};function Yr(Z){a.onAbort&&a.onAbort(Z),Z+="",O(Z),L=!0,G=1,Z="abort("+Z+"). Build with -s ASSERTIONS=1 for more info.";var ae=new WebAssembly.RuntimeError(Z);throw i(ae),ae}function ip(Z,ae){return String.prototype.startsWith?Z.startsWith(ae):Z.indexOf(ae)===0}var ag="data:application/octet-stream;base64,";function al(Z){return ip(Z,ag)}var og="file://";function cp(Z){return ip(Z,og)}var Dn="tfjs-backend-wasm.wasm";al(Dn)||(Dn=y(Dn));function up(Z){try{if(Z==Dn&&D)return new Uint8Array(D);if(k)return k(Z);throw"both async and sync fetching of the wasm failed"}catch(ae){Yr(ae)}}function ig(){if(!D&&(h||f)){if(typeof fetch=="function"&&!cp(Dn))return fetch(Dn,{credentials:"same-origin"}).then(function(Z){if(!Z.ok)throw"failed to load wasm binary file at '"+Dn+"'";return Z.arrayBuffer()}).catch(function(){return up(Dn)});if(x)return new Promise(function(Z,ae){x(Dn,function(ye){Z(new Uint8Array(ye))},ae)})}return Promise.resolve().then(function(){return up(Dn)})}function ys(){var Z={a:pg};function ae(Ue,je){var sn=Ue.exports;a.asm=sn,T=a.asm.i,et(T.buffer),Ve=a.asm.o,Pi("wasm-instantiate")}Gs("wasm-instantiate");function ye(Ue){ae(Ue.instance)}function Ye(Ue){return ig().then(function(je){return WebAssembly.instantiate(je,Z)}).then(Ue,function(je){O("failed to asynchronously prepare wasm: "+je),Yr(je)})}function At(){return!D&&typeof WebAssembly.instantiateStreaming=="function"&&!al(Dn)&&!cp(Dn)&&typeof fetch=="function"?fetch(Dn,{credentials:"same-origin"}).then(function(Ue){var je=WebAssembly.instantiateStreaming(Ue,Z);return je.then(ye,function(sn){return O("wasm streaming compile failed: "+sn),O("falling back to ArrayBuffer instantiation"),Ye(ye)})}):Ye(ye)}if(a.instantiateWasm)try{var xt=a.instantiateWasm(Z,ae);return xt}catch(Ue){return O("Module.instantiateWasm callback failed with error: "+Ue),!1}return At().catch(i),{}}function Hs(Z){for(;Z.length>0;){var ae=Z.shift();if(typeof ae=="function"){ae(a);continue}var ye=ae.func;typeof ye=="number"?ae.arg===void 0?Ve.get(ye)():Ve.get(ye)(ae.arg):ye(ae.arg===void 0?null:ae.arg)}}function Da(){Yr()}function cg(Z,ae,ye){Te.copyWithin(Z,ae,ae+ye)}function ug(){return Te.length}function vs(Z){try{return T.grow(Z-me.byteLength+65535>>>16),et(T.buffer),1}catch(ae){}}function lp(Z){var ae=ug(),ye=2147483648;if(Z>ye)return!1;for(var Ye=1;Ye<=4;Ye*=2){var At=ae*(1+.2/Ye);At=Math.min(At,Z+100663296);var xt=Math.min(ye,le(Math.max(Z,At),65536)),Ue=vs(xt);if(Ue)return!0}return!1}var Oi={mappings:{},buffers:[null,[],[]],printChar:function(Z,ae){var ye=Oi.buffers[Z];ae===0||ae===10?((Z===1?R:O)(re(ye,0)),ye.length=0):ye.push(ae)},varargs:void 0,get:function(){Oi.varargs+=4;var Z=Ae[Oi.varargs-4>>2];return Z},getStr:function(Z){var ae=se(Z);return ae},get64:function(Z,ae){return Z}};function dp(Z){return 0}function lg(Z,ae,ye,Ye,At){}function pp(Z,ae,ye,Ye){for(var At=0,xt=0;xt<ye;xt++){for(var Ue=Ae[ae+xt*8>>2],je=Ae[ae+(xt*8+4)>>2],sn=0;sn<je;sn++)Oi.printChar(Z,Te[Ue+sn]);At+=je}return Ae[Ye>>2]=At,0}function $n(){return 6}function hp(Z){return Ae[Ip()>>2]=Z,Z}function dg(Z){switch(Z){case 30:return 16384;case 85:var ae=2147483648;return ae/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return hp(28),-1}var pg={a:Da,d:cg,e:lp,f:dp,c:lg,b:pp,g:$n,h:dg},hg=ys(),fp=a.___wasm_call_ctors=function(){return(fp=a.___wasm_call_ctors=a.asm.j).apply(null,arguments)},Mi=a._init=function(){return(Mi=a._init=a.asm.k).apply(null,arguments)},ol=a._register_tensor=function(){return(ol=a._register_tensor=a.asm.l).apply(null,arguments)},fg=a._dispose_data=function(){return(fg=a._dispose_data=a.asm.m).apply(null,arguments)},mg=a._dispose=function(){return(mg=a._dispose=a.asm.n).apply(null,arguments)},gg=a._Abs=function(){return(gg=a._Abs=a.asm.p).apply(null,arguments)},Se=a._Add=function(){return(Se=a._Add=a.asm.q).apply(null,arguments)},bg=a._AddN=function(){return(bg=a._AddN=a.asm.r).apply(null,arguments)},yg=a._All=function(){return(yg=a._All=a.asm.s).apply(null,arguments)},vg=a._Any=function(){return(vg=a._Any=a.asm.t).apply(null,arguments)},xg=a._ArgMax=function(){return(xg=a._ArgMax=a.asm.u).apply(null,arguments)},wg=a._AvgPool=function(){return(wg=a._AvgPool=a.asm.v).apply(null,arguments)},$a=a._BatchMatMul=function(){return($a=a._BatchMatMul=a.asm.w).apply(null,arguments)},kg=a._Ceil=function(){return(kg=a._Ceil=a.asm.x).apply(null,arguments)},Ig=a._ClipByValue=function(){return(Ig=a._ClipByValue=a.asm.y).apply(null,arguments)},Sg=a._Conv2D=function(){return(Sg=a._Conv2D=a.asm.z).apply(null,arguments)},Cg=a._Conv2DBackpropInput=function(){return(Cg=a._Conv2DBackpropInput=a.asm.A).apply(null,arguments)},Tg=a._Cos=function(){return(Tg=a._Cos=a.asm.B).apply(null,arguments)},Ng=a._Cosh=function(){return(Ng=a._Cosh=a.asm.C).apply(null,arguments)},_g=a._CropAndResize=function(){return(_g=a._CropAndResize=a.asm.D).apply(null,arguments)},Eg=a._Cumsum=function(){return(Eg=a._Cumsum=a.asm.E).apply(null,arguments)},Ag=a._DepthToSpace=function(){return(Ag=a._DepthToSpace=a.asm.F).apply(null,arguments)},js=a._DepthwiseConv2dNative=function(){return(js=a._DepthwiseConv2dNative=a.asm.G).apply(null,arguments)},il=a._Elu=function(){return(il=a._Elu=a.asm.H).apply(null,arguments)},cl=a._Equal=function(){return(cl=a._Equal=a.asm.I).apply(null,arguments)},Dg=a._Exp=function(){return(Dg=a._Exp=a.asm.J).apply(null,arguments)},$g=a._FlipLeftRight=function(){return($g=a._FlipLeftRight=a.asm.K).apply(null,arguments)},Fg=a._Floor=function(){return(Fg=a._Floor=a.asm.L).apply(null,arguments)},Rg=a._FloorDiv=function(){return(Rg=a._FloorDiv=a.asm.M).apply(null,arguments)},Pg=a._FusedBatchNorm=function(){return(Pg=a._FusedBatchNorm=a.asm.N).apply(null,arguments)},Be=a._FusedConv2D=function(){return(Be=a._FusedConv2D=a.asm.O).apply(null,arguments)},Og=a._FusedDepthwiseConv2D=function(){return(Og=a._FusedDepthwiseConv2D=a.asm.P).apply(null,arguments)},Mg=a._Gather=function(){return(Mg=a._Gather=a.asm.Q).apply(null,arguments)},Lg=a._GatherNd=function(){return(Lg=a._GatherNd=a.asm.R).apply(null,arguments)},Bg=a._Greater=function(){return(Bg=a._Greater=a.asm.S).apply(null,arguments)},zg=a._GreaterEqual=function(){return(zg=a._GreaterEqual=a.asm.T).apply(null,arguments)},Wg=a._LeakyRelu=function(){return(Wg=a._LeakyRelu=a.asm.U).apply(null,arguments)},ul=a._Less=function(){return(ul=a._Less=a.asm.V).apply(null,arguments)},mp=a._LessEqual=function(){return(mp=a._LessEqual=a.asm.W).apply(null,arguments)},gp=a._Log=function(){return(gp=a._Log=a.asm.X).apply(null,arguments)},Vg=a._LogicalAnd=function(){return(Vg=a._LogicalAnd=a.asm.Y).apply(null,arguments)},Ug=a._Max=function(){return(Ug=a._Max=a.asm.Z).apply(null,arguments)},Gg=a._MaxPool=function(){return(Gg=a._MaxPool=a.asm._).apply(null,arguments)},Hg=a._Maximum=function(){return(Hg=a._Maximum=a.asm.$).apply(null,arguments)},jg=a._Mean=function(){return(jg=a._Mean=a.asm.aa).apply(null,arguments)},qg=a._Min=function(){return(qg=a._Min=a.asm.ba).apply(null,arguments)},Kg=a._Minimum=function(){return(Kg=a._Minimum=a.asm.ca).apply(null,arguments)},tt=a._MirrorPad=function(){return(tt=a._MirrorPad=a.asm.da).apply(null,arguments)},Xg=a._Multiply=function(){return(Xg=a._Multiply=a.asm.ea).apply(null,arguments)},Yg=a._Neg=function(){return(Yg=a._Neg=a.asm.fa).apply(null,arguments)},Zg=a._NonMaxSuppressionV3=function(){return(Zg=a._NonMaxSuppressionV3=a.asm.ga).apply(null,arguments)},Li=a._NonMaxSuppressionV4=function(){return(Li=a._NonMaxSuppressionV4=a.asm.ha).apply(null,arguments)},bp=a._NonMaxSuppressionV5=function(){return(bp=a._NonMaxSuppressionV5=a.asm.ia).apply(null,arguments)},yp=a._NotEqual=function(){return(yp=a._NotEqual=a.asm.ja).apply(null,arguments)},vp=a._OneHot=function(){return(vp=a._OneHot=a.asm.ka).apply(null,arguments)},Jg=a._PadV2=function(){return(Jg=a._PadV2=a.asm.la).apply(null,arguments)},Qg=a._Pow=function(){return(Qg=a._Pow=a.asm.ma).apply(null,arguments)},xp=a._Prelu=function(){return(xp=a._Prelu=a.asm.na).apply(null,arguments)},eb=a._Prod=function(){return(eb=a._Prod=a.asm.oa).apply(null,arguments)},wp=a._RealDiv=function(){return(wp=a._RealDiv=a.asm.pa).apply(null,arguments)},qs=a._Relu=function(){return(qs=a._Relu=a.asm.qa).apply(null,arguments)},tb=a._Relu6=function(){return(tb=a._Relu6=a.asm.ra).apply(null,arguments)},nb=a._ResizeBilinear=function(){return(nb=a._ResizeBilinear=a.asm.sa).apply(null,arguments)},P0=a._Reverse=function(){return(P0=a._Reverse=a.asm.ta).apply(null,arguments)},kp=a._RotateWithOffset=function(){return(kp=a._RotateWithOffset=a.asm.ua).apply(null,arguments)},rb=a._Round=function(){return(rb=a._Round=a.asm.va).apply(null,arguments)},sb=a._Rsqrt=function(){return(sb=a._Rsqrt=a.asm.wa).apply(null,arguments)},ab=a._ScatterNd=function(){return(ab=a._ScatterNd=a.asm.xa).apply(null,arguments)},ob=a._SelectV2=function(){return(ob=a._SelectV2=a.asm.ya).apply(null,arguments)},ib=a._Sigmoid=function(){return(ib=a._Sigmoid=a.asm.za).apply(null,arguments)},cb=a._Sin=function(){return(cb=a._Sin=a.asm.Aa).apply(null,arguments)},ub=a._Softmax=function(){return(ub=a._Softmax=a.asm.Ba).apply(null,arguments)},lb=a._Sqrt=function(){return(lb=a._Sqrt=a.asm.Ca).apply(null,arguments)},db=a._Square=function(){return(db=a._Square=a.asm.Da).apply(null,arguments)},pb=a._SquaredDifference=function(){return(pb=a._SquaredDifference=a.asm.Ea).apply(null,arguments)},hb=a._Step=function(){return(hb=a._Step=a.asm.Fa).apply(null,arguments)},fb=a._StridedSlice=function(){return(fb=a._StridedSlice=a.asm.Ga).apply(null,arguments)},mb=a._Sub=function(){return(mb=a._Sub=a.asm.Ha).apply(null,arguments)},gb=a._Sum=function(){return(gb=a._Sum=a.asm.Ia).apply(null,arguments)},bb=a._Tan=function(){return(bb=a._Tan=a.asm.Ja).apply(null,arguments)},yb=a._Tanh=function(){return(yb=a._Tanh=a.asm.Ka).apply(null,arguments)},vb=a._Tile=function(){return(vb=a._Tile=a.asm.La).apply(null,arguments)},xb=a._TopK=function(){return(xb=a._TopK=a.asm.Ma).apply(null,arguments)},wb=a._Transform=function(){return(wb=a._Transform=a.asm.Na).apply(null,arguments)},kb=a._Transpose=function(){return(kb=a._Transpose=a.asm.Oa).apply(null,arguments)},Ib=a.__FusedMatMul=function(){return(Ib=a.__FusedMatMul=a.asm.Pa).apply(null,arguments)},Sb=a._malloc=function(){return(Sb=a._malloc=a.asm.Qa).apply(null,arguments)},Cb=a._free=function(){return(Cb=a._free=a.asm.Ra).apply(null,arguments)},Ip=a.___errno_location=function(){return(Ip=a.___errno_location=a.asm.Sa).apply(null,arguments)},Sp=a.stackSave=function(){return(Sp=a.stackSave=a.asm.Ta).apply(null,arguments)},Cp=a.stackRestore=function(){return(Cp=a.stackRestore=a.asm.Ua).apply(null,arguments)},ll=a.stackAlloc=function(){return(ll=a.stackAlloc=a.asm.Va).apply(null,arguments)};a.cwrap=te;var Bi;function Tb(Z){this.name="ExitStatus",this.message="Program terminated with exit("+Z+")",this.status=Z}bs=function Z(){Bi||dl(),Bi||(bs=Z)};function dl(Z){if(Z=Z||l,Gn>0||(mn(),Gn>0))return;function ae(){Bi||(Bi=!0,a.calledRun=!0,!L&&(sr(),ar(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),rn()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),ae()},1)):ae()}if(a.run=dl,a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();return dl(),s.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),fD=1e-7,mD=1e-4,Dp=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},bl=class{refCount(e){return xr("refCount")}incRef(e){return xr("incRef")}timerAvailable(){return!0}time(e){return xr("time")}read(e){return xr("read")}readSync(e){return xr("readSync")}numDataIds(){return xr("numDataIds")}disposeData(e,t){return xr("disposeData")}write(e,t,n){return xr("write")}move(e,t,n,r,s){return xr("move")}memory(){return xr("memory")}floatPrecision(){return xr("floatPrecision")}epsilon(){return this.floatPrecision()===32?fD:mD}dispose(){return xr("dispose")}};function xr(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Q0(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,$p(e,t,n)}function gD(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,$p(e,n,r),$p(t,n,r)}function yl(e,t,n){return Math.max(e,Math.min(t,n))}function bD(e){return e%2==0?e:e+1}function $p(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function yD(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function vD(e,t){let n=Math.random();return t*n+(1-n)*e}function xD(e,t){let n=0;for(let r=0;r<e.length;r++){let s=Number(e[r])-Number(t[r]);n+=s*s}return n}function F(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function bn(e,t,n=""){F(ks(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Pa(e){F(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Oa(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||dn(e)&&!n)for(let r=0;r<e.length;++r)Oa(e[r],t,n);else t.push(e);return t}function $t(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function wD(e){return e.length===0}function ks(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function qt(e){return e%1==0}function kD(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function ID(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function SD(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Q0(t),t}function vl(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function CD(e,t=r=>0,n){return new Promise((r,s)=>{let a=0,o=()=>{if(e()){r();return}a++;let i=t(a);if(n!=null&&a>=n){s();return}setTimeout(o,i)};o()})}function TD(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(r===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let s=e.slice();return s[r]=t/n,s}function wr(e,t){let n=t.length;return e=e==null?t.map((r,s)=>s):[].concat(e),F(e.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),F(e.every(r=>qt(r)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(r=>r<0?n+r:r)}function e1(e,t){let n=[],r=[],s=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||s?null:wr(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),r.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function t1(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function n1(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function r1(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function s1(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function ND(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function dn(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function Db(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function a1(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Ys(e){return typeof e=="string"||e instanceof String}function o1(e){return typeof e=="boolean"}function i1(e){return typeof e=="number"}function Fp(e){return Array.isArray(e)?Fp(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":i1(e)?"float32":Ys(e)?"string":o1(e)?"bool":"float32"}function Zs(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Rp(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function qi(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function c1(e,t,n,r=!1){let s=new Array;if(t.length===1){let a=t[0]*(r?2:1);for(let o=0;o<a;o++)s[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((c,u)=>c*u)*(r?2:1);for(let c=0;c<a;c++)s[c]=c1(e+c*i,o,n,r)}return s}function Ki(e,t,n=!1){if(e.length===0)return t[0];let r=e.reduce((s,a)=>s*a)*(n?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return c1(0,e,t,n)}function $b(e,t){let n=Pp(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Pp(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function _D(e,t){let n=e.reduce((r,s)=>r*s,1);if(t==null||t==="float32")return Ki(e,new Float32Array(n));if(t==="int32")return Ki(e,new Int32Array(n));if(t==="bool")return Ki(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Fb(e){e.forEach(t=>{F(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function ED(e,t,n){if(t===0)return 0;if(t===1)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function AD(e,t,n){if(t===0)return[];if(t===1)return[e];let r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function Rb(e){return e&&e.then&&typeof e.then=="function"}function Jr(...e){Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn(...e)}function DD(...e){Q().getBool("IS_TEST")||Q().getBool("PROD")||console.log(...e)}var u1="tfjsflags",l1=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=$D,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&Jr(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let r=this.urlFlags[e];Jr(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Rb(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);u1 in e&&e[u1].split(",").forEach(n=>{let[r,s]=n.split(":");this.urlFlags[r]=RD(r,s)})}};function $D(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(FD(t,r[0],r[1]),r.join("="))),t}function FD(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function RD(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Q(){return Ma}var Ma=null;function PD(e){Ma=e}var Pb;function d1(){if(Pb==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");Pb=e}return Pb}function OD(){let e=d1();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function Ob(e,t){let n=OD();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Xi="Abs",Yi="Acos",Zi="Acosh",Js="Add",La="AddN",Ji="All",Qi="Any",Ba="ArgMax",xl="ArgMin",ec="Asin",tc="Asinh",nc="Atan",rc="Atanh",sc="Atan2",za="AvgPool",Op="AvgPoolGrad",wl="AvgPool3D",Mp="AvgPool3DGrad",Wa="BatchMatMul",ac="BatchToSpaceND",Lp="Bincount",p1="BroadcastTo",Mb="BroadcastArgs",Va="Cast",Ua="Ceil",Qs="ClipByValue",Bp="Complex",kl="ComplexAbs",oc="Concat",Ga="Conv2D",zp="Conv2DBackpropFilter",Ha="Conv2DBackpropInput",Il="Conv3D",Wp="Conv3DBackpropFilterV2",Vp="Conv3DBackpropInputV2",ja="Cos",qa="Cosh",Ka="Cumsum",ic="CropAndResize",Up="DenseBincount",cc="DepthToSpace",Xa="DepthwiseConv2dNative",Gp="DepthwiseConv2dNativeBackpropFilter",Hp="DepthwiseConv2dNativeBackpropInput",jp="Diag",Sl="Dilation2D",qp="Dilation2DBackpropInput",Kp="Dilation2DBackpropFilter",Ya="RealDiv",Xp="Einsum",Za="Elu",Yp="EluGrad",uc="Erf",lc="Equal",Ja="Exp",dc="ExpandDims",pc="Expm1",Zp="FFT",Cl="Fill",hc="FlipLeftRight",Qa="Floor",eo="FloorDiv",to="FusedBatchNorm",fc="GatherV2",mc="GatherNd",gc="Greater",no="GreaterEqual",ro="Identity",Jp="IFFT",Qp="Imag",bc="IsFinite",yc="IsInf",vc="IsNan",so="LeakyRelu",xc="Less",wc="LessEqual",eh="LinSpace",ao="Log",kc="Log1p",Ic="LogicalAnd",Tl="LogicalNot",Nl="LogicalOr",h1="LogSoftmax",_l="LRN",th="LRNGrad",oo="Max",io="Maximum",co="MaxPool",nh="MaxPoolGrad",El="MaxPool3D",rh="MaxPool3DGrad",sh="MaxPoolWithArgmax",uo="Mean",lo="Min",po="Minimum",ho="MirrorPad",Sc="Mod",ah="Multinomial",fo="Multiply",Cc="Neg",Tc="NotEqual",Nc="NonMaxSuppressionV3",_c="NonMaxSuppressionV4",Ec="NonMaxSuppressionV5",Ac="OnesLike",mo="OneHot",Dc="Pack",go="PadV2",MD="Pool",bo="Pow",yo="Prelu",$c="Prod",Al="Range",oh="Real",Fc="Reciprocal",vo="Relu",Rc="Reshape",Dl="ResizeNearestNeighbor",ih="ResizeNearestNeighborGrad",xo="ResizeBilinear",ch="ResizeBilinearGrad",wo="Relu6",ko="Reverse",Io="Round",So="Rsqrt",Pc="ScatterNd",Oc="Select",Mc="Selu",Lc="Slice",Co="Sin",Bc="Sinh",zc="Sign",To="Sigmoid",Wc="Softplus",No="Sqrt",_o="Sum",Vc="SpaceToBatchND",Uc="SplitV",Eo="Softmax",uh="SparseFillEmptyRows",lh="SparseReshape",dh="SparseSegmentMean",ph="SparseSegmentSum",hh="SparseToDense",Ao="SquaredDifference",$l="Square",Gc="StridedSlice",fh="StringNGrams",mh="StringSplit",gh="StringToHashBucketFast",Do="Sub",$o="Tan",Fo="Tanh",ea="Tile",Hc="TopK",jc="Transform",Ro="Transpose",bh="Unique",qc="Unpack",Fl="UnsortedSegmentSum",Kc="ZerosLike",ta="Step",yh="FromPixels",Xc="RotateWithOffset",Po="_FusedMatMul",Oo="FusedConv2D",Mo="FusedDepthwiseConv2D",Yc=Ob("kernelRegistry",()=>new Map),Rl=Ob("gradRegistry",()=>new Map);function vh(e,t){let n=Bb(e,t);return Yc.get(n)}function Lb(e){return Rl.get(e)}function xh(e){let t=Yc.entries(),n=[];for(;;){let{done:r,value:s}=t.next();if(r)break;let[a,o]=s,[i]=a.split("_");i===e&&n.push(o)}return n}function Pl(e){let{kernelName:t,backendName:n}=e,r=Bb(t,n);Yc.has(r)&&Jr(`The kernel '${t}' for backend '${n}' is already registered`),Yc.set(r,e)}function f1(e){let{kernelName:t}=e;Rl.has(t)&&Q().getBool("DEBUG")&&Jr(`Overriding the gradient for '${t}'`),Rl.set(t,e)}function LD(e,t){let n=Bb(e,t);if(!Yc.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Yc.delete(n)}function BD(e){if(!Rl.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Rl.delete(e)}function zD(e,t){xh(e).forEach(r=>{let s=Object.assign({},r,{backendName:t});Pl(s)})}function Bb(e,t){return`${t}_${e}`}var w={};Re(w,{arraysEqual:()=>ks,assert:()=>F,assertNonNegativeIntegerDimensions:()=>Fb,assertNonNull:()=>Pa,assertShapesMatch:()=>bn,bytesFromStringArray:()=>a1,bytesPerElement:()=>Db,checkConversionForErrors:()=>r1,clamp:()=>yl,computeStrides:()=>qi,createScalarValue:()=>jD,createShuffledIndices:()=>SD,decodeString:()=>Ih,distSquared:()=>xD,encodeString:()=>Ll,fetch:()=>KD,fingerPrint64:()=>HD,flatten:()=>Oa,getArrayFromDType:()=>n1,getTypedArrayFromDType:()=>t1,hasEncodingLoss:()=>ND,hexToLong:()=>Ol,indexToLoc:()=>AD,inferDtype:()=>Fp,inferFromImplicitShape:()=>TD,isBoolean:()=>o1,isFunction:()=>Zs,isInt:()=>qt,isNumber:()=>i1,isPromise:()=>Rb,isScalarShape:()=>wD,isString:()=>Ys,isTypedArray:()=>dn,isValidDtype:()=>s1,locToIndex:()=>ED,makeOnesTypedArray:()=>$b,makeZerosNestedTypedArray:()=>_D,makeZerosTypedArray:()=>Pp,nearestDivisor:()=>Rp,nearestLargerEven:()=>bD,now:()=>Ml,parseAxisParam:()=>wr,randUniform:()=>vD,repeatedTry:()=>CD,rightPad:()=>vl,shuffle:()=>Q0,shuffleCombo:()=>gD,sizeFromShape:()=>$t,sizeToSquarishShape:()=>ID,squeezeShape:()=>e1,sum:()=>yD,swap:()=>$p,tanh:()=>kD,toNestedArray:()=>Ki,toTypedArray:()=>kh});var m1=Ra(KA()),Lo=m1.default||m1;function Ol(e){return Lo.fromString(e,!0,16)}var g1=Ol("c3a5c85c97cb3127"),Bo=Ol("b492b66fbe98f273"),yn=Ol("9ae16a3b2f90404f");function zb(e){return e.xor(e.shru(47))}function b1(e,t,n){let r=e.slice(t,t+n);return Lo.fromBytes(Array.from(r),!0,!0)}function ft(e,t){return b1(e,t,8)}function y1(e,t){return b1(e,t,4)}function Kt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function na(e,t,n=Ol("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function WD(e,t,n,r,s,a){s=s.add(e),a=Kt(a.add(s).add(r),21);let o=s;return s=s.add(t),s=s.add(n),a=a.add(Kt(s,44)),[s.add(r),a.add(o)]}function wh(e,t,n,r){return WD(ft(e,t),ft(e,t+8),ft(e,t+16),ft(e,t+24),n,r)}function VD(e,t=e.length){if(t>=8){let n=yn.add(t*2),r=ft(e,0).add(yn),s=ft(e,t-8),a=Kt(s,37).mul(n).add(r),o=Kt(r,25).add(s).mul(n);return na(a,o,n)}if(t>=4){let n=yn.add(t*2),r=y1(e,0);return na(r.shl(3).add(t),y1(e,t-4),n)}if(t>0){let n=e[0],r=e[t>>1],s=e[t-1],a=n+(r<<8),o=t+(s<<2);return zb(yn.mul(a).xor(g1.mul(o))).mul(yn)}return yn}function UD(e,t=e.length){let n=yn.add(t*2),r=ft(e,0).mul(Bo),s=ft(e,8),a=ft(e,t-8).mul(n),o=ft(e,t-16).mul(yn);return na(Kt(r.add(s),43).add(Kt(a,30)).add(o),r.add(Kt(s.add(yn),18)).add(a),n)}function GD(e,t=e.length){let n=yn.add(t*2),r=ft(e,0).mul(yn),s=ft(e,8),a=ft(e,t-8).mul(n),o=ft(e,t-16).mul(yn),i=Kt(r.add(s),43).add(Kt(a,30)).add(o),c=na(i,r.add(Kt(s.add(yn),18)).add(a),n),u=ft(e,16).mul(n),l=ft(e,24),d=i.add(ft(e,t-32)).mul(n),p=c.add(ft(e,t-24)).mul(n);return na(Kt(u.add(l),43).add(Kt(d,30)).add(p),u.add(Kt(l.add(r),18)).add(d),n)}function HD(e,t=e.length){let n=Lo.fromNumber(81,!0);if(t<=32)return t<=16?VD(e,t):UD(e,t);if(t<=64)return GD(e,t);let r=n,s=n.mul(Bo).add(113),a=zb(s.mul(yn).add(113)).mul(yn),o=[Lo.UZERO,Lo.UZERO],i=[Lo.UZERO,Lo.UZERO];r=r.mul(yn).add(ft(e,0));let c=0,u=(t-1>>6)*64,l=u+(t-1&63)-63;do r=Kt(r.add(s).add(o[0]).add(ft(e,c+8)),37).mul(Bo),s=Kt(s.add(o[1]).add(ft(e,c+48)),42).mul(Bo),r=r.xor(i[1]),s=s.add(o[0]).add(ft(e,c+40)),a=Kt(a.add(i[0]),33).mul(Bo),o=wh(e,c,o[1].mul(Bo),r.add(i[0])),i=wh(e,c+32,a.add(i[1]),s.add(ft(e,c+16))),[a,r]=[r,a],c+=64;while(c!==u);let d=Bo.add(a.and(255).shl(1));return c=l,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),r=Kt(r.add(s).add(o[0]).add(ft(e,c+8)),37).mul(d),s=Kt(s.add(o[1]).add(ft(e,c+48)),42).mul(d),r=r.xor(i[1].mul(9)),s=s.add(o[0].mul(9).add(ft(e,c+40))),a=Kt(a.add(i[0]),33).mul(d),o=wh(e,c,o[1].mul(d),r.add(i[0])),i=wh(e,c+32,a.add(i[1]),s.add(ft(e,c+16))),[a,r]=[r,a],na(na(o[0],i[0],d).add(zb(s).mul(g1)).add(a),na(o[1],i[1],d).add(r),d)}function jD(e,t){return t==="string"?Ll(e):kh([e],t)}function qD(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function kh(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Oa(e)),Q().getBool("DEBUG")&&r1(e,t),qD(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let r=0;r<n.length;++r)Math.round(e[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Ml(){return Q().platform.now()}function KD(e,t){return Q().platform.fetch(e,t)}function Ll(e,t="utf-8"){return t=t||"utf-8",Q().platform.encode(e,t)}function Ih(e,t="utf-8"){return t=t||"utf-8",Q().platform.decode(e,t)}var XD=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new ZD)}profileKernel(e,t,n){let r,s=()=>{r=n()},a,o=Ml();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let c of r)c.dataSync();a=Promise.resolve({kernelMs:Ml()-o})}if(Q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){let u=r[c];u.data().then(l=>{YD(l,u.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),r,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],s,i[2])})})}};function YD(e,t,n){if(t!=="float32")return!1;for(let r=0;r<e.length;r++){let s=e[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}var ZD=class{logKernelProfile(e,t,n,r,s,a){let o=typeof r=="number"?vl(`${r}ms`,9):r.error,i=vl(e,25),c=t.rank,u=t.size,l=vl(t.shape.toString(),14),d="";for(let p in s){let h=s[p];if(h!=null){let f=h.shape||t.shape,m=f.length;d+=`${p}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${c}D ${l}	%c${u}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function JD(e,t,n){let r={},s={};for(let c=0;c<t.length;c++)r[t[c].id]=!0;for(let c=0;c<e.length;c++){let u=e[c],l=u.inputs;for(let d in l){let p=l[d],h=!1;for(let f=0;f<t.length;f++)if(r[p.id]){u.outputs.forEach(m=>r[m.id]=!0),h=!0,s[u.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let o={};for(let c=e.length-1;c>=0;c--){let u=e[c],l=u.inputs;for(let d=0;d<u.outputs.length;d++)if(a[u.outputs[d].id]){for(let p in l)a[l[p].id]=!0,o[u.id]=!0;break}}let i=[];for(let c=0;c<e.length;c++){let u=e[c];if(s[u.id]&&o[u.id]){let l={};for(let p in u.inputs){let h=u.inputs[p];r[h.id]&&(l[p]=h)}let d=Object.assign({},u);d.inputs=l,d.outputs=u.outputs,i.push(d)}}return i}function QD(e,t,n,r){for(let s=t.length-1;s>=0;s--){let a=t[s],o=[];if(a.outputs.forEach(c=>{let u=e[c.id];u!=null?o.push(u):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let c in a.inputs){if(!(c in i))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(i)}.`);let u=n(()=>i[c]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${u.dtype}'`);let l=a.inputs[c];if(!ks(u.shape,l.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${c}' has shape '${u.shape}', which does not match the shape of the input '${l.shape}'`);if(e[l.id]==null)e[l.id]=u;else{let d=e[l.id];e[l.id]=r(d,u),d.dispose()}}}}var v1=20,Bl=3,Wb=7;function e$(e,t,n,r){let s=qi(t),a=t$(e,t,n,s),o=t.length,i=Sh(e,t,n,s,a),c=["Tensor"];return r&&(c.push(`  dtype: ${n}`),c.push(`  rank: ${o}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(i.map(u=>"    "+u).join(`
`)),c.join(`
`)}function t$(e,t,n,r){let s=$t(t),a=r[r.length-1],o=new Array(a).fill(0),i=t.length,c=n==="complex64"?Wl(e):e;if(i>1)for(let u=0;u<s/a;u++){let l=u*a;for(let d=0;d<a;d++)o[d]=Math.max(o[d],zl(c[l+d],0,n).length)}return o}function zl(e,t,n){let r;return Array.isArray(e)?r=`${parseFloat(e[0].toFixed(Wb))} + ${parseFloat(e[1].toFixed(Wb))}j`:Ys(e)?r=`'${e}'`:n==="bool"?r=x1(e):r=parseFloat(e.toFixed(Wb)).toString(),vl(r,t)}function x1(e){return e===0?"false":"true"}function Sh(e,t,n,r,s,a=!0){let o=n==="complex64"?2:1,i=t[0],c=t.length;if(c===0){if(n==="complex64"){let m=Wl(e);return[zl(m[0],0,n)]}return n==="bool"?[x1(e[0])]:[e[0].toString()]}if(c===1){if(i>v1){let g=Bl*o,b=Array.from(e.slice(0,g)),y=Array.from(e.slice((i-Bl)*o,i*o));return n==="complex64"&&(b=Wl(b),y=Wl(y)),["["+b.map((v,x)=>zl(v,s[x],n)).join(", ")+", ..., "+y.map((v,x)=>zl(v,s[i-Bl+x],n)).join(", ")+"]"]}let m=n==="complex64"?Wl(e):Array.from(e);return["["+m.map((g,b)=>zl(g,s[b],n)).join(", ")+"]"]}let u=t.slice(1),l=r.slice(1),d=r[0]*o,p=[];if(i>v1){for(let m=0;m<Bl;m++){let g=m*d,b=g+d;p.push(...Sh(e.slice(g,b),u,n,l,s,!1))}p.push("...");for(let m=i-Bl;m<i;m++){let g=m*d,b=g+d;p.push(...Sh(e.slice(g,b),u,n,l,s,m===i-1))}}else for(let m=0;m<i;m++){let g=m*d,b=g+d;p.push(...Sh(e.slice(g,b),u,n,l,s,m===i-1))}let h=c===2?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=`,
`;for(let m=2;m<c;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Wl(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Wt=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=$t(e),n!=null){let r=n.length;F(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||n1(t,this.size),this.strides=qi(e)}set(e,...t){t.length===0&&(t=[0]),F(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Qr().makeTensor(this.values,this.shape,this.dtype)}},Qr=null,Zc=null,n$=null;function r$(e){Qr=e}function s$(e){Zc=e}function a$(e){n$=e}var Ee=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=$t(e),this.strides=qi(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Zc.buffer(this.shape,this.dtype,e)}bufferSync(){return Zc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Ki(this.shape,e,this.dtype==="complex64")}arraySync(){return Ki(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Qr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Ih(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Qr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Ih(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Qr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Qr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Zc.print(this,e)}clone(){return this.throwIfDisposed(),Zc.clone(this)}toString(e=!1){let t=this.dataSync();return e$(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Zc.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Qr().makeVariable(this,e,t,n)}};Object.defineProperty(Ee,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function ee(){return Ob("Tensor",()=>Ee)}ee();var ra=class extends Ee{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ks(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Qr().disposeTensor(this),this.dataId=e.dataId,Qr().incRef(this,null)}dispose(){Qr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(ra,Symbol.hasInstance,{value:e=>e instanceof Ee&&e.assign!=null&&e.assign instanceof Function});var $r={};Re($r,{assertTypesMatch:()=>w1,getTensorsInContainer:()=>qb,isTensorInList:()=>i$,makeTypesMatch:()=>Nt});var Vb;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(Vb||(Vb={}));var Ub;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(Ub||(Ub={}));var Gb;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(Gb||(Gb={}));var Hb;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(Hb||(Hb={}));var jb;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(jb||(jb={}));var o$={float32:Hb,int32:Ub,bool:Gb,complex64:jb};function kr(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return o$[e][t]}function Ch(e){return kr(e,"int32")}function Nt(e,t){if(e.dtype===t.dtype)return[e,t];let n=kr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function w1(e,t){F(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function i$(e,t){return t.some(n=>n.id===e.id)}function qb(e){let t=[],n=new Set;return k1(e,t,n),t}function k1(e,t,n){if(e==null)return;if(e instanceof Ee){t.push(e);return}if(!c$(e))return;let r=e;for(let s in r){let a=r[s];n.has(a)||(n.add(a),k1(a,t,n))}}function c$(e){return Array.isArray(e)||typeof e=="object"}function Kb(e){return e.kernelName!=null}var I1=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Vl=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new I1}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Jr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new XD(this.backendInstance),!0}setupRegisteredKernels(){xh(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){xh(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof bl)&&typeof n.then=="function"){let r=++this.pendingBackendInitId,s=n.then(a=>r<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Jr(`Initialization of backend ${e} failed`),Jr(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Jr(`Initialization of backend ${e} failed`),Jr(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let r;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,n){e();try{let r=n();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Vl.nextTensorId++}nextVariableId(){return Vl.nextVariableId++}clone(e){let t=B.runKernel(ro,{x:e}),n={x:e},r=a=>({x:()=>{let o="float32",i={x:a},c={dtype:o};return B.runKernel(Va,i,c)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(vh(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),s=0;n.forEach(i=>{s+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,c=Kb(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Kb(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=vh(h,this.backendName);F(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),o=()=>{let b=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let y=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,b,y);let v=y.map(x=>{if(x.rank!=null)return x;let{dataId:k,shape:C,dtype:N}=x;return this.makeTensorFromDataId(k,C,N)});if(r){let x=this.getTensorsForGradient(h,f,v);n=this.saveTensorsForBackwardMode(x)}return v}}else{let{forwardFunc:h}=e,f=m=>{!r||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>h(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,m,g),g}}let{inputs:u,attrs:l}=e,d=Kb(e)?null:e.backwardsFunc,p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(p=this.profiler.profileKernel(c,u,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),r&&this.addTapeNode(c,u,t,d,n,l),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(h=>u[h]!=null?u[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let r=Lb(e);if(r!=null){let s=r.inputsToSave||[],a=r.outputsToSave||[],o;r.saveAllInputs?(F(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(c=>t[c])):o=s.map(c=>t[c]);let i=n.filter((c,u)=>a[u]);return o.concat(i)}return[]}makeTensor(e,t,n,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;n==="string"&&Ys(e[0])&&(s=e.map(i=>Ll(i)));let a=r.write(s,t,n),o=new Ee(t,n,a,this.nextTensorId());if(this.trackTensor(o,r),n==="string"){let i=this.state.tensorInfo.get(a),c=a1(s);this.state.numBytes+=c-i.bytes,i.bytes=c}return o}makeTensorFromDataId(e,t,n,r){n=n||"float32";let s=new Ee(t,n,e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));let s=new ra(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Db(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ra||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Db(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,r,s,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=Lb(e);i!=null&&(r=i.gradFunc),r!=null&&(o.gradient=c=>(c=c.map((u,l)=>{if(u==null){let d=n[l],p=Pp(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return u}),r(c.length>1?c:c[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=qb(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===r.id&&this.track(s)})}gradients(e,t,n,r=!1){if(F(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));F(s instanceof Ee,()=>"The result y returned by f() must be a tensor.");let a=JD(this.state.activeTape,t,s);if(!r&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[s.id]=n==null?u$(s.shape):n,QD(o,a,c=>this.tidy(c),l$);let i=t.map(c=>o[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let u of c.saved)u.dispose()}),this.state.activeTape=null),{value:s,grads:i}})}customGrad(e){return F(Zs(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{F(t.every(o=>o instanceof Ee),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,r={};t.forEach((o,i)=>{r[i]=o});let s=(o,i)=>(n=e(...t,i),F(n.value instanceof Ee,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(Zs(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let c=n.gradFunc(o,i),u=Array.isArray(c)?c:[c];F(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(u.every(d=>d instanceof Ee),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let l={};return u.forEach((d,p)=>{l[p]=()=>d}),l};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=Ml(),n=await this.backend.time(e);return n.wallMs=Ml()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new I1;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};Vl.nextTensorId=0;Vl.nextVariableId=0;function u$(e){let t=$b($t(e),"float32");return B.makeTensor(t,e,"float32")}function S1(){let e=d1();if(e._tfengine==null){let t=new l1(e);e._tfengine=new Vl(t)}return PD(e._tfengine.ENV),r$(()=>e._tfengine),e._tfengine}var B=S1();function l$(e,t){let n={a:e,b:t};return B.runKernel(Js,n)}var Ul={};Re(Ul,{isBrowser:()=>C1,isMobile:()=>p$});function d$(){return typeof navigator!="undefined"&&navigator!=null}function p$(e){if(e||d$()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function C1(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Fr=Q();Fr.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Fr.registerFlag("IS_BROWSER",()=>C1());Fr.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Fr.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Fr.registerFlag("PROD",()=>!1);Fr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Fr.getBool("DEBUG"));Fr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Fr.registerFlag("IS_TEST",()=>!1);Fr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Fr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function es(e,t){let n=e;if(dn(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||dn(n)&&t!=="string";)r.push(n.length),n=n[0];return Array.isArray(e)&&Q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&T1(e,r,[]),r}function T1(e,t,n){if(n=n||[],!Array.isArray(e)&&!dn(e)){F(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}F(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),F(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let s=0;s<e.length;++s)T1(e[s],r,n.concat(s))}function N1(e,t,n,r){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function E(e,t,n,r="numeric"){if(e instanceof Ee)return N1(r,e.dtype,t,n),e;let s=Fp(e);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),N1(r,s,t,n),e==null||!dn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let c=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${c}'`)}let a=es(e,s);!dn(e)&&!Array.isArray(e)&&(e=[e]);let i=s!=="string"?kh(e,s):Oa(e,[],!0);return B.makeTensor(i,a,s)}function Gl(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>E(a,`${t}[${o}]`,n,r))}var _1="__op";function W(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+_1;let s=(...a)=>{B.startScope(n);try{let o=r(...a);return Rb(o)&&console.error("Cannot return a Promise inside of tidy."),B.endScope(o),o}catch(o){throw B.endScope(null),o}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}function h$(e,t){let n=E(e,"real","complex"),r=E(t,"imag","complex");bn(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let s={real:n,imag:r};return B.runKernel(Bp,s)}var sa=W({complex_:h$});function aa(e,t,n,r){if(r==null&&(r=Fp(e)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!dn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Fb(t);let s=$t(t),a=$t(n);F(s===a,()=>`Based on the provided shape, [${t}], the tensor should have ${s} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],c=o===n.length-1?i!==$t(t.slice(o)):!0;F(n[o]===t[o]||!c,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!dn(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=r!=="string"?kh(e,r):Oa(e,[],!0),B.makeTensor(e,t,r)}function jn(e,t,n){let r=es(e,n);return aa(e,t,r,n)}var Xb={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Th=4;async function f$(e,t){let n=[],r=[],s=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<s.length;++o){let i=s[o],c=Array.isArray(e)?e[o].tensor:e[i];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${c.dtype}`);let u={name:i,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){let l=new Promise(async d=>{let p=await c.bytes(),h=p.reduce((g,b)=>g+b.length,0)+Th*p.length,f=new Uint8Array(h),m=0;for(let g=0;g<p.length;g++){let b=p[g],y=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(y,m),m+=Th,f.set(b,m),m+=b.length}d(f)});r.push(l)}else r.push(c.data());t!=null&&(u.group=t),n.push(u)}let a=await Promise.all(r);return{data:m$(a),specs:n}}function E1(e,t){let n={},r,s=0;for(let a of t){let o=a.name,i=a.dtype,c=a.shape,u=$t(c),l;if("quantization"in a){let d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let p=Xb[d.dtype],h=e.slice(s,s+u*p),f=d.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){l=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];l[m]=g*d.scale+d.min}}else if(d.dtype==="float16")r===void 0&&(r=w$()),l=r(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);l=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];l[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);s+=u*p}else if(i==="string"){let d=$t(a.shape);l=[];for(let p=0;p<d;p++){let h=new Uint32Array(e.slice(s,s+Th))[0];s+=Th;let f=new Uint8Array(e.slice(s,s+h));l.push(f),s+=h}}else{let d=Xb[i],p=e.slice(s,s+u*d);if(i==="float32")l=new Float32Array(p);else if(i==="int32")l=new Int32Array(p);else if(i==="bool")l=new Uint8Array(p);else if(i==="complex64"){l=new Float32Array(p);let h=new Float32Array(l.length/2),f=new Float32Array(l.length/2);for(let b=0;b<h.length;b++)h[b]=l[b*2],f[b]=l[b*2+1];let m=jn(h,c,"float32"),g=jn(f,c,"float32");n[o]=sa(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);s+=u*d}i!=="complex64"&&(n[o]=jn(l,c,i))}return n}function m$(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let r=new Uint8Array(t),s=0;return n.forEach(a=>{r.set(new Uint8Array(a.buffer),s),s+=a.byteLength}),r.buffer}var Yb=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function A1(e){return Yb?Buffer.byteLength(e):new Blob([e]).size}function g$(e){if(Yb)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function b$(e){if(Yb){let r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function Zb(e){if(e.length===1)return e[0];let t=0;e.forEach(s=>{t+=s.byteLength});let n=new Uint8Array(t),r=0;return e.forEach(s=>{n.set(new Uint8Array(s),r),r+=s.byteLength}),n.buffer}function D1(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function $1(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function Jb(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Hl(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:A1(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:A1(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function y$(){let e=n=>{let r=n<<13,s=0;for(;(r&8388608)==0;)s-=8388608,r<<=1;return r&=~8388608,s+=947912704,r|s},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function v$(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function x$(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function w$(){let e=y$(),t=v$(),n=x$();return r=>{let s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let o=0;o<r.length;o++){let i=r[o],c=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=c}return new Float32Array(s)}}var Dt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Dt.instance==null&&(Dt.instance=new Dt),Dt.instance}static registerSaveRouter(e){Dt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Dt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Dt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Dt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return(t==="load"?Dt.getInstance().loadRouters:Dt.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&r.push(o)}),r}},k$=e=>Dt.registerSaveRouter(e),I$=e=>Dt.registerLoadRouter(e),S$=e=>Dt.getSaveHandlers(e),C$=(e,t)=>Dt.getLoadHandlers(e,t),Qb="tensorflowjs",ey=1,zo="models_store",oa="model_info_store";function F1(){if(!Q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ty(e){let t=e.result;t.createObjectStore(zo,{keyPath:"modelPath"}),t.createObjectStore(oa,{keyPath:"modelPath"})}var Wo=class{constructor(e){if(this.indexedDB=F1(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,r)=>{let s=this.indexedDB.open(Qb,ey);s.onupgradeneeded=()=>ty(s),s.onsuccess=()=>{let a=s.result;if(t==null){let o=a.transaction(zo,"readonly"),c=o.objectStore(zo).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=u=>(a.close(),r(c.error)),o.oncomplete=()=>a.close()}else{let o=Hl(t),i=a.transaction(oa,"readwrite"),c=i.objectStore(oa),u=c.put({modelPath:this.modelPath,modelArtifactsInfo:o}),l;u.onsuccess=()=>{l=a.transaction(zo,"readwrite");let p=l.objectStore(zo).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});p.onsuccess=()=>n({modelArtifactsInfo:o}),p.onerror=h=>{c=i.objectStore(oa);let f=c.delete(this.modelPath);f.onsuccess=()=>(a.close(),r(p.error)),f.onerror=m=>(a.close(),r(p.error))}},u.onerror=d=>(a.close(),r(u.error)),i.oncomplete=()=>{l==null?a.close():l.oncomplete=()=>a.close()}}},s.onerror=a=>r(s.error)})}};Wo.URL_SCHEME="indexeddb://";var R1=e=>Q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Wo.URL_SCHEME)?T$(e.slice(Wo.URL_SCHEME.length)):null;Dt.registerSaveRouter(R1);Dt.registerLoadRouter(R1);function T$(e){return new Wo(e)}function N$(e){return e.startsWith(Wo.URL_SCHEME)?e.slice(Wo.URL_SCHEME.length):e}var _$=class{constructor(){this.indexedDB=F1()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(Qb,ey);n.onupgradeneeded=()=>ty(n),n.onsuccess=()=>{let r=n.result,s=r.transaction(oa,"readonly"),o=s.objectStore(oa).getAll();o.onsuccess=()=>{let i={};for(let c of o.result)i[c.modelPath]=c.modelArtifactsInfo;e(i)},o.onerror=i=>(r.close(),t(o.error)),s.oncomplete=()=>r.close()},n.onerror=r=>t(n.error)})}async removeModel(e){return e=N$(e),new Promise((t,n)=>{let r=this.indexedDB.open(Qb,ey);r.onupgradeneeded=()=>ty(r),r.onsuccess=()=>{let s=r.result,a=s.transaction(oa,"readwrite"),o=a.objectStore(oa),i=o.get(e),c;i.onsuccess=()=>{if(i.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let u=o.delete(e),l=()=>{c=s.transaction(zo,"readwrite");let p=c.objectStore(zo).delete(e);p.onsuccess=()=>t(i.result.modelArtifactsInfo),p.onerror=h=>n(i.error)};u.onsuccess=l,u.onerror=d=>(l(),s.close(),n(i.error))}},i.onerror=u=>(s.close(),n(i.error)),a.oncomplete=()=>{c==null?s.close():c.oncomplete=()=>s.close()}},r.onerror=s=>n(r.error)})}},Is="/",Jc="tensorflowjs_models",P1="info",E$="model_topology",A$="weight_specs",D$="weight_data",$$="model_metadata";function O1(e){return{info:[Jc,e,P1].join(Is),topology:[Jc,e,E$].join(Is),weightSpecs:[Jc,e,A$].join(Is),weightData:[Jc,e,D$].join(Is),modelMetadata:[Jc,e,$$].join(Is)}}function M1(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function F$(e){let t=e.split(Is);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Is)}function R$(e){return e.startsWith(Vo.URL_SCHEME)?e.slice(Vo.URL_SCHEME.length):e}var Vo=class{constructor(e){if(!Q().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=O1(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Hl(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,g$(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(s){throw M1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let o=JSON.parse(s);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=b$(a),t}};Vo.URL_SCHEME="localstorage://";var L1=e=>Q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Vo.URL_SCHEME)?P$(e.slice(Vo.URL_SCHEME.length)):null;Dt.registerSaveRouter(L1);Dt.registerLoadRouter(L1);function P$(e){return new Vo(e)}var O$=class{constructor(){F(Q().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Jc+Is,n=Is+P1;for(let r=0;r<this.LS.length;++r){let s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){let a=F$(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=R$(e);let t=O1(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return M1(t),n}},Qc="://",cr=class{constructor(){this.managers={}}static getInstance(){return cr.instance==null&&(cr.instance=new cr),cr.instance}static registerManager(e,t){F(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Qc)&&(e=e.slice(0,e.indexOf(Qc))),F(e.length>0,()=>"scheme must not be an empty string.");let n=cr.getInstance();F(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Nh(e){if(e.indexOf(Qc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${cr.getSchemes().join(",")}`);return{scheme:e.split(Qc)[0],path:e.split(Qc)[1]}}async function B1(e,t,n=!1){F(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=Dt.getLoadHandlers(e);F(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),F(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let s=r[0],a=Dt.getSaveHandlers(t);F(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),F(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let o=a[0],i=Nh(e).scheme,c=Nh(e).path,u=i===Nh(e).scheme,l=await s.load();n&&u&&await cr.getManager(i).removeModel(c);let d=await o.save(l);return n&&!u&&await cr.getManager(i).removeModel(c),d.modelArtifactsInfo}async function M$(){let e=cr.getSchemes(),t={};for(let n of e){let r=await cr.getManager(n).listModels();for(let s in r){let a=n+Qc+s;t[a]=r[s]}}return t}async function L$(e){let t=Nh(e);return cr.getManager(t.scheme).removeModel(t.path)}async function B$(e,t){return B1(e,t,!1)}async function z$(e,t){return B1(e,t,!0)}var W$=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(Q().get("IS_BROWSER")){Q().setPlatform("browser",new W$);try{cr.registerManager(Vo.URL_SCHEME,new O$)}catch(e){}try{cr.registerManager(Wo.URL_SCHEME,new _$)}catch(e){}}var V$={importFetch:()=>XA()},ny,U$=class{constructor(){this.util=ji("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Q().global.fetch!=null?Q().global.fetch(e,t):(ny==null&&(ny=V$.importFetch()),ny(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Q().get("IS_NODE")&&Q().setPlatform("node",new U$);function ze(e,t="float32",n){return t=t||"float32",Fb(e),new Wt(e,t,n)}function G$(e,t){let n=E(e,"x","cast");if(!s1(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:n},s={dtype:t};return B.runKernel(Va,r,s)}var ce=W({cast_:G$});function H$(e){let n={x:E(e,"x","clone","string_or_numeric")};return B.runKernel(ro,n)}var Ss=W({clone_:H$});function z1(e,t=!1){console.log(e.toString(t))}S1();var j$={buffer:ze,cast:ce,clone:Ss,print:z1};s$(j$);var Xt={};Re(Xt,{browserFiles:()=>Q$,browserHTTPRequest:()=>sF,concatenateArrayBuffers:()=>Zb,copyModel:()=>B$,decodeWeights:()=>E1,encodeWeights:()=>f$,fromMemory:()=>oF,getLoadHandlers:()=>C$,getModelArtifactsForJSON:()=>Jb,getModelArtifactsInfoForJSON:()=>Hl,getSaveHandlers:()=>S$,http:()=>ay,isHTTPScheme:()=>sy,listModels:()=>M$,loadWeights:()=>eF,moveModel:()=>z$,registerLoadRouter:()=>I$,registerSaveRouter:()=>k$,removeModel:()=>L$,weightsLoaderFactory:()=>G1,withSaveHandler:()=>iF});var q$="model",K$=".json",X$=".weights.bin";function W1(e){return new Promise(t=>setTimeout(t)).then(e)}var eu=class{constructor(e){if(!Q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(eu.URL_SCHEME)&&(e=e.slice(eu.URL_SCHEME.length)),(e==null||e.length===0)&&(e=q$),this.modelJsonFileName=e+K$,this.weightDataFileName=e+X$}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=$1(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await W1(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await W1(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Hl(e)}}}};eu.URL_SCHEME="downloads://";var Y$=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=r=>{let s=JSON.parse(r.target.result),a=s.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=Jb(s,c=>this.loadWeights(c));e(i)},n.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let r=this.checkManifestAndWeightFiles(e),s=n.map(a=>this.loadWeightsFile(a,r[a]));return Promise.all(s).then(a=>[t,Zb(a)])}loadWeightsFile(e,t){return new Promise((n,r)=>{let s=new FileReader;s.onload=a=>{let o=a.target.result;n(o)},s.onerror=a=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>D1(s.name)),r={};for(let s of e)s.paths.forEach(a=>{let o=D1(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);r[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},Z$=e=>Q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(eu.URL_SCHEME)?J$(e.slice(eu.URL_SCHEME.length)):null;Dt.registerSaveRouter(Z$);function J$(e="model"){return new eu(e)}function Q$(e){return new Y$(e)}function V1(e,t,n,r){o(e),n=n==null?0:n,r=r==null?1:r,i(n,r);let s=0,a=c=>(c.then(u=>{let l=n+ ++s/e.length*(r-n);return t(l),u}),c);function o(c){F(c!=null&&Array.isArray(c)&&c.length>0,()=>"promises must be a none empty array")}function i(c,u){F(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${c}`),F(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),F(u>=c,()=>`startFraction must be no more than endFraction, but got startFraction ${c} and endFraction ${u}`)}return Promise.all(e.map(a))}async function U1(e,t){t==null&&(t={});let n=t.fetchFunc==null?Q().platform.fetch:t.fetchFunc,r=e.map(d=>n(d,t.requestInit,{isBinary:!0})),s=0,a=.5,i=(t.onProgress==null?await Promise.all(r):await V1(r,t.onProgress,s,a)).map(d=>d.arrayBuffer()),c=.5,u=1;return t.onProgress==null?await Promise.all(i):await V1(i,t.onProgress,c,u)}async function eF(e,t="",n,r){return G1(o=>U1(o,{requestInit:r}))(e,t,n)}function G1(e){return async(t,n="",r)=>{let s=t.map(()=>!1),a={},o=r!=null?r.map(()=>!1):[],i=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,y=Xb[b]*$t(g.shape),v=()=>{s[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:y})};r!=null?r.forEach((x,k)=>{x===g.name&&(v(),o[k]=!0)}):v(),i.push(g.name),m+=y})}),!o.every(h=>h)){let h=r.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let c=s.reduce((h,f,m)=>(f&&h.push(m),h),[]),u=[];c.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;u.push(m)})});let l=await e(u),d={},p=0;return c.forEach(h=>{let f=t[h].paths.length,m=0;for(let x=0;x<f;x++)m+=l[p+x].byteLength;let g=new ArrayBuffer(m),b=new Uint8Array(g),y=0;for(let x=0;x<f;x++){let k=new Uint8Array(l[p+x]);b.set(k,y),y+=k.byteLength}a[h].forEach(x=>{let k=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),C=E1(k,[x.manifestEntry]);for(let N in C)d[N]=C[N]}),p+=f}),d}}var tF="application/octet-stream",nF="application/json",ry=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(F(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Q().platform.fetch,F(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&F(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=$1(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:nF}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:tF}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Hl(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,r=t.weightsManifest;if(n==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Jb(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=rF(t),s=this.weightPathPrefix||n,a=[];for(let u of e)a.push(...u.weights);let o=[],i=[];for(let u of e)for(let l of u.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(l)):o.push(s+l+r);this.weightUrlConverter&&o.push(...await Promise.all(i));let c=await U1(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Zb(c)]}};ry.URL_SCHEME_REGEX=/^https?:\/\//;function rF(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}function sy(e){return e.match(ry.URL_SCHEME_REGEX)!=null}var H1=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(r=>sy(r)):n=sy(e),n)return ay(e,t)}return null};Dt.registerSaveRouter(H1);Dt.registerLoadRouter(H1);function ay(e,t){return new ry(e,t)}function sF(e,t){return ay(e,t)}var oy=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},aF=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function oF(e,t,n,r){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new oy(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new oy({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new oy({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function iF(e){return new aF(e)}var j1={};Re(j1,{confusionMatrix:()=>pF});function cF(e,t,n=!1,r=!1){let s=E(e,"a","matMul"),a=E(t,"b","matMul");[s,a]=Nt(s,a);let o={a:s,b:a},i={transposeA:n,transposeB:r};return B.runKernel(Wa,o,i)}var De=W({matMul_:cF});function uF(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:E(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:r};return B.runKernel(mo,a,o)}var tu=W({oneHot_:uF});function lF(e,t){let n=E(e,"x","transpose");if(t==null&&(t=n.shape.map((a,o)=>o).reverse()),F(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{F(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let r={x:n},s={perm:t};return B.runKernel(Ro,r,s)}var Pe=W({transpose_:lF});function dF(e,t,n){let r=E(e,"labels","confusionMatrix"),s=E(t,"predictions","confusionMatrix");F(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),F(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),F(s.rank===1,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),F(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),F(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=tu(ce(r,"int32"),n),o=tu(ce(s,"int32"),n),i=Pe(a),c=De(i,o);return ce(c,"int32")}var pF=W({confusionMatrix_:dF}),Uo={};Re(Uo,{fromPixels:()=>vF,fromPixelsAsync:()=>bF,toPixels:()=>yF});function _h(e,t,n){if(Pa(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=es(e,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return aa(e,t,r,n)}var nu;function q1(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(s){let f=2;if(s&&e.readyState<f)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(vh(yh,B.backendName)!=null){let f={pixels:e},m={numChannels:t};return B.runKernel(yh,f,m)}let[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;o?d=e.getContext("2d").getImageData(0,0,u,l).data:r||n?d=e.data:(a||s||i)&&(nu==null&&(nu=document.createElement("canvas").getContext("2d")),nu.canvas.width=u,nu.canvas.height=l,nu.drawImage(e,0,0,u,l),d=nu.getImageData(0,0,u,l).data);let p;if(t===4)p=new Int32Array(d);else{let f=u*l;p=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)p[m*t+g]=d[m*4+g]}return _h(p,[l,u,t],"int32")}function hF(e){return e!=null&&e.data instanceof Uint8Array}function fF(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function mF(e){return e!=null&&e.width!==0&&e.height!==0}function gF(e){return fF()&&!(e instanceof ImageBitmap)&&mF(e)&&!hF(e)}async function bF(e,t=3){let n=null;if(Q().getBool("WRAP_TO_IMAGEBITMAP")&&gF(e)){let r;try{r=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(s){r=null}r!=null&&r.width===e.width&&r.height===e.height?n=r:n=e}else n=e;return q1(n,t)}async function yF(e,t){let n=E(e,"img","toPixels");if(!(e instanceof Ee)){let u=n;n=ce(u,"int32"),u.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,s]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,c=new Uint8ClampedArray(s*r*4);for(let u=0;u<r*s;++u){let l=[0,0,0,255];for(let p=0;p<a;p++){let h=o[u*a+p];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(l[0]=h*i,l[1]=h*i,l[2]=h*i):l[p]=h*i}let d=u*4;c[d+0]=Math.round(l[0]),c[d+1]=Math.round(l[1]),c[d+2]=Math.round(l[2]),c[d+3]=Math.round(l[3])}if(t!=null){t.width=s,t.height=r;let u=t.getContext("2d"),l=new ImageData(c,s,r);u.putImageData(l,0,0)}return n!==e&&n.dispose(),c}var vF=W({fromPixels_:q1}),iy={};Re(iy,{prepareAndValidate:()=>K1});function K1(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if($t(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let s=t.shape,a=s[s.length-1],o=1;for(let d=0;d<s.length-1;++d)o*=s[d];let i=e.shape,c=s.slice();c.pop();let u=1;for(let d=a;d<n;++d)u*=i[d],c.push(i[d]);let l=[...qi(e.shape).map(d=>d/u),1].slice(0,a);return[c,o,u,l]}var cy={};Re(cy,{calculateShapes:()=>X1,validateInput:()=>ly,validateUpdateShape:()=>uy});function uy(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+` update.rank != ${s+e.length-r}`);for(let o=0;o<s;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-s;++o)if(n.shape[o+s]!==e[o+r])throw new Error(a+` updates.shape[${o+s}] (${n.shape[o+s]}) != shape[${o+s}] (${e[o+s]})`)}function ly(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}uy(n,t,e)}function X1(e,t,n){let r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length,o=1;for(let d=s;d<a;++d)o*=n[d];let i=s<1?1:s,c=$t(t.shape)/i,u=[...qi(n.slice(0,s)),1],l=$t(n);return{sliceRank:s,numUpdates:c,sliceSize:o,strides:u,outputSize:l}}var vn={};Re(vn,{assertParamsValid:()=>xF,computeFlatOffset:()=>kF,computeOutShape:()=>Y1,getNormalizedAxes:()=>ek,isSliceContinous:()=>wF,maskToAxes:()=>Eh,parseSliceParams:()=>ok,sliceInfo:()=>IF,startForAxis:()=>sk,startIndicesWithElidedDims:()=>tk,stopForAxis:()=>ak,stopIndicesWithElidedDims:()=>nk,stridesForAxis:()=>rk,stridesWithElidedDims:()=>Z1});function xF(e,t,n){let r=e.shape.length;F(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),F(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)F(t[s]+n[s]<=e.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function Eh(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function Y1(e,t,n){let r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Z1(e,t,n,r){let s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)a===0?s[t]=1:(s.splice(t,0,1),s.pop());return s}function J1(e,t,n){return n<=e?n:n-(t-1)}function Q1(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function ek(e,t,n,r,s,a,o,i,c){let u=e.length,l=new Array(u),d=new Array(u),p=new Array(u);if(t.length&&n>0){let h=t[0],f=n+1;l=tk(o,h,f,r,e),d=nk(i,h,f,s,e),p=Z1(a,h,f,e)}else for(let h=0;h<u;h++)l[h]=sk(o,r,a,e,h,c),d[h]=ak(i,s,a,e,h,c),p[h]=rk(a,h,c);return{begin:l,end:d,strides:p}}function tk(e,t,n,r,s){let a=[...s],o=Q1(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let c=J1(t,n,i),u=r[c];e&1<<c&&(u=0),a[i]=u}return a}function nk(e,t,n,r,s){let a=[...s],o=Q1(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let c=J1(t,n,i),u=r[c];e&1<<c&&(u=Number.MAX_SAFE_INTEGER),a[i]=u}for(let i=0;i<a.length;i++){let c=s[i];a[i]<0&&(a[i]+=c),a[i]=yl(0,a[i],s[i])}return a}function rk(e,t,n){let r=e[t];return(n&1<<t||r==null)&&(r=1),r}function sk(e,t,n,r,s,a){let o=t[s],i=n[s]||1;(e&1<<s||a&1<<s||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let c=r[s];return o<0&&(o+=c),o=yl(0,o,c-1),o}function ak(e,t,n,r,s,a){let o=t[s],i=n[s]||1;(e&1<<s||a&1<<s||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let c=r[s];return o<0&&(o+=c),i>0?o=yl(0,o,c):o=yl(-1,o,c-1),o}function wF(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function kF(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function ok(e,t,n){let r,s=e.shape.length;typeof t=="number"?r=[t,...new Array(s-1).fill(0)]:t.length<s?r=t.concat(new Array(s-t.length).fill(0)):r=t.slice(),r.forEach(o=>{F(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(s).fill(-1):typeof n=="number"?a=[n,...new Array(s-1).fill(-1)]:n.length<s?a=n.concat(new Array(s-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(F(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-r[i])),[r,a]}function IF(e,t,n,r,s,a,o,i,c){let u=t.slice(),l=n.slice(),d=r;r==null&&(d=new Array(u.length));let p=Eh(o);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(o!==0&&i!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(o!==0&&c!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let h=e.length-u.length,f=Eh(i),m=e.slice();f.forEach(N=>{u[N]=0,l[N]=1,m.splice(N,0,1)});let{begin:g,end:b,strides:y}=ek(m,p,h,u,l,d,s,a,o);u=g,l=b,d=y;let v=Eh(c);v.forEach(N=>{l[N]=u[N]+1,d[N]=1});let x=Y1(u,l,d),k=x.filter((N,$)=>v.indexOf($)===-1);return{nonStrided:d.every(N=>N===1),$begin:u,$end:l,$strides:d,size:x,newShape:m,outShape:k}}var oe={};Re(oe,{Serializable:()=>ik,SerializationMap:()=>Go,registerClass:()=>ia});var ik=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Go=class{constructor(){this.classNameMap={}}static getMap(){return Go.instance==null&&(Go.instance=new Go),Go.instance}static register(e){Go.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function ia(e){F(e.className!=null,()=>"Class being registered does not have the static className property defined."),F(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),F(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Go.register(e)}var ck={};Re(ck,{TEST_EPSILON_FLOAT16:()=>uk,encodeStrings:()=>lk,expectArrayBuffersEqual:()=>AF,expectArraysClose:()=>CF,expectArraysEqual:()=>NF,expectNumbersClose:()=>_F,expectPromiseToFail:()=>TF,expectValuesInRange:()=>EF,testEpsilon:()=>dy});var SF=.001,uk=.1;function CF(e,t,n){return n==null&&(n=dy()),py(e,t,(r,s)=>hy(r,s,n))}function dy(){return B.backend.floatPrecision()===32?SF:uk}function py(e,t,n){let r=!0;if((dn(e)||dn(t))&&(r=!1),dn(e)&&dn(t)&&(r=!0),r){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=es(e),i=es(t);if(!ks(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let s=dn(e)?e:Oa(e),a=dn(t)?t:Oa(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.
Actual:   ${s}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=s[o],c=a[o];if(!n(i,c))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${c}.
Actual:   ${s}.
Expected: ${a}.`)}}function TF(e,t){e().then(()=>t.fail(),()=>t())}function NF(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Ys(e)||Ys(e[0])||Ys(t)||Ys(t[0])?py(e,n,(r,s)=>r==s):py(e,t,(r,s)=>hy(r,s,0))}function _F(e,t,n){if(n==null&&(n=dy()),!hy(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function hy(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function EF(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function AF(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function lk(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?lk(n):e[t]=Ll(n)}return e}var DF="3.9.0";function $F(){Q().set("PROD",!0)}function FF(){Q().set("DEBUG",!0)}function RF(){Q().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function fy(e){Q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}a$(fy);function PF(){B.disposeVariables()}function Cs(){return B}function Ah(){return B.memory()}function OF(e){return B.profile(e)}function M(e,t){return B.tidy(e,t)}function $e(e){qb(e).forEach(n=>n.dispose())}function Yt(e){return B.keep(e)}function MF(e){return B.time(e)}function LF(e){return B.setBackend(e)}function BF(){return B.ready()}function zF(){return B.backendName}function WF(e){B.removeBackend(e)}function VF(e){return B.findBackend(e)}function UF(e){return B.findBackendFactory(e)}function Dh(e,t,n=1){return B.registerBackend(e,t,n)}function dk(){return B.backend}function GF(e,t){Q().setPlatform(e,t)}function HF(e,t){let n=E(e,"a","add"),r=E(t,"b","add");[n,r]=Nt(n,r);let s={a:n,b:r};return B.runKernel(Js,s)}var Y=W({add_:HF});function jF(e,t){let n=E(e,"a","floorDiv"),r=E(t,"b","floorDiv");[n,r]=Nt(n,r);let s={a:n,b:r};return B.runKernel(eo,s)}var $h=W({floorDiv_:jF});function qF(e,t){let n=E(e,"a","div"),r=E(t,"b","div");if([n,r]=Nt(n,r),n.dtype==="int32"&&r.dtype==="int32")return $h(n,r);let s={a:n,b:r},a={};return B.runKernel(Ya,s,a)}var ge=W({div_:qF});function KF(e,t){let n=E(e,"a","mul"),r=E(t,"b","mul");[n,r]=Nt(n,r);let s={a:n,b:r};return B.runKernel(fo,s)}var V=W({mul_:KF});function XF(e){let t=E(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return B.runKernel(kl,n)}else{let n={x:t};return B.runKernel(Xi,n)}}var Mt=W({abs_:XF});function YF(e){let n={x:E(e,"x","acos")};return B.runKernel(Yi,n)}var my=W({acos_:YF});function ZF(e){let n={x:E(e,"x","acosh")};return B.runKernel(Zi,n)}var gy=W({acosh_:ZF});function JF(e){F(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),F(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((s,a)=>E(s,`tensors${a}`,"addN")),n=t[0];t.forEach(s=>{if(s.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(s=>{if(!ks(s.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return B.runKernel(La,r)}var pk=W({addN_:JF});function QF(e,t=null,n=!1){let s={x:E(e,"x","all","bool")},a={axis:t,keepDims:n};return B.runKernel(Ji,s,a)}var Fh=W({all_:QF});function eR(e,t=null,n=!1){let s={x:E(e,"x","any","bool")},a={axis:t,keepDims:n};return B.runKernel(Qi,s,a)}var jl=W({any_:eR});function tR(e,t=0){let r={x:E(e,"x","argMax")},s={axis:t};return B.runKernel(Ba,r,s)}var Ho=W({argMax_:tR});function nR(e,t=0){let r={x:E(e,"x","argMin")},s={axis:t};return B.runKernel(xl,r,s)}var by=W({argMin_:nR});function rR(e){let n={x:E(e,"x","asin")};return B.runKernel(ec,n)}var yy=W({asin_:rR});function sR(e){let n={x:E(e,"x","asinh")};return B.runKernel(tc,n)}var vy=W({asinh_:sR});function aR(e){let n={x:E(e,"x","atan")};return B.runKernel(nc,n)}var xy=W({atan_:aR});function oR(e,t){let n=E(e,"a","atan2"),r=E(t,"b","atan2");[n,r]=Nt(n,r);let s={a:n,b:r};return B.runKernel(sc,s)}var wy=W({atan2_:oR});function iR(e){let n={x:E(e,"x","atanh")};return B.runKernel(rc,n)}var ky=W({atanh_:iR});function cR(e,t,n,r,s="NHWC",a){let o=e[3],i=[...t,o],c=mk(s);return ql(e,i,n,a,r,null,null,c)}function hk(e,t,n,r,s,a,o="channelsLast"){let[i,c]=Rh(t),u;if(o==="channelsLast")u=[i,c,e[3],e[3]];else if(o==="channelsFirst")u=[i,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return ql(e,u,n,r,s,a,!1,o)}function uR(e,t,n,r,s,a,o="NDHWC"){let[i,c,u]=Sy(t),l,d;if(o==="NDHWC")d="channelsLast",l=[i,c,u,e[4],e[4]];else if(o==="NCDHW")d="channelsFirst",l=[i,c,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return fk(e,l,n,r,s,!1,d,a)}function ql(e,t,n,r,s,a,o=!1,i="channelsLast"){let[c,u,l,d]=[-1,-1,-1,-1];if(i==="channelsLast")[c,u,l,d]=e;else if(i==="channelsFirst")[c,d,u,l]=e;else throw new Error(`Unknown dataFormat ${i}`);let[p,h,,f]=t,[m,g]=Rh(n),[b,y]=Rh(r),v=ru(p,b),x=ru(h,y),{padInfo:k,outHeight:C,outWidth:N}=pR(s,u,l,m,g,v,x,a,i),$=o?f*d:f,R;return i==="channelsFirst"?R=[c,$,C,N]:i==="channelsLast"&&(R=[c,C,N,$]),{batchSize:c,dataFormat:i,inHeight:u,inWidth:l,inChannels:d,outHeight:C,outWidth:N,outChannels:$,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:b,dilationWidth:y,inShape:e,outShape:R,filterShape:t}}function fk(e,t,n,r,s,a=!1,o="channelsLast",i){let[c,u,l,d,p]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[c,u,l,d,p]=e;else if(o==="channelsFirst")[c,p,u,l,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,f,m,,g]=t,[b,y,v]=Sy(n),[x,k,C]=Sy(r),N=ru(h,x),$=ru(f,k),R=ru(m,C),{padInfo:O,outDepth:D,outHeight:P,outWidth:T}=hR(s,u,l,d,b,y,v,N,$,R,i),L=a?g*p:g,G;return o==="channelsFirst"?G=[c,L,D,P,T]:o==="channelsLast"&&(G=[c,D,P,T,L]),{batchSize:c,dataFormat:o,inDepth:u,inHeight:l,inWidth:d,inChannels:p,outDepth:D,outHeight:P,outWidth:T,outChannels:L,padInfo:O,strideDepth:b,strideHeight:y,strideWidth:v,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:$,effectiveFilterWidth:R,dilationDepth:x,dilationHeight:k,dilationWidth:C,inShape:e,outShape:G,filterShape:t}}function lR(e,t,n,r,s){r==null&&(r=Iy(e,t,n));let a=e[0],o=e[1],i=jo((a-t+2*r)/n+1,s),c=jo((o-t+2*r)/n+1,s);return[i,c]}function dR(e,t,n,r,s,a){s==null&&(s=Iy(e,t,r));let o=e[0],i=e[1],c=e[2],u=jo((o-t+2*s)/r+1,a),l=jo((i-t+2*s)/r+1,a),d=jo((c-t+2*s)/r+1,a);return[u,l,d,n]}function Iy(e,t,n,r=1){let s=ru(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Rh(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function Sy(e){return typeof e=="number"?[e,e,e]:e}function ru(e,t){return t<=1?e:e+(e-1)*(t-1)}function pR(e,t,n,r,s,a,o,i,c){let u,l,d;if(typeof e=="number"){u={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=lR([t,n],a,r,e,i);l=h[0],d=h[1]}else if(e==="same"){l=Math.ceil(t/r),d=Math.ceil(n/s);let p=Math.max(0,(l-1)*r+a-t),h=Math.max(0,(d-1)*s+o-n),f=Math.floor(p/2),m=p-f,g=Math.floor(h/2),b=h-g;u={top:f,bottom:m,left:g,right:b,type:"SAME"}}else if(e==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-a+1)/r),d=Math.ceil((n-o+1)/s);else if(typeof e=="object"){let p=c==="channelsLast"?e[1][0]:e[2][0],h=c==="channelsLast"?e[1][1]:e[2][1],f=c==="channelsLast"?e[2][0]:e[3][0],m=c==="channelsLast"?e[2][1]:e[3][1];u={top:p,bottom:h,left:f,right:m,type:p===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},l=jo((t-a+p+h)/r+1,i),d=jo((n-o+f+m)/s+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:l,outWidth:d}}function hR(e,t,n,r,s,a,o,i,c,u,l){let d,p,h,f;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=dR([t,n,r,1],i,1,s,e,l);p=g[0],h=g[1],f=g[2]}else if(e==="same"){p=Math.ceil(t/s),h=Math.ceil(n/a),f=Math.ceil(r/o);let m=(p-1)*s+i-t,g=(h-1)*a+c-n,b=(f-1)*o+u-r,y=Math.floor(m/2),v=m-y,x=Math.floor(g/2),k=g-x,C=Math.floor(b/2),N=b-C;d={top:x,bottom:k,left:C,right:N,front:y,back:v,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/s),h=Math.ceil((n-c+1)/a),f=Math.ceil((r-u+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}function jo(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function ca(e){let[t,n,r]=Rh(e);return t===1&&n===1&&r===1}function ts(e,t){return ca(e)||ca(t)}function mk(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function fR(e,t){let r={x:E(e,"x","reshape","string_or_numeric")},s={shape:t};return B.runKernel(Rc,r,s)}var U=W({reshape_:fR});function mR(e,t,n,r,s){let a=E(e,"x","avgPool","float32"),o=1;F(ts(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,c=!1;a.rank===3&&(c=!0,i=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),s!=null&&F(qt(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);let u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s},d=B.runKernel(za,u,l);return d=ce(d,a.dtype),c?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var ur=W({avgPool_:mR});function gR(e,t,n,r,s,a="NDHWC"){let o=E(e,"x","avgPool3d","float32"),i=o,c=!1;o.rank===4&&(c=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),F(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),s!=null&&F(qt(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);let u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},d=B.runKernel(wl,u,l);return d=ce(d,i.dtype),c?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Cy=W({avgPool3d_:gR});function bR(e,t=0){F(e.length>=1,()=>"Pass at least one tensor to concat");let n=Gl(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Ss(n[0]);let r=n,s={axis:t};return B.runKernel(oc,r,s)}var Ze=W({concat_:bR});function yR(e){let n={x:E(e,"x","sigmoid")};return B.runKernel(To,n)}var lr=W({sigmoid_:yR});function vR(e,t,n){let r=E(e,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");let s={x:r},a={begin:t,size:n};return B.runKernel(Lc,s,a)}var We=W({slice_:vR});function xR(e){let n={x:E(e,"x","tanh")};return B.runKernel(Fo,n)}var qo=W({tanh_:xR});function wR(e,t,n,r,s,a){let o=E(e,"forgetBias","basicLSTMCell"),i=E(t,"lstmKernel","basicLSTMCell"),c=E(n,"lstmBias","basicLSTMCell"),u=E(r,"data","basicLSTMCell"),l=E(s,"c","basicLSTMCell"),d=E(a,"h","basicLSTMCell"),p=Ze([u,d],1),h=De(p,i),f=Y(h,c),m=f.shape[0],g=f.shape[1]/4,b=[m,g],y=We(f,[0,0],b),v=We(f,[0,g],b),x=We(f,[0,g*2],b),k=We(f,[0,g*3],b),C=Y(V(lr(y),qo(v)),V(l,lr(Y(o,x)))),N=V(qo(C),lr(k));return[C,N]}var kR=W({basicLSTMCell_:wR});function IR(e,t,n){let r=E(e,"x","batchToSpaceND"),s=t.reduce((i,c)=>i*c);F(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),F(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),F(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`);let a={x:r},o={blockShape:t,crops:n};return B.runKernel(ac,a,o)}var Kl=W({batchToSpaceND_:IR});function SR(e){let t;return e.rank===0||e.rank===1?t=U(e,[1,1,1,e.size]):e.rank===2?t=U(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function CR(e,t,n,r,s,a){a==null&&(a=.001);let o=E(e,"x","batchNorm"),i=E(t,"mean","batchNorm"),c=E(n,"variance","batchNorm"),u;s!=null&&(u=E(s,"scale","batchNorm"));let l;r!=null&&(l=E(r,"offset","batchNorm")),F(i.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:SR(o),scale:u,offset:l,mean:i,variance:c},h={varianceEpsilon:a},f=B.runKernel(to,p,h);return U(f,o.shape)}var Ts=W({batchNorm_:CR});function TR(e,t,n,r,s,a){let o=E(e,"x","batchNorm"),i=E(t,"mean","batchNorm"),c=E(n,"variance","batchNorm"),u;s!=null&&(u=E(s,"scale","batchNorm"));let l;return r!=null&&(l=E(r,"offset","batchNorm")),F(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),F(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),F(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&F(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&F(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Ts(o,i,c,l,u,a)}var gk=W({batchNorm2d_:TR});function NR(e,t,n,r,s,a){let o=E(e,"x","batchNorm"),i=E(t,"mean","batchNorm"),c=E(n,"variance","batchNorm"),u;s!=null&&(u=E(s,"scale","batchNorm"));let l;return r!=null&&(l=E(r,"offset","batchNorm")),F(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),F(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),F(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&F(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&F(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Ts(o,i,c,l,u,a)}var bk=W({batchNorm3d_:NR});function _R(e,t,n,r,s,a){let o=E(e,"x","batchNorm"),i=E(t,"mean","batchNorm"),c=E(n,"variance","batchNorm"),u;s!=null&&(u=E(s,"scale","batchNorm"));let l;return r!=null&&(l=E(r,"offset","batchNorm")),F(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),F(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),F(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&F(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&F(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Ts(o,i,c,l,u,a)}var yk=W({batchNorm4d_:_R});function ER(e,t,n){let r=E(e,"x","bincount"),s=E(t,"weights","bincount");F(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),F(n>=0,()=>`size must be non-negative, but got ${n}.`),F(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);let a={x:r,weights:s},o={size:n};return B.runKernel(Lp,a,o)}var Ty=W({bincount_:ER});function AR(e,t){let n=E(e,"s0","broadcastArgs","int32"),r=E(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let s={s0:n,s1:r};return B.runKernel(Mb,s)}var vk=W({broadcastArgs_:AR});function DR(e,t){let n=E(e,"broadcastTo","x"),r=n.shape;if(t.some(u=>!(u>0)||u%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let u=n.shape.slice();for(;u.length<t.length;)u.unshift(1);n=U(n,u)}let s=n.shape,a=Array.from(t);for(let u=t.length-1;u>=0;u--)if(s[u]===t[u])a[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(a.map((u,l)=>u>1?l:-1).filter(u=>u>=0).length===0)return Ss(n);let i={x:n},c={reps:a};return B.runKernel(ea,i,c)}var su=W({broadcastTo_:DR});function $R(e){let n={x:E(e,"x","ceil")};return B.runKernel(Ua,n)}var Ny=W({ceil_:$R});function FR(e,t,n){let r=E(e,"x","clipByValue");F(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let s={x:r},a={clipValueMin:t,clipValueMax:n};return B.runKernel(Qs,s,a)}var Zt=W({clipByValue_:FR});function RR(e){return Ze(e,0)}var xk=W({concat1d_:RR});function PR(e,t){return Ze(e,t)}var wk=W({concat2d_:PR});function OR(e,t){return Ze(e,t)}var kk=W({concat3d_:OR});function MR(e,t){return Ze(e,t)}var Ik=W({concat4d_:MR});function LR(e,t,n,r,s="NHWC",a=[1,1],o){let i=E(e,"x","conv2d"),c=E(t,"filter","conv2d"),u=i,l=!1;i.rank===3&&(l=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),F(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),o!=null&&F(qt(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let d=s==="NHWC"?u.shape[3]:u.shape[1];F(d===c.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${c.shape[2]}.`),F(ts(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let p={x:u,filter:c},h={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=B.runKernel(Ga,p,h);return l?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Ft=W({conv2d_:LR});function BR(e,t,n,r,s="NWC",a=1,o){let i=E(e,"x","conv1d"),c=E(t,"filter","conv1d"),u=i,l=!1;i.rank===2&&(l=!0,u=U(i,[1,i.shape[0],i.shape[1]])),F(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),F(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),o!=null&&F(qt(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`),F(u.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${c.shape[1]}.`),F(ts(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),F(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);let d=U(c,[1,c.shape[0],c.shape[1],c.shape[2]]),p=U(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Ft(p,d,[1,n],r,"NHWC",[1,a],o);return l?U(g,[g.shape[2],g.shape[3]]):U(g,[g.shape[0],g.shape[2],g.shape[3]])}var Ph=W({conv1d_:BR});function zR(e,t,n,r,s,a="NHWC",o){F(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,c=t,u=!1;t.rank===3&&(u=!0,c=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),F(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),F(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),F(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let l=a==="NHWC"?i[3]:i[1],d=a==="NHWC"?c.shape[3]:c.shape[1];F(l===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[2]}.`),F(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),o!=null&&F(qt(s),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);let p={dy:c,filter:n},h={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,inputShape:i},f=B.runKernel(Ha,p,h);return u?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var _y=W({conv2DBackpropInput_:zR});function WR(e,t,n,r,s,a){let o=E(e,"x","conv2dTranspose"),i=E(t,"filter","conv2dTranspose");return _y(n,o,i,r,s,"NHWC",a)}var Oh=W({conv2dTranspose_:WR});function VR(e,t,n,r,s="NDHWC",a=[1,1,1]){let o=E(e,"x","conv3d"),i=E(t,"filter","conv3d"),c=o,u=!1;o.rank===4&&(u=!0,c=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),F(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),F(c.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${i.shape[3]}.`),F(ts(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),F(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);let l={x:c,filter:i},d={strides:n,pad:r,dataFormat:s,dilations:a},p=B.runKernel(Il,l,d);return u?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Ey=W({conv3d_:VR});function UR(e,t,n,r,s){F(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let c=a[4],u=o.shape[4];F(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),F(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),F(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),F(c===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`),F(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let l={dy:o,filter:n},d={pad:s,strides:r,inputShape:a},p=B.runKernel(Vp,l,d);return i?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Sk=W({conv3DBackpropInput_:UR});function GR(e,t,n,r,s){let a=E(e,"x","conv3dTranspose"),o=E(t,"filter","conv3dTranspose");return Sk(n,a,o,r,s)}var Ck=W({conv3dTranspose_:GR});function HR(e){let n={x:E(e,"x","cos")};return B.runKernel(ja,n)}var Xl=W({cos_:HR});function jR(e){let n={x:E(e,"x","cosh")};return B.runKernel(qa,n)}var Mh=W({cosh_:jR});function qR(e,t=0,n=!1,r=!1){let a={x:E(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:r};return B.runKernel(Ka,a,o)}var Lh=W({cumsum_:qR});function KR(e,t,n,r=!1){let s=E(e,"x","denseBincount"),a=E(t,"weights","denseBincount");F(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),F(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),F(n>=0,()=>`size must be non-negative, but got ${n}.`),F(a.size===s.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`);let o={x:s,weights:a},i={size:n,binaryOutput:r};return B.runKernel(Up,o,i)}var Tk=W({denseBincount_:KR});function XR(e,t,n="NHWC"){let r=E(e,"x","depthToSpace"),s=n==="NHWC"?r.shape[1]:r.shape[2],a=n==="NHWC"?r.shape[2]:r.shape[3],o=n==="NHWC"?r.shape[3]:r.shape[1];F(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t}  for depthToSpace with input shape
    ${r.shape}`),F(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${r.shape}`),F(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`);let i={x:r},c={blockSize:t,dataFormat:n};return B.runKernel(cc,i,c)}var Ay=W({depthToSpace_:XR});function YR(e,t,n,r,s="NHWC",a=[1,1],o){let i=E(e,"x","depthwiseConv2d"),c=E(t,"filter","depthwiseConv2d"),u=i,l=!1;i.rank===3&&(l=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),F(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),F(u.shape[3]===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),o!=null&&F(qt(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let d={x:u,filter:c},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},h=B.runKernel(Xa,d,p);return l?U(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var ua=W({depthwiseConv2d_:YR});function ZR(e){let n={x:E(e,"x","diag")};return B.runKernel(jp,n)}var JR=W({diag_:ZR});function QR(e,t,n,r,s=[1,1],a="NHWC"){let o=E(e,"x","dilation2d"),i=E(t,"filter","dilation2d");F(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),F(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),F(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let c=o,u=!1;o.rank===3&&(c=U(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0);let l={x:c,filter:i},d={strides:n,pad:r,dilations:s},p=B.runKernel(Sl,l,d);return u?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Dy=W({dilation2d_:QR});function eP(e,t){let n=e.length,r=[];for(let s=0;s<n;s++){let a=n-1-s,o=e[a]||1;(t[t.length-1-s]||1)>1&&o===1&&r.unshift(a)}return r}function Vt(e,t){let n=[];for(let r=0;r<t.length;r++){let s=e[e.length-r-1],a=t.length-r-1,o=t[a];(s==null||s===1&&o>1)&&n.unshift(a)}return n}function gt(e,t){let n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let a=e[e.length-s-1];a==null&&(a=1);let o=t[t.length-s-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}function tP(e,t){let n=E(e,"a","equal","string_or_numeric"),r=E(t,"b","equal","string_or_numeric");[n,r]=Nt(n,r),gt(n.shape,r.shape);let s={a:n,b:r};return B.runKernel(lc,s)}var qn=W({equal_:tP});function nP(e,t,n){let r=E(t,"a","where"),s=E(n,"b","where"),a=E(e,"condition","where","bool"),o=gt(gt(a.shape,r.shape),s.shape),i=su(a,o),c=su(r,o),u=su(s,o),l={condition:i,t:c,e:u};return B.runKernel(Oc,l)}var pn=W({where_:nP});function rP(e){let n={x:E(e,"x","zerosLike")};return B.runKernel(Kc,n)}var Ge=W({zerosLike_:rP});function sP(e,t){let n=E(e,"a","div"),r=E(t,"b","div");[n,r]=Nt(n,r);let s=ge(n,r),a=Ge(s),o=qn(r,a);return pn(o,a,s)}var $y=W({divNoNan_:sP});function aP(e,t){let n=E(e,"t1","dot"),r=E(t,"t2","dot");F((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let s=n.rank===1?n.size:n.shape[1],a=r.rank===1?r.size:r.shape[0];if(F(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),n.rank===1&&r.rank===1){let o=U(n,[1,-1]),i=U(r,[-1,1]),c=De(o,i);return U(c,[])}else if(n.rank===1&&r.rank===2){let o=U(n,[1,-1]),i=U(r,[r.shape[0],r.shape[1]]),c=De(o,i);return U(c,[c.size])}else if(n.rank===2&&r.rank===1){let o=U(r,[-1,1]),i=De(n,o);return U(i,[i.size])}else{let o=U(r,[r.shape[0],r.shape[1]]);return De(n,o)}}var Nk=W({dot_:aP});function oP(e,...t){let n=t.map((s,a)=>E(s,`tensors${a}`,"einsum")),r={equation:e};return B.runKernel(Xp,n,r)}var _k=W({einsum_:oP});function iP(e){let n={x:E(e,"x","elu")};return B.runKernel(Za,n)}var au=W({elu_:iP});function cP(e){let t=E(e,"x","erf");F(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ce(t,"float32"));let n={x:t};return B.runKernel(uc,n)}var Fy=W({erf_:cP});function uP(e){let n={x:E(e,"x","exp")};return B.runKernel(Ja,n)}var hn=W({exp_:uP});function lP(e,t=0){let n=E(e,"x","expandDims","string_or_numeric");F(t<=n.rank,()=>"Axis must be <= rank of the tensor");let r={input:n},s={dim:t};return B.runKernel(dc,r,s)}var fn=W({expandDims_:lP});function dP(e){let n={x:E(e,"x","expm1")};return B.runKernel(pc,n)}var Ry=W({expm1_:dP});function pP(e,t){let n=E(e,"x","tile","string_or_numeric");F(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let r={x:n},s={reps:t};return B.runKernel(ea,r,s)}var Fn=W({tile_:pP});function hP(e,t,n,r="float32"){t==null&&(t=e);let s=ze([e,t],r),a=e<=t?e:t;for(let i=0;i<a;++i)s.set(1,i,i);let o=U(s.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return Fn(fn(o,0),[n[0],1,1]);if(n.length===2)return Fn(fn(fn(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return Fn(fn(fn(fn(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var Py=W({eye_:hP});function xn(e,t,n){let r={shape:e,value:t,dtype:n};return B.runKernel(Cl,{},r)}function fP(e){let n={x:E(e,"x","floor")};return B.runKernel(Qa,n)}var ou=W({floor_:fP});function mP(e,t,n=0,r=0){let s=E(e,"x","gather"),a=E(t,"indices","gather","int32"),o={x:s,indices:a},i={axis:n,batchDims:r};return B.runKernel(fc,o,i)}var Ko=W({gather_:mP});function gP(e,t){let n=E(e,"a","greater","string_or_numeric"),r=E(t,"b","greater","string_or_numeric");[n,r]=Nt(n,r),gt(n.shape,r.shape);let s={a:n,b:r};return B.runKernel(gc,s)}var Rn=W({greater_:gP});function bP(e,t){let n=E(e,"a","greaterEqual","string_or_numeric"),r=E(t,"b","greaterEqual","string_or_numeric");[n,r]=Nt(n,r),gt(n.shape,r.shape);let s={a:n,b:r};return B.runKernel(no,s)}var la=W({greaterEqual_:bP});function yP(e){let n={input:E(e,"input","imag")};return B.runKernel(Qp,n)}var Bh=W({imag_:yP});function vP(e){let n={x:E(e,"x","isFinite")};return B.runKernel(bc,n)}var Ek=W({isFinite_:vP});function xP(e){let n={x:E(e,"x","isInf")};return B.runKernel(yc,n)}var Ak=W({isInf_:xP});function wP(e){let n={x:E(e,"x","isNaN")};return B.runKernel(vc,n)}var Oy=W({isNaN_:wP});function kP(e,t=.2){let r={x:E(e,"x","leakyRelu")},s={alpha:t};return B.runKernel(so,r,s)}var Yl=W({leakyRelu_:kP});function IP(e,t){let n=E(e,"a","less","string_or_numeric"),r=E(t,"b","less","string_or_numeric");[n,r]=Nt(n,r),gt(n.shape,r.shape);let s={a:n,b:r};return B.runKernel(xc,s)}var zh=W({less_:IP});function SP(e,t){let n=E(e,"a","lessEqual","string_or_numeric"),r=E(t,"b","lessEqual","string_or_numeric");[n,r]=Nt(n,r),gt(n.shape,r.shape);let s={a:n,b:r};return B.runKernel(wc,s)}var da=W({lessEqual_:SP});function Dk(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return B.runKernel(eh,{},r)}function CP(e,t=5,n=1,r=1,s=.5){let a=E(e,"x","localResponseNormalization");F(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),F(qt(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=U(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let c={x:o},u={depthRadius:t,bias:n,alpha:r,beta:s},l=B.runKernel(_l,c,u);return i?U(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var My=W({localResponseNormalization_:CP});function TP(e){let n={x:E(e,"x","log")};return B.runKernel(ao,n)}var Kn=W({log_:TP});function NP(e){let n={x:E(e,"x","log1p")};return B.runKernel(kc,n)}var Zl=W({log1p_:NP});function _P(e){return F(Zs(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=E(t,"x","tf.grad","string_or_numeric"),s=n!=null?E(n,"dy","tf.grad"):null;return B.tidy(()=>{let{value:a,grads:o}=B.gradients(()=>e(r),[r],s);return s!=null&&bn(a.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Wh(o),o[0]})}}function EP(e){return F(Zs(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{F(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=Gl(t,"args","tf.grads","string_or_numeric"),s=n!=null?E(n,"dy","tf.grads"):null;return B.tidy(()=>{let{value:a,grads:o}=B.gradients(()=>e(...r),r,s);return s!=null&&bn(a.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Wh(o),o})}}function AP(e){return F(Zs(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{F(t instanceof Ee,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),F(n==null||n instanceof Ee,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:s}=B.gradients(()=>e(t),[t],n);return Wh(r),{grad:r[0],value:s}}}function DP(e){return F(Zs(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{F(Array.isArray(t)&&t.every(s=>s instanceof Ee),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),F(n==null||n instanceof Ee,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=B.gradients(()=>e(...t),t,n);return n!=null&&bn(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Wh(r.grads),r}}function $k(e,t){F(Zs(e),()=>"The f passed in variableGrads(f) must be a function"),F(t==null||Array.isArray(t)&&t.every(u=>u instanceof ra),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let u in B.registeredVariables)t.push(B.registeredVariables[u])}let r=n?t.filter(u=>!u.trainable):null,s=t.length;t=t.filter(u=>u.trainable),F(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);let a=!0,{value:o,grads:i}=B.gradients(e,t,null,a);F(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),F(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let c={};return t.forEach((u,l)=>{i[l]!=null&&(c[u.name]=i[l])}),r!=null&&r.forEach(u=>c[u.name]=null),{value:o,grads:c}}function ns(e){return B.customGrad(e)}function Wh(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function $P(e){let n={x:E(e,"x","neg")};return B.runKernel(Cc,n)}var kt=W({neg_:$P});function FP(e){let n={x:E(e,"x","softplus")};return B.runKernel(Wc,n)}var Xo=W({softplus_:FP});function RP(e){let t=E(e,"x","logSigmoid");return ns(r=>({value:kt(Xo(kt(r))),gradFunc:o=>V(o,lr(kt(r)))}))(t)}var Fk=W({logSigmoid_:RP});function PP(e,t=null,n=!1){let s={x:E(e,"x","max")},a={reductionIndices:t,keepDims:n};return B.runKernel(oo,s,a)}var Ir=W({max_:PP});function OP(e,t){let n=E(e,"a","sub"),r=E(t,"b","sub");[n,r]=Nt(n,r);let s={a:n,b:r};return B.runKernel(Do,s)}var fe=W({sub_:OP});function MP(e,t=null,n=!1){let r=E(e,"x","sum");r.dtype==="bool"&&(r=ce(r,"int32"));let s={x:r},a={axis:t,keepDims:n};return B.runKernel(_o,s,a)}var ve=W({sum_:MP});function LP(e,t=-1){let n=E(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return ns((s,a)=>{let o=!0,i=Ir(s,t,!0),c=fe(s,i),u=fe(ce(c,"float32"),Kn(ve(hn(c),t,o)));return a([u]),{value:u,gradFunc:(d,p)=>{let[h]=p,f=!0,m=hn(h);return fe(d,V(ve(d,t,f),m))}}})(n)}var Vh=W({logSoftmax_:LP});function Ly(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Rk(e,t,n){let r=e.length+t.length,s=[],a=0,o=0;for(let i=0;i<r;i++)n.indexOf(i)===-1?s.push(e[a++]):s.push(t[o++]);return s}function Pk(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)t.indexOf(a)===-1&&n.push(e[a]);let s=t.map(a=>e[a]);return[n,s]}function Yo(e,t){let n=t.map(r=>1);return Rk(e,n,t)}function BP(e,t,n){F(Ly(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Ok(e,t){if(Ly(e,t))return null;let n=[];for(let r=0;r<t;++r)e.indexOf(r)===-1&&n.push(r);return e.forEach(r=>n.push(r)),n}function By(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function zP(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function WP(e,t=null,n=!1){let r=E(e,"x","logSumExp"),s=wr(t,r.shape),a=Ir(r,s,!0),o=fe(r,a),i=hn(o),c=ve(i,s),u=Kn(c),l=Y(U(a,u.shape),u);if(n){let d=Yo(l.shape,s);return U(l,d)}return l}var zy=W({logSumExp_:WP});function VP(e,t){let n=E(e,"a","logicalAnd","bool"),r=E(t,"b","logicalAnd","bool");gt(n.shape,r.shape);let s={a:n,b:r};return B.runKernel(Ic,s)}var Sr=W({logicalAnd_:VP});function UP(e){let n={x:E(e,"x","logicalNot","bool")};return B.runKernel(Tl,n)}var Jl=W({logicalNot_:UP});function GP(e,t){let n=E(e,"a","logicalOr","bool"),r=E(t,"b","logicalOr","bool");gt(n.shape,r.shape);let s={a:n,b:r};return B.runKernel(Nl,s)}var Uh=W({logicalOr_:GP});function HP(e,t){let n=E(e,"a","logicalXor","bool"),r=E(t,"b","logicalXor","bool");return gt(n.shape,r.shape),Sr(Uh(e,t),Jl(Sr(e,t)))}var Mk=W({logicalXor_:HP});function jP(e,t,n,r,s){let a=E(e,"x","maxPool"),o=1,i=a,c=!1;a.rank===3&&(c=!0,i=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),F(ts(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),s!=null&&F(qt(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);let u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s},d=B.runKernel(co,u,l);return c?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Rt=W({maxPool_:jP});function qP(e,t=[1,1,1],n,r,s,a="NDHWC"){let o=E(e,"x","maxPool3d"),i=o,c=!1;o.rank===4&&(c=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),F(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),s!=null&&F(qt(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);let u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},d=B.runKernel(El,u,l);return c?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Wy=W({maxPool3d_:qP});function KP(e,t,n,r,s=!1){let o={x:E(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},c=B.runKernel(sh,o,i);return{result:c[0],indexes:c[1]}}var Lk=W({maxPoolWithArgmax_:KP});function XP(e,t){let n=E(e,"a","maximum"),r=E(t,"b","maximum");[n,r]=Nt(n,r),n.dtype==="bool"&&(n=ce(n,"int32"),r=ce(r,"int32")),gt(n.shape,r.shape);let s={a:n,b:r};return B.runKernel(io,s)}var rs=W({maximum_:XP});function YP(e,t=null,n=!1){let s={x:E(e,"x","mean")},a={axis:t,keepDims:n};return B.runKernel(uo,s,a)}var _t=W({mean_:YP});function It(e,t="float32"){if(t==="complex64"){let r=It(e,"float32"),s=It(e,"float32");return sa(r,s)}let n=Pp($t(e),t);return B.makeTensor(n,e,t)}function Xn(e,t="float32"){if(t==="complex64"){let r=Xn(e,"float32"),s=It(e,"float32");return sa(r,s)}let n=$b($t(e),t);return B.makeTensor(n,e,t)}function ZP(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let r=E(e,"x","meshgrid",e instanceof Ee?e.dtype:"float32");if(t===void 0)return[r];let s=E(t,"y","meshgrid",t instanceof Ee?t.dtype:"float32"),a=$t(r.shape),o=$t(s.shape);return n==="xy"?(r=U(r,[1,-1]),s=U(s,[-1,1]),[De(Xn([o,1],r.dtype),r),De(s,Xn([1,a],s.dtype))]):(r=U(r,[-1,1]),s=U(s,[1,-1]),[De(r,Xn([1,o],r.dtype)),De(Xn([a,1],s.dtype),s)])}function JP(e,t=null,n=!1){let s={x:E(e,"x","min")},a={axis:t,keepDims:n};return B.runKernel(lo,s,a)}var Ql=W({min_:JP});function QP(e,t){let n=E(e,"a","minimum"),r=E(t,"b","minimum");[n,r]=Nt(n,r),n.dtype==="bool"&&(n=ce(n,"int32"),r=ce(r,"int32")),gt(n.shape,r.shape);let s={a:n,b:r};return B.runKernel(po,s)}var iu=W({minimum_:QP});function e3(e,t,n){F(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=E(e,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let s=n==="reflect"?1:0;for(let i=0;i<r.rank;i++)F(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),F(t[i][0]>=0&&t[i][0]<=r.shape[i]-s&&t[i][1]>=0&&t[i][1]<=r.shape[i]-s,()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`);let a={paddings:t,mode:n},o={x:r};return B.runKernel(ho,o,a)}var Vy=W({mirrorPad_:e3});function t3(e,t){let n=E(e,"a","mod"),r=E(t,"b","mod");[n,r]=Nt(n,r);let s={a:n,b:r};return B.runKernel(Sc,s)}var Uy=W({mod_:t3});function n3(e){let t=E(e,"x","square"),n={};return B.runKernel("Square",{x:t},n)}var ct=W({square_:n3});function r3(e,t=null,n=!1){e=E(e,"x","moments");let r=wr(t,e.shape),s=_t(e,r,n),a=s.shape;n||(a=Yo(s.shape,r));let o=ct(fe(ce(e,"float32"),U(s,a))),i=_t(o,r,n);return{mean:s,variance:i}}var Gh=W({moments_:r3});function s3(e,t,n,r){let s=E(t,"data","multiRNNCell"),a=Gl(n,"c","multiRNNCell"),o=Gl(r,"h","multiRNNCell"),i=s,c=[];for(let d=0;d<e.length;d++){let p=e[d](i,a[d],o[d]);c.push(p[0]),c.push(p[1]),i=p[1]}let u=[],l=[];for(let d=0;d<c.length;d+=2)u.push(c[d]),l.push(c[d+1]);return[u,l]}var a3=W({multiRNNCell_:s3});function o3(e,t,n,r=!1){let s=E(e,"logits","multinomial"),a=s.size,o=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let c={logits:o===1?U(s,[1,-1]):s},u={numSamples:t,seed:n,normalized:r},l=B.runKernel(ah,c,u);return o===1?U(l,[l.size]):l}var Bk=W({multinomial_:o3});function i3(e,t){let n=E(e,"a","notEqual","string_or_numeric"),r=E(t,"b","notEqual","string_or_numeric");[n,r]=Nt(n,r),gt(n.shape,r.shape);let s={a:n,b:r};return B.runKernel(Tc,s)}var Zo=W({notEqual_:i3});function c3(e){let n={x:E(e,"x","onesLike")};return B.runKernel(Ac,n)}var Yn=W({onesLike_:c3});function u3(e,t){let n=E(e,"v1","outerProduct"),r=E(t,"v2","outerProduct");F(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);let s=U(n,[-1,1]),a=U(r,[1,-1]);return De(s,a)}var l3=W({outerProduct_:u3});function d3(e,t,n=0){let r=E(e,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let s={paddings:t,constantValue:n},a={x:r};return B.runKernel(go,a,s)}var dr=W({pad_:d3});function p3(e,t,n=0){return F(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),dr(e,[t],n)}var h3=W({pad1d_:p3});function f3(e,t,n=0){return F(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),dr(e,t,n)}var m3=W({pad2d_:f3});function g3(e,t,n=0){return F(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),dr(e,t,n)}var b3=W({pad3d_:g3});function y3(e,t,n=0){return F(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),dr(e,t,n)}var v3=W({pad4d_:y3});function x3(e,t,n){let r=E(e,"x","spaceToBatchND");F(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),F(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),F(r.shape.reduce((o,i,c)=>c>0&&c<=t.length?o&&(i+n[c-1][0]+n[c-1][1])%t[c-1]==0:o,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let s={x:r},a={blockShape:t,paddings:n};return B.runKernel(Vc,s,a)}var ed=W({spaceToBatchND_:x3});function w3(e,t,n,r,s,a){s==null&&(s=[1,1]),a==null&&(a=1),r===0&&(r="valid");let o=E(e,"x","maxPool"),i=o,c=!1;o.rank===3&&(c=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(ts(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);let u=hk(i.shape,t,a,s,r),l=[u.dilationHeight,u.dilationWidth],d;r==="same"?d=I3([u.filterHeight,u.filterWidth],l):d=[[0,0],[0,0]];let p=l[0]===1&&l[1]===1,[h,f]=k3([u.inHeight,u.inWidth],l,d),m=p?r:"valid",g=p?i:ed(i,l,h),y=(n==="avg"?()=>ur(g,t,a,m):()=>Rt(g,t,a,m))(),v=p?y:Kl(y,l,f);return c?U(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function k3(e,t,n){let r=n.map(l=>l[0]),s=n.map(l=>l[1]),a=e.concat(r,s),o=t.map((l,d)=>(l-a[d]%l)%l),i=s.map((l,d)=>l+o[d]),c=t.map((l,d)=>[r[d],i[d]]),u=t.map((l,d)=>[0,o[d]]);return[c,u]}function I3(e,t){let r=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),s=r.map(o=>Math.floor(o/2)),a=r.map((o,i)=>o-s[i]);return r.map((o,i)=>[s[i],a[i]])}var zk=W({pool_:w3});function S3(e,t){let n=E(e,"base","pow"),r=E(t,"exp","pow");[n,r]=Nt(n,r);let s={a:n,b:r};return B.runKernel(bo,s)}var Ns=W({pow_:S3});function C3(e,t){let n=E(e,"x","prelu"),r=E(t,"alpha","prelu"),s={x:n,alpha:r};return B.runKernel(yo,s)}var td=W({prelu_:C3});function T3(e,t=null,n=!1){let r=E(e,"x","prod");r.dtype==="bool"&&(r=ce(r,"int32"));let s={x:r},a={axis:t,keepDims:n};return B.runKernel($c,s,a)}var Hh=W({prod_:T3});function N3(e,t,n){let r=$t(e),s=null;if(n==null||n==="float32")s=new Float32Array(r);else if(n==="int32")s=new Int32Array(r);else if(n==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<r;a++)s[a]=t();return B.makeTensor(s,e,n)}var _3=W({rand_:N3}),Gy=Ra(Y0()),Hy=class{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=Gy.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let r=this.nextVal;return this.nextVal=NaN,r}let e,t,n=!1;for(;!n;){let r,s,a;do r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*s*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},E3=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let s=r||Math.random();this.randu=Gy.alea(s.toString()),this.randn=new Hy(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do r=this.randn.nextValue(),a=1+this.c*r;while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},A3=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Gy.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function D3(e,t,n=1,r="float32",s){if(n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let a=new E3(t,n,r,s),o=ze(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var $3=W({randomGamma_:D3});function F3(e,t=0,n=1,r,s){if(r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let a=new Hy(t,n,r,!1,s),o=ze(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var Wk=W({randomNormal_:F3});function R3(e,t=0,n=1,r="float32",s){let a=ze(e,r),o=new A3(t,n,null,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var cu=W({randomUniform_:R3});function uu(e,t,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");let s={start:e,stop:t,step:n,dtype:r};return B.runKernel(Al,{},s)}function P3(e){let n={input:E(e,"input","real")};return B.runKernel(oh,n)}var nd=W({real_:P3});function O3(e){let n={x:E(e,"x","reciprocal")};return B.runKernel(Fc,n)}var jy=W({reciprocal_:O3});function M3(e){let n={x:E(e,"x","relu")};return B.runKernel(vo,n)}var qe=W({relu_:M3});function L3(e){let n={x:E(e,"x","relu6")};return B.runKernel(wo,n)}var jh=W({relu6_:L3});function B3(e,t){let r={x:E(e,"x","reverse")},s={dims:t};return B.runKernel(ko,r,s)}var Zn=W({reverse_:B3});function z3(e){let t=E(e,"x","reverse");return F(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Zn(t,0)}var W3=W({reverse1d_:z3});function V3(e,t){let n=E(e,"x","reverse");return F(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Zn(n,t)}var U3=W({reverse2d_:V3});function G3(e,t){let n=E(e,"x","reverse");return F(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Zn(n,t)}var H3=W({reverse3d_:G3});function j3(e,t){let n=E(e,"x","reverse");return F(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Zn(n,t)}var q3=W({reverse4d_:j3});function K3(e){let n={x:E(e,"x","round")};return B.runKernel(Io,n)}var qh=W({round_:K3});function X3(e){let n={x:E(e,"x","rsqrt")};return B.runKernel(So,n)}var Kh=W({rsqrt_:X3});function Ie(e,t){if((dn(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&dn(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return aa(e,[],[],t)}function Y3(e){let n={x:E(e,"x","selu")};return B.runKernel(Mc,n)}var Xh=W({selu_:Y3});function Z3(e,t,n,r,s,a=[1,1],o="NHWC"){let i=E(e,"x","separableConv2d"),c=E(t,"depthwiseFilter","separableConv2d"),u=E(n,"pointwiseFilter","separableConv2d"),l=i,d=!1;if(i.rank===3&&(d=!0,l=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),F(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),F(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),F(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),F(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let p=c.shape[2],h=c.shape[3];F(u.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${u.shape[2]}.`);let f=ua(l,c,r,s,o,a),g=Ft(f,u,1,"valid",o);return d?U(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var Jo=W({separableConv2d_:Z3});async function J3(e,t){let n=E(e,"x","setdiff1d"),r=E(t,"y","setdiff1d");F(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),F(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),F(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let s=await n.data(),a=await r.data(),o=new Set(a),i=0;for(let l=0;l<s.length;l++)o.has(s[l])||i++;let c=new Wt([i],n.dtype),u=new Wt([i],"int32");for(let l=0,d=0;l<s.length;l++)o.has(s[l])||(c.values[d]=s[l],u.values[d]=l,d++);return[c.toTensor(),u.toTensor()]}var Vk=J3;function Q3(e){let n={x:E(e,"x","sign")};return B.runKernel(zc,n)}var qy=W({sign_:Q3});function eO(e){let n={x:E(e,"x","sin")};return B.runKernel(Co,n)}var Yh=W({sin_:eO});function tO(e){let n={x:E(e,"x","sinh")};return B.runKernel(Bc,n)}var Zh=W({sinh_:tO});function nO(e,t,n){let r=E(e,"x","slice1d");return F(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),We(r,[t],[n])}var Jh=W({slice1d_:nO});function rO(e,t,n){let r=E(e,"x","slice2d");return F(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),We(r,t,n)}var Ky=W({slice2d_:rO});function sO(e,t,n){let r=E(e,"x","slice3d");return F(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),We(r,t,n)}var lu=W({slice3d_:sO});function aO(e,t,n){let r=E(e,"x","slice4d");return F(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),We(r,t,n)}var rd=W({slice4d_:aO});function oO(e,t=-1){let n=E(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},s={dim:t};return B.runKernel(Eo,r,s)}var Rr=W({softmax_:oO});function iO(e){F(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return B.runKernel(Zp,t)}var sd=W({fft_:iO});function cO(e){F(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return B.runKernel(Jp,t)}var du=W({ifft_:cO});function uO(e){let t=e.shape[e.shape.length-1],n=e.size/t,r;if(t<=2){let s=U(e,[n,t]);r=du(s)}else{let s=[n,2*(t-1)],a=U(nd(e),[n,t]),o=U(Bh(e),[n,t]),i=Zn(We(a,[0,1],[n,t-2]),1),c=V(Zn(We(o,[0,1],[n,t-2]),1),Ie(-1)),u=Ze([a,i],1),l=Ze([o,c],1),d=U(sa(u,l),[s[0],s[1]]);r=du(d)}if(r=nd(r),e.rank===3&&e.shape[0]!==0){let s=r,a=e.shape[0];r=U(r,[a,r.shape[0]/a,r.shape[1]]),s.dispose()}return r}var Qh=W({irfft_:uO});function lO(e,t,n=0){let s={x:E(e,"x","split")},a={numOrSizeSplits:t,axis:n};return B.runKernel(Uc,s,a)}var Pn=W({split_:lO});function dO(e,t){F(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],r=e.size/n,s;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,s=We(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,s=Ze([e,It(f)],e.shape.length-1),n=t}else s=e;let a=Ge(s),o=U(sa(s,a),[r,n]),i=sd(o),c=Math.floor(n/2)+1,u=nd(i),l=Bh(i),d=Pn(u,[c,n-c],u.shape.length-1),p=Pn(l,[c,n-c],l.shape.length-1),h=s.shape.slice();return h[s.shape.length-1]=c,U(sa(d[0],p[0]),h)}var ad=W({rfft_:dO});function pO(e){let n={x:E(e,"x","sqrt")};return B.runKernel(No,n)}var an=W({sqrt_:pO});function hO(e,t){let n=E(e,"a","squaredDifference"),r=E(t,"b","squaredDifference");[n,r]=Nt(n,r),gt(n.shape,r.shape);let s={a:n,b:r},a={};return B.runKernel(Ao,s,a)}var ef=W({squaredDifference_:hO});function fO(e,t){let n=E(e,"x","squeeze");return U(n,e1(n.shape,t).newShape)}var ss=W({squeeze_:fO});function mO(e,t=0){let n=Gl(e,"tensors","stack","string_or_numeric");F(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&F(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let r=n,s={axis:t};return B.runKernel(Dc,r,s)}var Pt=W({stack_:mO});function gO(e,t=0){let r={x:E(e,"x","step")},s={alpha:t};return B.runKernel(ta,r,s)}var pu=W({step_:gO});function bO(e,t,n,r,s=0,a=0,o=0,i=0,c=0){let l={x:E(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};return B.runKernel(Gc,l,d)}var Xy=W({stridedSlice_:bO});function yO(e){let n={x:E(e,"x","tan")};return B.runKernel($o,n)}var Yy=W({tan_:yO});function He(e,t){Pa(e);let n=es(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return aa(e,null,n,t)}function Pr(e,t,n){if(Pa(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=es(e,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return aa(e,t,r,n)}function Or(e,t,n){if(Pa(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=es(e,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return aa(e,t,r,n)}function vO(e,t,n){if(Pa(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=es(e,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return aa(e,t,r,n)}function xO(e,t,n){if(Pa(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=es(e,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,aa(e,t,r,n)}function wO(e,t=1,n=!0){let r=E(e,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);let a={x:r},o={k:t,sorted:n},[i,c]=B.runKernel(Hc,a,o);return{values:i,indices:c}}var Zy=W({topk_:wO});function kO(e,t=0,n=1,r,s){if(r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new Hy(t,n,r,!0,s),o=ze(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var tf=W({truncatedNormal_:kO});function IO(e,t=0){let n=E(e,"x","unique","string_or_numeric");F(n.rank>0,()=>"The input tensor must be at least 1D");let r={x:n},s={axis:t},[a,o]=B.runKernel(bh,r,s);return{values:a,indices:o}}var nf=W({unique_:IO});function SO(e,t,n){let r=E(e,"x","unsortedSegmentSum"),s=E(t,"segmentIds","unsortedSegmentSum","int32");F(qt(n),()=>"numSegments must be of dtype int");let a={x:r,segmentIds:s},o={numSegments:n};return B.runKernel(Fl,a,o)}var Jy=W({unsortedSegmentSum_:SO});function CO(e,t=0){let n=E(e,"x","unstack","string_or_numeric");F(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let r={value:n},s={axis:t};return B.runKernel(qc,r,s)}var dt=W({unstack_:CO});function Uk(e,t=!0,n,r){return B.makeVariable(e,t,n,r)}function Gk(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let r=ze(e,"int32"),s=ze([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=r.indexToLoc(n[a]),i=a*e.length;s.values.set(o,i)}return s.toTensor()}async function TO(e){let t=E(e,"condition","whereAsync","bool"),n=await t.data(),r=Gk(t.shape,n);return e!==t&&t.dispose(),r}var Qy=TO;async function NO(e,t,n){let r=E(e,"tensor","boolMask"),s=E(t,"mask","boolMask","bool"),a=n==null?0:n,o=s.rank,i=r.shape;F(o>0,()=>"mask cannot be scalar"),bn(i.slice(a,a+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let m=a;m<a+o;m++)c*=i[m];let u=i.slice(0,a).concat([c],i.slice(a+o)),l=U(r,u),d=U(s,[-1]),p=await Qy(d),h=ss(p,[1]),f=Ko(l,h,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),h.dispose(),l.dispose(),d.dispose(),p.dispose(),f}var _O=NO;function EO(e,t="euclidean",n=null,r=!1){e=E(e,"x","norm");let s=Hk(e,t,n),a=s.shape;if(r){let o=wr(n,e.shape);a=Yo(s.shape,o)}return U(s,a)}function Hk(e,t,n=null){if(e.rank===0)return Mt(e);if(e.rank!==1&&n===null)return Hk(U(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ve(Mt(e),n);if(t===1/0)return Ir(Mt(e),n);if(t===-1/0)return Ql(Mt(e),n);if(t==="euclidean"||t===2)return an(ve(Ns(Mt(e),Ie(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return Ir(ve(Mt(e),n[0]),n[1]-1);if(t===1/0)return Ir(ve(Mt(e),n[1]),n[0]);if(t===-1/0)return Ql(ve(Mt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return an(ve(ct(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var rf=W({norm_:EO});function AO(e,t,n,r,s=!0){let a=E(e,"v","movingAverage"),o=E(t,"x","movingAverage"),i=E(n,"decay","movingAverage");w1(a,o),F(ks(a.shape,o.shape),()=>"Shape mismatch in v and x");let c=Ie(1),u=fe(c,i),l=V(fe(o,a),u);if(s){F(r!=null,()=>"When using zeroDebias: true, step is required.");let d=E(r,"step","movingAverage");l=ge(l,fe(c,Ns(i,d)))}return Y(a,l)}var DO=W({movingAverage_:AO});function $O(e,t,n){let r=E(e,"indices","scatterND","int32"),s=E(t,"updates","scatterND");ly(s,r,n);let a={indices:r,updates:s},o={shape:n};return B.runKernel(Pc,a,o)}var jk=W({scatterND_:$O});function FO(e,t,n,r){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function RO(e,t,n,r=0){let s=E(e,"sparseIndices","sparseToDense","int32"),a=E(t,"sparseValues","sparseToDense"),o=E(r,"defaultValue","sparseToDense",a.dtype);FO(s,a,n,o);let i={sparseIndices:s,sparseValues:a,defaultValue:o},c={outputShape:n};return B.runKernel(hh,i,c)}var ev=W({sparseToDense_:RO});function PO(e,t){let n=E(t,"indices","gatherND","int32"),s={params:E(e,"x","gatherND","string_or_numeric"),indices:n};return B.runKernel(mc,s)}var qk=W({gatherND_:PO});function OO(e,t){if(t==null)return e.shape.slice();if(ks(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)t[r]==null&&e.shape[r]!=null?n.push(e.shape[r]):n.push(t[r]);return n}return t}function MO(e,t,n,r){let s=E(e,"x","dropout");if(F(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),F(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Ee?s.clone():s;let a=OO(s,n),o=1-t,i=ge(ou(Y(cu(a,0,1,"float32",r),o)),o);return V(s,i)}var Kk=W({dropout_:MO});function Xk(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function tv(e,t,n){let r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(o)}return He(s,"float32")}async function LO(e,t,n=1){let r=E(e,"predictions","inTopK"),s=E(t,"targets","inTopK");F(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),F(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),bn(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=r.shape[r.shape.length-1];F(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await r.data(),i=await s.data(),[c,u]=[o.length/a,a],l=t1("bool",c);for(let d=0;d<c;d++){let p=d*u,h=o.subarray(p,p+u),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),l[d]=0;for(let m=0;m<n;m++)if(f[m].index===i[d]){l[d]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),jn(l,s.shape,"bool")}var BO=LO,pa={};Re(pa,{conv2d:()=>VO,depthwiseConv2d:()=>jO,matMul:()=>KO});function zO(e,t,n,r,s,a="NHWC",o){let i=e;e.rank===3&&(i=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;c.rank===3&&(c=U(t,[1,t.shape[0],t.shape[1],t.shape[2]])),F(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),F(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),F(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u=a==="NHWC"?i.shape[3]:i.shape[1],l=a==="NHWC"?c.shape[3]:c.shape[1];F(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),F(l===n[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`),o!=null&&F(qt(s),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);let d={x:i,dy:c},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,filterShape:n};return B.runKernel(zp,d,p)}var nv=W({conv2DBackpropFilter_:zO});function sf(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return V(e,pu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function af(e,t){let n=t,r=Vt(e.shape,t.shape);return r.length>0&&(n=ve(n,r)),U(n,e.shape)}function of(e,t,n,r){if(t==="linear")return e;if(t==="relu")return qe(e);if(t==="elu")return au(e);if(t==="relu6")return jh(e);if(t==="prelu")return td(e,n);if(t==="leakyrelu")return Yl(e,r);if(t==="sigmoid")return lr(e);throw new Error(`Unknown fused activation ${t}.`)}var cf=(e,t)=>!(e>0)||t==="linear";function WO({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:c="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(c=c||"linear",cf(B.state.gradientDepth,c)===!1){let k=Ft(e,t,n,r,s,a,o);return i!=null&&(k=Y(k,i)),of(k,c,u,l)}let d=E(e,"x","conv2d"),p=E(t,"filter","conv2d"),h=d,f=!1;d.rank===3&&(f=!0,h=U(d,[1,d.shape[0],d.shape[1],d.shape[2]])),F(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),F(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),o!=null&&F(qt(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`),F(h.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`),F(ts(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),F(s==="NHWC",()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);let m=ql(h.shape,p.shape,n,a,r,o),g;i!=null&&(g=E(i,"bias","fused conv2d"),[g]=Nt(g,d),gt(m.outShape,g.shape));let b;u!=null&&(b=E(u,"prelu weights","fused conv2d"));let y=(k,C)=>{let[N,$,R,O]=C,D=sf(k,R,c);F(ca(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let P=_y($.shape,D,N,n,r),T=nv($,D,N.shape,n,r),L=[P,T];if(O!=null){let G=af(O,D);L.push(G)}return L},v={x:h,filter:p,bias:g,preluActivationWeights:b},x={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:c,leakyreluAlpha:l};return i==null?ns((C,N,$)=>{let R=B.runKernel(Oo,v,x);return $([N,C,R]),f&&(R=U(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:y}})(h,p):ns((C,N,$,R)=>{let O=B.runKernel(Oo,v,x);return R([N,C,O,$]),f&&(O=U(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:y}})(h,p,g)}var VO=W({fusedConv2d_:WO});function UO(e,t,n,r,s,a=[1,1],o){let i=e;e.rank===3&&(i=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;c.rank===3&&(c=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:i,dy:c},l={strides:r,pad:s,dimRoundingMode:o,dilations:a,filterShape:n};return B.runKernel(Gp,u,l)}var Yk=W({depthwiseConv2dNativeBackpropFilter_:UO});function GO(e,t,n,r,s,a=[1,1],o){let i=t,c=!1;t.rank===3&&(c=!0,i=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:i,filter:n},l={strides:r,pad:s,dimRoundingMode:o,dilations:a,inputShape:e},d=B.runKernel(Hp,u,l);return c?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Zk=W({depthwiseConv2dNativeBackpropInput_:GO});function HO({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:c="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(cf(B.state.gradientDepth,c)===!1){let k=ua(e,t,n,r,s,a,o);return i!=null&&(k=Y(k,i)),of(k,c,u,l)}let d=E(e,"x","depthwiseConv2d"),p=E(t,"filter","depthwiseConv2d"),h=d,f=!1;d.rank===3&&(f=!0,h=U(d,[1,d.shape[0],d.shape[1],d.shape[2]])),F(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),F(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),F(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),a==null&&(a=[1,1]),F(ts(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),o!=null&&F(qt(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`);let m=ql(h.shape,p.shape,n,a,r,o,!0),g;i!=null&&(g=E(i,"bias","fused conv2d"),[g]=Nt(g,d),gt(m.outShape,g.shape));let b;u!=null&&(b=E(u,"prelu weights","fused depthwiseConv2d"));let y=(k,C)=>{F(ca(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[N,$,R,O]=C,D=sf(k,R,c),P=Zk($.shape,D,N,n,r,a,o),T=Yk($,D,N.shape,n,r,a,o);if(O!=null){let L=af(g,D);return[P,T,L]}return[P,T]},v={x:h,filter:p,bias:g,preluActivationWeights:b},x={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:c,leakyreluAlpha:l};return i==null?ns((C,N,$)=>{let R=B.runKernel(Mo,v,x);return $([N,C,R]),f&&(R=U(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:y}})(h,p):ns((C,N,$,R)=>{let O=B.runKernel(Mo,v,x);return R([N,C,O,$]),f&&(O=U(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:y}})(h,p,g)}var jO=W({fusedDepthwiseConv2d_:HO});function qO({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(cf(B.state.gradientDepth,a)===!1){let O=De(e,t,n,r);return s!=null&&(O=Y(O,s)),of(O,a,o,i)}let c=E(e,"a","fused matMul"),u=E(t,"b","fused matMul");[c,u]=Nt(c,u);let l=n?c.shape[c.rank-2]:c.shape[c.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?c.shape[c.rank-1]:c.shape[c.rank-2],h=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=c.shape.slice(0,-2),m=u.shape.slice(0,-2),g=$t(f),b=$t(m);F(c.rank>=2&&u.rank>=2&&c.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${c.rank} and ${u.rank}.`),F(ks(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${c.shape} and ${u.shape} must match.`),F(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${c.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);let y=c.shape.slice(0,-2).concat([p,h]),v=n?U(c,[g,l,p]):U(c,[g,p,l]),x=r?U(u,[b,h,d]):U(u,[b,d,h]),k;s!=null&&(k=E(s,"bias","fused matMul"),[k]=Nt(k,c),gt(y,k.shape));let C;o!=null&&(C=E(o,"prelu weights","fused matMul"));let N=(O,D)=>{let[P,T,L,G]=D,j=sf(U(O,L.shape),L,a),q,K;if(!n&&!r?(q=De(j,T,!1,!0),K=De(P,j,!0,!1)):!n&&r?(q=De(j,T,!1,!1),K=De(j,P,!0,!1)):n&&!r?(q=De(T,j,!1,!0),K=De(P,j,!1,!1)):(q=De(T,j,!0,!0),K=De(j,P,!0,!0)),s!=null){let te=af(G,j);return[q,K,te]}else return[q,K]},$={a:v,b:x,bias:k,preluActivationWeights:C},R={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:i};return s==null?ns((D,P,T)=>{let L=B.runKernel(Po,$,R);return T([D,P,L]),{value:U(L,y),gradFunc:N}})(v,x):ns((D,P,T,L)=>{let G=B.runKernel(Po,$,R);return L([D,P,G,T]),{value:U(G,y),gradFunc:N}})(v,x,k)}var KO=W({fusedMatMul_:qO});function XO(e){return tv(e,.54,.46)}var YO=W({hammingWindow_:XO});function ZO(e){return tv(e,.5,.5)}var Jk=W({hannWindow_:ZO});function JO(e,t,n,r=!1,s=0){let a=0,o=[];for(;a+t<=e.size;)o.push(We(e,a,t)),a+=n;if(r)for(;a<e.size;){let i=a+t-e.size,c=Ze([We(e,a,t-i),xn([i],s)]);o.push(c),a+=n}return o.length===0?Pr([],[0,t]):U(Ze(o),[o.length,t])}var Qk=W({frame_:JO});function QO(e,t,n,r,s=Jk){r==null&&(r=Xk(t));let a=Qk(e,t,n),o=V(a,s(t));return ad(o,r)}var eM=W({stft_:QO});function tM(e,t,n,r,s="bilinear",a=0){let o=E(e,"image","cropAndResize"),i=E(t,"boxes","cropAndResize","float32"),c=E(n,"boxInd","cropAndResize","int32"),u=i.shape[0];F(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),F(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),F(c.rank===1&&c.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),F(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),F(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),F(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);let l={image:o,boxes:i,boxInd:c},d={method:s,extrapolationValue:a,cropSize:r};return B.runKernel(ic,l,d)}var nM=W({cropAndResize_:tM});function rM(e){let t=E(e,"image","flipLeftRight","float32");F(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return B.runKernel(hc,n,{})}var sM=W({flipLeftRight_:rM});function aM(e){let t=E(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];F(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),F(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Fn(t,s)}var oM=W({grayscaleToRGB_:aM});function iM(e,t,n=0,r=.5){let s=E(e,"image","rotateWithOffset","float32");F(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);let a={image:s},o={radians:t,fillValue:n,center:r};return B.runKernel(Xc,a,o)}var cM=W({rotateWithOffset_:iM});function hu(e,t,n,r,s,a){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),F(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),F(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),F(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),F(t.rank===1,()=>"scores must be a 1D tensor"),F(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),F(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}function uM(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){let a=E(e,"boxes","nonMaxSuppression"),o=E(t,"scores","nonMaxSuppression"),i=hu(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;let c={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return B.runKernel(Nc,{boxes:a,scores:o},c)}var lM=W({nonMaxSuppression_:uM});function dM(e,t,n){let r=pM(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function pM(e,t,n){return fM(e,t,n||hM)}function hM(e,t){return e>t?1:e<t?-1:0}function fM(e,t,n){let r=0,s=e.length,a=0,o=!1;for(;r<s;){a=r+(s-r>>>1);let i=n(t,e[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}function eI(e,t,n,r,s){return rv(e,t,n,r,s,0)}function tI(e,t,n,r,s,a){return rv(e,t,n,r,s,0,!1,a,!0)}function nI(e,t,n,r,s,a){return rv(e,t,n,r,s,a,!0)}function rv(e,t,n,r,s,a,o=!1,i=!1,c=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>s&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(rI);let l=a>0?-.5/a:0,d=[],p=[];for(;d.length<n&&u.length>0;){let g=u.pop(),{score:b,boxIndex:y,suppressBeginIndex:v}=g;if(b<s)break;let x=!1;for(let k=d.length-1;k>=v;--k){let C=mM(e,y,d[k]);if(C>=r){x=!0;break}if(g.score=g.score*gM(r,l,C),g.score<=s)break}g.suppressBeginIndex=d.length,x||(g.score===b?(d.push(y),p.push(g.score)):g.score>s&&dM(u,g,rI))}let h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:d};return o&&(m.selectedScores=p),c&&(m.validOutputs=h),m}function mM(e,t,n){let r=e.subarray(t*4,t*4+4),s=e.subarray(n*4,n*4+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),h=(i-a)*(c-o),f=(d-u)*(p-l);if(h<=0||f<=0)return 0;let m=Math.max(a,u),g=Math.max(o,l),b=Math.min(i,d),y=Math.min(c,p),v=Math.max(b-m,0)*Math.max(y-g,0);return v/(h+f-v)}function gM(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function rI(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function bM(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){let a=E(e,"boxes","nonMaxSuppressionAsync"),o=E(t,"scores","nonMaxSuppressionAsync"),i=hu(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;let c=await Promise.all([a.data(),o.data()]),u=c[0],l=c[1],{selectedIndices:d}=eI(u,l,n,r,s);return a!==e&&a.dispose(),o!==t&&o.dispose(),He(d,"int32")}var yM=bM;function vM(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){let o=E(e,"boxes","nonMaxSuppression"),i=E(t,"scores","nonMaxSuppression"),c=hu(o,i,n,r,s,a);n=c.maxOutputSize,r=c.iouThreshold,s=c.scoreThreshold,a=c.softNmsSigma;let u={boxes:o,scores:i},l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a},d=B.runKernel(Ec,u,l);return{selectedIndices:d[0],selectedScores:d[1]}}var xM=W({nonMaxSuppressionWithScore_:vM});async function wM(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){let o=E(e,"boxes","nonMaxSuppressionAsync"),i=E(t,"scores","nonMaxSuppressionAsync"),c=hu(o,i,n,r,s,a);n=c.maxOutputSize,r=c.iouThreshold,s=c.scoreThreshold,a=c.softNmsSigma;let u=await Promise.all([o.data(),i.data()]),l=u[0],d=u[1],{selectedIndices:p,selectedScores:h}=nI(l,d,n,r,s,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:He(p,"int32"),selectedScores:He(h)}}var kM=wM;function IM(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){let o=E(e,"boxes","nonMaxSuppression"),i=E(t,"scores","nonMaxSuppression"),c=hu(o,i,n,r,s,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,p={boxes:o,scores:i},h={maxOutputSize:u,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:a},f=B.runKernel(_c,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}var SM=W({nonMaxSuppressionPadded_:IM});async function CM(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){let o=E(e,"boxes","nonMaxSuppressionAsync"),i=E(t,"scores","nonMaxSuppressionAsync"),c=hu(o,i,n,r,s,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,[p,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=tI(p,h,u,l,d,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:He(f,"int32"),validOutputs:Ie(m,"int32")}}var TM=CM;function NM(e,t,n=!1,r=!1){let s=E(e,"images","resizeBilinear");F(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),F(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),F(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=s,o=!1;s.rank===3&&(o=!0,a=U(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let[]=t,i={images:a},c={alignCorners:n,halfPixelCenters:r,size:t},u=B.runKernel(xo,i,c);return o?U(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var sI=W({resizeBilinear_:NM});function _M(e,t,n=!1,r=!1){let s=E(e,"images","resizeNearestNeighbor");F(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),F(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),F(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),F(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=s,o=!1;s.rank===3&&(o=!0,a=U(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let[]=t,i={images:a},c={alignCorners:n,halfPixelCenters:r,size:t},u=B.runKernel(Dl,i,c);return o?U(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var aI=W({resizeNearestNeighbor_:_M});function EM(e,t="binary",n=!1,r=.5){let s=E(e,"image","threshold"),a=.2989,o=.587,i=.114,c=s.shape[0]*s.shape[1],u=V(He([r]),255),l,d,p,h;if(F(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),F(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),F(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),F(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),s.shape[2]===3){[l,d,p]=Pn(s,[1,1,1],-1);let g=V(l,a),b=V(d,o),y=V(p,i);h=Y(Y(g,b),y)}else h=e;if(t==="otsu"){let g=Ty(ce(qh(h),"int32"),jn([]),256);u=AM(g,c)}let f=n?da(h,u):Rn(h,u);return ce(V(f,255),"int32")}function AM(e,t){let n=He([-1]),r=He([0]),s=He([0]),a,o,i,c,u,l;for(let d=0;d<e.size-1;d++){a=We(e,0,d+1),o=We(e,d+1),u=ge(ve(a),t),l=ge(ve(o),t);let p=ve(V(a,uu(0,a.size)));i=ge(p,ve(a));let h=xn(o.shape,a.size),f=Y(uu(0,o.size),h),m=V(o,f);c=ge(ve(m),ve(o));let g=fe(i,c),b=fe(i,c),y=V(u,l);s=V(V(y,g),b);let v=Rn(s,r);r=pn(v,s,r),n=pn(v,He([d]),n)}return n}var DM=W({threshold_:EM});function $M(e,t,n="nearest",r="constant",s=0,a){let o=E(e,"image","transform","float32"),i=E(t,"transforms","transform","float32");F(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),F(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),F(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let c={image:o,transforms:i},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return B.runKernel(jc,c,u)}var FM=W({transform_:$M});function RM(e,t,n){F(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),F(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let r=E(e,"a","bandPart");F(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let s=r.shape,[a,o]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=U(uu(0,a,1,"int32"),[-1,1]),c=uu(0,o,1,"int32"),u=fe(i,c),l=Sr(da(u,Ie(+t,"int32")),la(u,Ie(-n,"int32"))),d=It([a,o],r.dtype);return U(Pt(dt(U(r,[-1,a,o])).map(p=>pn(l,p,d))),s)}var PM=W({bandPart_:RM});function OM(e){let t;if(Array.isArray(e)){t=!1,F(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let s=e[0].shape[0];for(let a=1;a<e.length;++a)F(e[a].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${s})`)}else t=!0,e=Pn(e,e.shape[0],0).map(s=>ss(s,[0]));F(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let s=0;s<e.length;++s)n.push(B.tidy(()=>{let a=r[s];if(s>0)for(let o=0;o<s;++o){let i=V(ve(V(n[o],a)),n[o]);a=fe(a,i)}return ge(a,rf(a,"euclidean"))}));return t?Pt(n,0):n}var MM=W({gramSchmidt_:OM});function LM(e,t=!1){if(F(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return oI(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((c,u)=>c*u),r=dt(U(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach(c=>{let[u,l]=oI(c,t);s.push(u),a.push(l)});let o=U(Pt(s,0),e.shape),i=U(Pt(a,0),e.shape);return[o,i]}}function oI(e,t=!1){return B.tidy(()=>{F(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],s=Py(n),a=Ss(e),o=Pr([[1]],[1,1]),i=Ss(o),c=n>=r?r:n;for(let u=0;u<c;++u){let l=a,d=i,p=s;[i,a,s]=B.tidy(()=>{let h=We(a,[u,u],[n-u,1]),f=rf(h),m=We(a,[u,u],[1,1]),g=pn(Rn(m,0),Pr([[-1]]),Pr([[1]])),b=fe(m,V(g,f)),y=ge(h,b);y.shape[0]===1?i=Ss(o):i=Ze([o,We(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);let v=kt(ge(De(g,b),f)),x=We(a,[u,0],[n-u,r]),k=V(v,i),C=Pe(i);if(u===0)a=fe(x,De(k,De(C,x)));else{let R=fe(x,De(k,De(C,x)));a=Ze([We(a,[0,0],[u,r]),R],0)}let N=Pe(k),$=We(s,[0,u],[n,s.shape[1]-u]);if(u===0)s=fe($,De(De($,i),N));else{let R=fe($,De(De($,i),N));s=Ze([We(s,[0,0],[n,u]),R],1)}return[i,a,s]}),$e([l,d,p])}return!t&&n>r&&(s=We(s,[0,0],[n,r]),a=We(a,[0,0],[r,r])),[s,a]})}var BM=W({qr_:LM}),wn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(wn||(wn={}));function zM(e,t,n=wn.SUM_BY_NONZERO_WEIGHTS){let r=E(e,"losses","computeWeightedLoss"),s=null;t!=null&&(s=E(t,"weights","computeWeightedLoss"));let a=s==null?r:V(r,s);if(n===wn.NONE)return a;if(n===wn.SUM)return ve(a);if(n===wn.MEAN){if(s==null)return _t(a);{let o=r.size/s.size,i=ge(ve(a),ve(s));return o>1?ge(i,Ie(o)):i}}if(n===wn.SUM_BY_NONZERO_WEIGHTS){if(s==null)return ge(ve(a),Ie(r.size));{let o=V(s,Xn(r.shape)),i=ce(ve(Zo(o,Ie(0))),"float32");return ge(ve(a),i)}}throw Error(`Unknown reduction: ${n}`)}var _s=W({computeWeightedLoss_:zM});function WM(e,t,n,r=wn.SUM_BY_NONZERO_WEIGHTS){let s=E(e,"labels","absoluteDifference"),a=E(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=E(n,"weights","absoluteDifference")),bn(s.shape,a.shape,"Error in absoluteDifference: ");let i=Mt(fe(s,a));return _s(i,o,r)}var VM=W({absoluteDifference_:WM});function UM(e,t,n,r,s=wn.SUM_BY_NONZERO_WEIGHTS){let a=E(e,"labels","cosineDistance"),o=E(t,"predictions","cosineDistance"),i=null;r!=null&&(i=E(r,"weights","cosineDistance")),bn(a.shape,o.shape,"Error in cosineDistance: ");let c=Ie(1),u=fe(c,ve(V(a,o),n,!0));return _s(u,i,s)}var GM=W({cosineDistance_:UM});function HM(e,t,n,r=wn.SUM_BY_NONZERO_WEIGHTS){let s=E(e,"labels","hingeLoss"),a=E(t,"predictions","hingeLoss"),o=null;n!=null&&(o=E(n,"weights","hingeLoss")),bn(s.shape,a.shape,"Error in hingeLoss: ");let i=Ie(1);s=fe(V(Ie(2),s),i);let c=qe(fe(i,V(s,a)));return _s(c,o,r)}var jM=W({hingeLoss_:HM});function qM(e,t,n,r=1,s=wn.SUM_BY_NONZERO_WEIGHTS){let a=E(e,"labels","huberLoss"),o=E(t,"predictions","huberLoss"),i=null;n!=null&&(i=E(n,"weights","huberLoss")),bn(a.shape,o.shape,"Error in huberLoss: ");let c=Ie(r),u=Mt(fe(o,a)),l=iu(u,c),d=fe(u,l),p=Y(V(Ie(.5),ct(l)),V(c,d));return _s(p,i,s)}var KM=W({huberLoss_:qM});function XM(e,t,n,r=1e-7,s=wn.SUM_BY_NONZERO_WEIGHTS){let a=E(e,"labels","logLoss"),o=E(t,"predictions","logLoss"),i=null;n!=null&&(i=E(n,"weights","logLoss")),bn(a.shape,o.shape,"Error in logLoss: ");let c=Ie(1),u=Ie(r),l=kt(V(a,Kn(Y(o,u)))),d=V(fe(c,a),Kn(Y(fe(c,o),u))),p=fe(l,d);return _s(p,i,s)}var YM=W({logLoss_:XM});function ZM(e,t,n,r=wn.SUM_BY_NONZERO_WEIGHTS){let s=E(e,"labels","meanSquaredError"),a=E(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=E(n,"weights","meanSquaredError")),bn(s.shape,a.shape,"Error in meanSquaredError: ");let i=ef(s,a);return _s(i,o,r)}var JM=W({meanSquaredError_:ZM});function QM(e,t){let n=E(e,"labels","sigmoidCrossEntropyWithLogits"),r=E(t,"logits","sigmoidCrossEntropyWithLogits");bn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let s=qe(r),a=V(r,n),o=Zl(hn(kt(Mt(r))));return Y(fe(s,a),o)}function eL(e,t,n,r=0,s=wn.SUM_BY_NONZERO_WEIGHTS){let a=E(e,"multiClassLabels","sigmoidCrossEntropy"),o=E(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=E(n,"weights","sigmoidCrossEntropy")),bn(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){let u=Ie(r),l=Ie(1),d=Ie(.5);a=Y(V(a,fe(l,u)),V(d,u))}let c=QM(a,o);return _s(c,i,s)}var tL=W({sigmoidCrossEntropy_:eL});function nL(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return ns((s,a,o)=>{let c=zy(a,[n],!0),u=fe(ce(a,"float32"),c);o([s,u]);let l=kt(V(u,s));return{value:ve(l,[n]),gradFunc:(h,f)=>{let[m,g]=f,b=Yo(h.shape,[n]);return[V(U(h,b),fe(ce(m,"float32"),hn(g))),V(U(h,b),fe(hn(g),ce(m,"float32")))]}}})(e,t)}function rL(e,t,n,r=0,s=wn.SUM_BY_NONZERO_WEIGHTS){let a=E(e,"onehotLabels","softmaxCrossEntropy"),o=E(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=E(n,"weights","softmaxCrossEntropy")),bn(a.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){let u=Ie(r),l=Ie(1),d=Ie(a.shape[1]);a=Y(V(a,fe(l,u)),ge(u,d))}let c=nL(a,o);return _s(c,i,s)}var sL=W({softmaxCrossEntropy_:rL});function aL(e,t,n,r){let s=E(e,"indices","sparseFillEmptyRows"),a=E(t,"values","sparseFillEmptyRows"),o=E(n,"denseShape","sparseFillEmptyRows"),i=E(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let c={indices:s,values:a,denseShape:o,defaultValue:i},u=B.runKernel(uh,c);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var oL=W({sparseFillEmptyRows_:aL});function iL(e,t,n){let r=E(e,"inputIndices","sparseReshape"),s=E(t,"inputShape","sparseReshape"),a=E(n,"newShape","sparseReshape");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:r,inputShape:s,newShape:a},i=B.runKernel(lh,o);return{outputIndices:i[0],outputShape:i[1]}}var cL=W({sparseReshape_:iL});function uL(e,t,n){let r=E(e,"data","sparseSegmentMean"),s=E(t,"indices","sparseSegmentMean"),a=E(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:r,indices:s,segmentIds:a};return B.runKernel(dh,o)}var lL=W({sparseSegmentMean_:uL});function dL(e,t,n){let r=E(e,"data","sparseSegmentSum"),s=E(t,"indices","sparseSegmentSum"),a=E(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:r,indices:s,segmentIds:a};return B.runKernel(ph,o)}var pL=W({sparseSegmentSum_:dL});function hL(e,t,n,r,s,a,o,i){let c=E(e,"data","stringNGrams","string");if(c.dtype!=="string")throw new Error("Data must be of datatype string");if(c.shape.length!==1)throw new Error(`Data must be a vector, saw: ${c.shape}`);let u=E(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let l={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:o,preserveShortSequences:i},d={data:c,dataSplits:u},p=B.runKernel(fh,d,l);return{nGrams:p[0],nGramsSplits:p[1]}}var fL=W({stringNGrams_:hL});function mL(e,t,n=!0){let r=E(e,"input","stringSplit","string"),s=E(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);let a={skipEmpty:n},o={input:r,delimiter:s},i=B.runKernel(mh,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var gL=W({stringSplit_:mL});function bL(e,t){let n=E(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let s={input:n};return B.runKernel(gh,s,r)}var yL=W({stringToHashBucketFast_:bL}),vL={fft:sd,ifft:du,rfft:ad,irfft:Qh},xL={hammingWindow:YO,hannWindow:Jk,frame:Qk,stft:eM},Jn={flipLeftRight:sM,grayscaleToRGB:oM,resizeNearestNeighbor:aI,resizeBilinear:sI,rotateWithOffset:cM,cropAndResize:nM,nonMaxSuppression:lM,nonMaxSuppressionAsync:yM,nonMaxSuppressionWithScore:xM,nonMaxSuppressionWithScoreAsync:kM,nonMaxSuppressionPadded:SM,nonMaxSuppressionPaddedAsync:TM,threshold:DM,transform:FM},iI={bandPart:PM,gramSchmidt:MM,qr:BM},wL={absoluteDifference:VM,computeWeightedLoss:_s,cosineDistance:GM,hingeLoss:jM,huberLoss:KM,logLoss:YM,meanSquaredError:JM,sigmoidCrossEntropy:tL,softmaxCrossEntropy:sL},od={sparseFillEmptyRows:oL,sparseReshape:cL,sparseSegmentMean:lL,sparseSegmentSum:pL},uf={stringNGrams:fL,stringSplit:gL,stringToHashBucketFast:yL},Es=class extends ik{minimize(e,t=!1,n){let{value:r,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:s[o.name]}));this.applyGradients(a)}else this.applyGradients(s);return $e(s),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return $k(e,t)}dispose(){this.iterations_!=null&&$e(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ie(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Es,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var lf=class extends Es{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=B.registeredVariables[n],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${n}/accum_grad`,variable:M(()=>Ge(s).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${n}/accum_var`,variable:M(()=>Ge(s).variable(a))});let o=Array.isArray(e)?e[r].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[r].variable,c=this.accumulatedUpdates[r].variable;M(()=>{let u=Y(V(i,this.rho),V(ct(o),1-this.rho)),l=V(ge(an(Y(c,this.epsilon)),an(Y(i,this.epsilon))),o),d=Y(V(c,this.rho),V(ct(l),1-this.rho));i.assign(u),c.assign(d);let p=Y(V(l,-this.learningRate),s);s.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&($e(this.accumulatedGrads.map(e=>e.variable)),$e(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};lf.className="Adadelta";ia(lf);var df=class extends Es{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=B.registeredVariables[n];if(this.accumulatedGrads[r]==null){let i=!1;this.accumulatedGrads[r]={originalName:`${n}/accumulator`,variable:M(()=>xn(s.shape,this.initialAccumulatorValue).variable(i))}}let a=Array.isArray(e)?e[r].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[r].variable;M(()=>{let i=Y(o,ct(a));o.assign(i);let c=Y(V(ge(a,an(Y(i,B.backend.epsilon()))),-this.learningRate),s);s.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&$e(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};df.className="Adagrad";ia(df);var pf=class extends Es{constructor(e,t,n,r=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],M(()=>{this.accBeta1=Ie(t).variable(),this.accBeta2=Ie(n).variable()}),r==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);M(()=>{let n=fe(1,this.accBeta1),r=fe(1,this.accBeta2);t.forEach((s,a)=>{let o=B.registeredVariables[s],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:M(()=>Ge(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:M(()=>Ge(o).variable(i))});let c=Array.isArray(e)?e[a].tensor:e[s];if(c==null)return;let u=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,d=Y(V(u,this.beta1),V(c,1-this.beta1)),p=Y(V(l,this.beta2),V(ct(c),1-this.beta2)),h=ge(d,n),f=ge(p,r);u.assign(d),l.assign(p);let m=Y(V(ge(h,Y(an(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(V(this.accBeta1,this.beta1)),this.accBeta2.assign(V(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&$e(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&$e(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),M(()=>{this.accBeta1.assign(Ns(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ns(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};pf.className="Adam";ia(pf);var hf=class extends Es{constructor(e,t,n,r=null,s=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],M(()=>{this.iteration=Ie(0).variable(),this.accBeta1=Ie(t).variable()}),r==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);M(()=>{let n=fe(1,this.accBeta1),r=ge(-this.learningRate,Y(V(this.iteration,this.decay),1));t.forEach((s,a)=>{let o=B.registeredVariables[s],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:Ge(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:Ge(o).variable(i)});let c=Array.isArray(e)?e[a].tensor:e[s];if(c==null)return;let u=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,d=Y(V(u,this.beta1),V(c,1-this.beta1)),p=V(l,this.beta2),h=Mt(c),f=rs(p,h);u.assign(d),l.assign(f);let m=Y(V(ge(r,n),ge(d,Y(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(Y(this.iteration,1)),this.accBeta1.assign(V(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&$e(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&$e(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};hf.className="Adamax";ia(hf);var id=class extends Es{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=Array.isArray(e)?e[r].tensor:e[n];if(s==null)return;let a=B.registeredVariables[n];M(()=>{let o=Y(V(this.c,s),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Yt(Ie(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};id.className="SGD";ia(id);var ff=class extends id{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ie(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=B.registeredVariables[n];if(this.accumulations[r]==null){let i=!1;this.accumulations[r]={originalName:`${n}/momentum`,variable:M(()=>Ge(s).variable(i))}}let a=this.accumulations[r].variable,o=Array.isArray(e)?e[r].tensor:e[n];o!=null&&M(()=>{let i,c=Y(V(this.m,a),o);this.useNesterov?i=Y(V(this.c,Y(o,V(c,this.m))),s):i=Y(V(this.c,c),s),a.assign(c),s.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&$e(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};ff.className="Momentum";ia(ff);var mf=class extends Es{constructor(e,t=.9,n=0,r=null,s=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,r==null&&(this.epsilon=B.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=B.registeredVariables[n],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${n}/rms`,variable:M(()=>Ge(s).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${n}/momentum`,variable:M(()=>Ge(s).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${n}/mg`,variable:M(()=>Ge(s).variable(a))});let o=Array.isArray(e)?e[r].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[r].variable,c=this.accumulatedMoments[r].variable;M(()=>{let u=Y(V(i,this.decay),V(ct(o),1-this.decay));if(this.centered){let l=this.accumulatedMeanGrads[r].variable,d=Y(V(l,this.decay),V(o,1-this.decay)),p=ge(V(o,this.learningRate),an(fe(u,Y(ct(d),this.epsilon)))),h=Y(V(c,this.momentum),p);i.assign(u),l.assign(d),c.assign(h);let f=fe(s,h);s.assign(f)}else{let l=Y(V(i,this.decay),V(ct(o),1-this.decay)),d=Y(V(c,this.momentum),ge(V(o,this.learningRate),an(Y(l,this.epsilon))));i.assign(l),c.assign(d);let p=fe(s,d);s.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&$e(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&$e(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&$e(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};mf.className="RMSProp";ia(mf);var Qo=class{static sgd(e){return new id(e)}static momentum(e,t,n=!1){return new ff(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new mf(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new pf(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new lf(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new hf(e,t,n,r,s)}static adagrad(e,t=.1){return new df(e,t)}},ei={sgd:Qo.sgd,momentum:Qo.momentum,adadelta:Qo.adadelta,adagrad:Qo.adagrad,rmsprop:Qo.rmsprop,adamax:Qo.adamax,adam:Qo.adam},kL=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function gf(){return new Promise(e=>kL(()=>e()))}var _={};Re(_,{ERF_A1:()=>FL,ERF_A2:()=>RL,ERF_A3:()=>PL,ERF_A4:()=>OL,ERF_A5:()=>ML,ERF_P:()=>$L,PARALLELIZE_THRESHOLD:()=>sv,SELU_SCALE:()=>uI,SELU_SCALEALPHA:()=>cI,applyActivation:()=>of,assertAndGetBroadcastShape:()=>gt,assertAxesAreInnerMostDims:()=>BP,assertParamsConsistent:()=>IL,assignToTypedArray:()=>UL,axesAreInnerMostDims:()=>Ly,calculateShapes:()=>X1,checkEinsumDimSizes:()=>XL,combineLocations:()=>Rk,complexWithEvenIndex:()=>zL,complexWithOddIndex:()=>WL,computeConv2DInfo:()=>ql,computeConv3DInfo:()=>fk,computeDefaultPad:()=>Iy,computeDilation2DInfo:()=>cR,computeOptimalWindowSize:()=>CL,computeOutAndReduceShapes:()=>Pk,computeOutShape:()=>SL,computePool2DInfo:()=>hk,computePool3DInfo:()=>uR,convertConv2DDataFormat:()=>mk,decodeEinsumEquation:()=>qL,eitherStridesOrDilationsAreOne:()=>ts,expandShapeToKeepDim:()=>Yo,exponent:()=>HL,exponents:()=>GL,fromStringArrayToUint8:()=>sB,fromUint8ToStringArray:()=>rB,getAxesPermutation:()=>Ok,getBroadcastDims:()=>eP,getComplexWithIndex:()=>VL,getEinsumComputePath:()=>YL,getEinsumPermutation:()=>KL,getFusedBiasGradient:()=>af,getFusedDyActivation:()=>sf,getImageCenter:()=>TL,getInnerMostAxes:()=>zP,getPermuted:()=>_L,getReductionAxes:()=>Vt,getReshaped:()=>NL,getReshapedPermuted:()=>EL,getSliceBeginCoords:()=>AL,getSliceSize:()=>DL,getUndoAxesPermutation:()=>By,isIdentityPermutation:()=>ZL,log:()=>DD,mergeRealAndImagArrays:()=>LL,prepareAndValidate:()=>K1,prepareSplitSize:()=>QL,segment_util:()=>pI,shouldFuse:()=>cf,slice_util:()=>vn,splitRealAndImagArrays:()=>BL,tupleValuesAreOne:()=>ca,upcastType:()=>kr,validateInput:()=>ly,validateUpdateShape:()=>uy,warn:()=>Jr});function IL(e,t){let n=e[0].length;e.forEach((s,a)=>{F(s.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),F(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((s,a)=>{for(let o=0;o<n;o++)F(o===t||s[o]===r[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function SL(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var sv=30;function CL(e){return e<=sv?e:Rp(e,Math.floor(Math.sqrt(e)))}function TL(e,t,n){let r=n*(typeof e=="number"?e:e[0]),s=t*(typeof e=="number"?e:e[1]);return[r,s]}function NL(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)s=s.concat([e[o+1]/t[o],t[o]]);s=s.concat(e.slice(a+1))}return s}function _L(e,t,n=!0){let r=[];if(n){r.push(t);for(let s=t+1;s<e;++s)s<=2*t?(r.push(s),r.push(s-(t+1))):r.push(s)}else{let s=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2==1?a.push(o):s.push(o);r.push(...s),r.push(0),r.push(...a)}return r}function EL(e,t,n,r=!0){let s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?r?s.push(t[a-1]*e[a]):s.push(e[a]/t[a-1]):s.push(e[a]);return s}function AL(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function DL(e,t,n){let r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}var cI=1.7580993408473768,uI=1.0507009873554805,$L=.3275911,FL=.254829592,RL=-.284496736,PL=1.421413741,OL=-1.453152027,ML=1.061405429;function LL(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function BL(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function zL(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function WL(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function VL(e,t){let n=e[t*2],r=e[t*2+1];return{real:n,imag:r}}function UL(e,t,n,r){e[r*2]=t,e[r*2+1]=n}function GL(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){let a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function HL(e,t,n){let r=(n?2:-2)*Math.PI*(e/t),s=Math.cos(r),a=Math.sin(r);return{real:s,imag:a}}var av="->",jL=/->/g,lI=",",dI="...";function qL(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(jL,"").length)/av.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${av}").`);let[r,s]=e.split(av);F(r.indexOf(dI)===-1,()=>`The ellipsis notation ("${dI}") is not supported yet.`);let a=r.split(lI),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let p=0;p<s.length;++p){let h=s[p];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let p=0;p<r.length;++p){let h=r[p];i.indexOf(h)===-1&&h!==lI&&i.push(h)}let c=new Array(a.length);for(let p=0;p<o;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);c[p]=[];for(let h=0;h<a[p].length;++h)c[p].push(i.indexOf(a[p][h]))}let u=i.length,l=s.length,d=[];for(let p=l;p<u;++p)d.push(p);return{allDims:i,summedDims:d,idDims:c}}function KL(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;let r=[];for(let s=0;s<e;++s)n[s]===-1&&r.push(s);return n=n.filter(s=>s!==-1),{permutationIndices:n,expandDims:r}}function XL(e,t,n){let r=new Array(e);for(let s=0;s<n.length;++s){let a=n[s].shape;for(let o=0;o<t[s].length;++o)r[t[s][o]]===void 0?r[t[s][o]]=a[o]:F(r[t[s][o]]===a[o],()=>`Expected dimension ${r[t[s][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function YL(e,t){let n=e,r=[],s=0;e.length===0&&n.push(-1),s=e.length+1;for(let o=0;o<s;++o)r.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],c=JL(t,i);for(let u of c)a.indexOf(u)===-1&&(r[o].push(u),a.push(u))}return{path:n,steps:r}}function ZL(e){return e.every((t,n)=>t===n)}function JL(e,t){let n=[];for(let r=0;r<e.length;++r)(e[r].length===0||e[r].indexOf(t)!==-1||t===-1)&&n.push(r);return n}function QL(e,t,n=0){let r=[];if(typeof t=="number")F(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{let s=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);F(s<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,c)=>c>0?i+c:i);t[a]=e.shape[n]-o}F(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}var pI={};Re(pI,{collectGatherOpShapeInfo:()=>nB,computeOutShape:()=>tB,segOpComputeOptimalWindowSize:()=>eB});function eB(e,t){let n=!1,r;for(e<=sv?(r=e,n=!0):r=Rp(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=Rp(e,r+1);return r}function tB(e,t,n){let r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function nB(e,t,n,r){let s=t.shape.length,a=e.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let o=e.shape[n],i=[],c=1,u=1,l=1;for(let d=0;d<r;++d)i.push(e.shape[d]),c*=e.shape[d];for(let d=r;d<n;d++)i.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<s;d++)i.push(t.shape[d]);for(let d=n+1;d<a;d++)i.push(e.shape[d]),l*=e.shape[d];return{batchSize:c,sliceSize:l,outerSize:u,dimSize:o,outputShape:i}}function rB(e){try{return e.map(t=>Ih(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function sB(e){return e.map(t=>Ll(t))}var as={};Re(as,{nonMaxSuppressionV3Impl:()=>eI,nonMaxSuppressionV4Impl:()=>tI,nonMaxSuppressionV5Impl:()=>nI,whereImpl:()=>Gk});var hI={kernelName:Xi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,pu(ce(n,"float32"),-1))}}},aB={kernelName:Yi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=ct(ce(n,"float32")),s=an(fe(Ie(1),r));return kt(ge(e,s))}}}},oB={kernelName:Zi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=an(fe(ct(ce(n,"float32")),1));return ge(e,r)}}}},iB={kernelName:Js,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=gt(n.shape,r.shape);return{a:()=>{let i=e,c=Vt(n.shape,s);return c.length>0&&(i=ve(i,c)),U(i,n.shape)},b:()=>{let i=e,c=Vt(r.shape,s);return c.length>0&&(i=ve(i,c)),U(i,r.shape)}}}},cB={kernelName:La,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((r,s)=>{n[s]=()=>e.clone()}),n}},uB={kernelName:Ba,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ge(n)}}},lB={kernelName:xl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ge(n)}}},dB={kernelName:ec,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ge(e,an(fe(Ie(1),ct(ce(n,"float32")))))}}},pB={kernelName:tc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=an(Y(Ie(1),ct(ce(n,"float32"))));return ge(e,r)}}}},hB={kernelName:sc,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=gt(n.shape,r.shape);return{a:()=>{let i=Y(ct(n),ct(r)),c=V(e,ge(r,i)),u=Vt(n.shape,s);return u.length>0&&(c=ve(c,u)),U(c,n.shape)},b:()=>{let i=Y(ct(n),ct(r)),c=kt(V(e,ge(n,i))),u=Vt(r.shape,s);return u.length>0&&(c=ve(c,u)),U(c,r.shape)}}}},fB={kernelName:nc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ge(e,Y(ct(ce(n,"float32")),1))}}},mB={kernelName:rc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ge(e,fe(Ie(1),ct(ce(n,"float32"))))}}};function gB(e,t,n,r,s,a){let o=E(e,"dy","avgPool3dGrad"),i=E(t,"input","avgPool3dGrad"),c=o,u=i,l=!1;i.rank===4&&(l=!0,c=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(c.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),F(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),a!=null&&F(qt(s),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let d={dy:c,input:u},p={filterSize:n,strides:r,pad:s,dimRoundingMode:a},h=B.runKernel(Mp,d,p);return l?U(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var bB=W({avgPool3dGrad_:gB}),yB={kernelName:wl,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:s,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>bB(e,r,s,a,o,i)}}};function vB(e,t,n,r,s){let a=E(e,"dy","avgPoolGrad"),o=E(t,"input","avgPoolGrad");F(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,c=a,u=!1;o.rank===3&&(u=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(c.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),F(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let l={dy:c,input:i},d={filterSize:n,strides:r,pad:s},p=B.runKernel(Op,l,d);return u?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var xB=W({avgPoolGrad_:vB}),wB={kernelName:za,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:s,strides:a,pad:o}=n;return{x:()=>xB(e,r,s,a,o)}}},kB={kernelName:Wa,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,s]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>De(e,s,!1,!0),b:()=>De(r,e,!0,!1)}:!a&&o?{a:()=>De(e,s,!1,!1),b:()=>De(e,r,!0,!1)}:a&&!o?{a:()=>De(s,e,!1,!0),b:()=>De(r,e,!1,!1)}:{a:()=>De(s,e,!0,!0),b:()=>De(e,r,!0,!0)}}},IB={kernelName:ac,gradFunc:(e,t,n)=>{let{blockShape:r,crops:s}=n;return{x:()=>ed(e,r,s)}}},SB={kernelName:p1,gradFunc:(e,t,n)=>{let r=n,s=r.inputShape,a=r.shape,o=Array.from(a);for(let c=s.length-1;c>=0;c--)if(s[c]===a[c])o[c]=1;else if(s[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);let i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>ve(e,i,!0)}}},CB={kernelName:Va,gradFunc:e=>({x:()=>e.clone()})},TB={kernelName:Ua,gradFunc:e=>({x:()=>Ge(e)})},NB={kernelName:Qs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>pn(Sr(la(r,s),da(r,a)),e,Ge(e))}}},_B={kernelName:kl,inputsToSave:["x"],gradFunc:hI.gradFunc},EB={kernelName:oc,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(c=>c.shape),{axis:s}=n,a=wr(s,t[0].shape)[0],o=r.map(c=>c[a]);return Pn(e,o,a).map(c=>()=>c)}},AB={kernelName:Ga,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,s]=t,{dilations:a,strides:o,pad:i,dataFormat:c}=n;return F(ca(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>_y(r.shape,e,s,o,i,c),filter:()=>nv(r,e,s.shape,o,i,c)}}},DB={kernelName:Ha,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,s]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>Ft(e,s,a,o,i,1,c),filter:()=>nv(e,r,s.shape,a,o,i,c)}}};function $B(e,t,n,r,s){let a=e;e.rank===4&&(a=U(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),F(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),F(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),F(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),F(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),F(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},c={strides:r,pad:s,filterShape:n};return B.runKernel(Wp,i,c)}var FB=W({conv3DBackpropFilter_:$B}),RB={kernelName:Il,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:s,pad:a}=n;F(ca(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[o,i]=t;return{x:()=>Sk(o.shape,e,i,s,a),filter:()=>FB(o,e,i.shape,s,a)}}},PB={kernelName:ja,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(kt(Yh(ce(n,"float32"))),e)}}},OB={kernelName:qa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(Zh(ce(n,"float32")),e)}}},MB={kernelName:Ka,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:s,exclusive:a,reverse:o}=n;return{x:()=>{let i=Ok([s],r.rank),c=Lh(e,s,a,!o);return i!=null&&(c=Pe(c,i)),c}}}},LB={kernelName:Xa,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:s,pad:a,dimRoundingMode:o}=n,i=r==null?[1,1]:r;F(ca(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[c,u]=t;return F(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${c.rank}.`),F(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),F(c.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),F(ts(s,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`),o!=null&&F(qt(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`),{x:()=>Zk(c.shape,e,u,s,a,i,o),filter:()=>Yk(c,e,u.shape,s,a,i,o)}}},BB={kernelName:Sl,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,s]=t,a={x:r,filter:s,dy:e},o={x:r,filter:s,dy:e};return{x:()=>B.runKernel(qp,a,n),filter:()=>B.runKernel(Kp,o,n)}}},zB={kernelName:Za,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>B.runKernel(Yp,r)}}},WB={kernelName:uc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=V(hn(kt(ct(n))),2/Math.sqrt(Math.PI));return{x:()=>V(e,r)}}},VB={kernelName:Ja,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,n)}}},UB={kernelName:dc,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>U(e,n.shape)}}},GB={kernelName:pc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,hn(n))}}},HB={kernelName:Qa,gradFunc:e=>({x:()=>Ge(e)})},jB={kernelName:eo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=gt(n.shape,r.shape);return{a:()=>{let i=ge(e,ce(r,"float32")),c=Vt(n.shape,s);return c.length>0?U(ve(i,c),n.shape):i},b:()=>{let i=V(e,ce(n,"float32")),c=Vt(r.shape,s);c.length>0&&(i=U(ve(i,c),r.shape));let u=ct(r);return kt(ge(i,ce(u,"float32")))}}}},qB={kernelName:to,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[s,a,o,i]=t,c=i==null?Ie(1):i,u=Vt(a.shape,s.shape),l=[];if(a.rank===1){for(let x=0;x<s.shape.length-1;++x)l.push(s.shape[x]);l.push(1)}let d=fe(s,a),p=V(e,c),h=Kh(Y(o,Ie(r))),f=V(V(V(h,h),h),Ie(-.5));return{x:()=>a.rank===1?U(V(V(e,Fn(U(h,[1,1,1,a.shape[0]]),l)),c),s.shape):U(V(V(e,h),c),s.shape),mean:()=>{let x=V(V(h,Ie(-1)),p);return a.rank===1&&(x=ve(x,u)),U(x,a.shape)},variance:()=>{let x=V(V(f,d),p);return a.rank===1&&(x=ve(x,u)),U(x,a.shape)},scale:()=>{let x=V(d,h),k=V(e,x);return a.rank===1&&(k=ve(k,u)),U(k,a.shape)},offset:()=>{let x=e;return a.rank===1&&(x=ve(x,u)),U(x,a.shape)}}}},KB={kernelName:fc,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,s]=t,{axis:a}=n,o=wr(a,r.shape)[0];return{x:()=>{let c=r.shape,u=s.size,l=c.slice(0,o),d=l.length,p=c.slice(a,c.length).slice(1),h=p.length,f=fI(0,d),m=fI(d+1,d+1+h),g=mI([l,[u],p]),b=U(e,g),y=U(s,[u]),v=mI([[d],f,m]),x=Pe(b,v),k=Jy(x,y,r.shape[o]),C=By(v);return k=Pe(k,C),k},indices:()=>s}}};function fI(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function mI(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var XB={kernelName:no,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Ge(n),b:()=>Ge(r)}}},YB={kernelName:ro,gradFunc:e=>({x:()=>ce(e,"float32")})},ZB={kernelName:bc,gradFunc:e=>({x:()=>Ge(e)})},JB={kernelName:yc,gradFunc:e=>({x:()=>Ge(e)})},QB={kernelName:vc,gradFunc:e=>({x:()=>Ge(e)})},ez={kernelName:so,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:s}=n,a=Rn(r,0);return{x:()=>pn(a,e,V(e,s))}}},tz={kernelName:kc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ge(e,Y(n,1))}}},nz={kernelName:ao,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ge(e,ce(n,"float32"))}}},rz={kernelName:h1,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:s}=n;return{logits:()=>{let a=!0,o=hn(r);return fe(e,V(ve(e,s,a),o))}}}};function sz(e,t,n,r=5,s=1,a=1,o=.5){let i={x:e,y:t,dy:n},c={depthRadius:r,bias:s,alpha:a,beta:o};return B.runKernel(th,i,c)}var az=W({localResponseNormalizationBackprop_:sz}),oz={kernelName:_l,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,s]=t,{depthRadius:a,bias:o,alpha:i,beta:c}=n;return{x:()=>az(r,s,e,a,o,i,c)}}};function gI(e,t,n,r){return t.rank<n.rank&&(t=U(t,Yo(t.shape,r))),e.rank<n.rank&&(e=U(e,Yo(e.shape,r))),{x:()=>V(e,ce(qn(n,t),e.dtype))}}var bI={kernelName:oo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:s}=r,a=t[0],o=t[1],i=wr(s,a.shape),c=gI(e,o,a,i);return{x:()=>c.x()}}},iz={kernelName:io,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>V(e,ce(la(n,r),"float32")),b:()=>V(e,ce(zh(n,r),"float32"))}}};function cz(e,t,n,r,s,a,o){let i=E(e,"dy","maxPool3dGrad"),c=E(t,"input","maxPool3dGrad"),u=E(n,"output","maxPool3dGrad"),l=i,d=c,p=u,h=!1;c.rank===4&&(h=!0,l=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=U(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),p=U(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),F(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),F(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),F(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),o!=null&&F(qt(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);let f={dy:l,input:d,output:p},m={filterSize:r,strides:s,pad:a,dimRoundingMode:o},g=B.runKernel(rh,f,m);return h?U(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var uz=W({maxPool3dGrad_:cz}),lz={kernelName:El,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,s]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>uz(e,r,s,a,o,i,c)}}};function dz(e,t,n,r,s,a,o){let i=E(e,"dy","maxPoolGrad"),c=E(t,"input","maxPoolGrad"),u=E(n,"output","maxPoolGrad");F(c.rank===i.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${i.rank})`),F(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),F(c.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${c.rank}.`),o!=null&&F(qt(a),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);let l={dy:i,input:c,output:u},d={filterSize:r,strides:s,pad:a,dimRoundingMode:o};return B.runKernel(nh,l,d)}var pz=W({maxPoolGrad_:dz}),hz={kernelName:co,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,s]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>pz(e,r,s,a,o,i)}}},fz={kernelName:uo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:s}=n,a=wr(s,r.shape),i=Pk(r.shape,a)[1],c=$t(i);return{x:()=>{let l=r.shape.slice();a.forEach(h=>{l[h]=1});let d=U(e,l);return ge(V(d,Xn(r.shape,"float32")),c)}}}},mz={kernelName:lo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:s}=r,[a,o]=t,i=wr(s,a.shape),c=gI(e,o,a,i);return{x:()=>c.x()}}},gz={kernelName:po,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>V(e,ce(da(n,r),"float32")),b:()=>V(e,ce(Rn(n,r),"float32"))}}},bz={kernelName:ho,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:s}=n,a=s.map(o=>o[0]);return{x:()=>We(e,a,r.shape)}}},yz={kernelName:Sc,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=gt(n.shape,r.shape);return{a:()=>{let i=Vt(n.shape,s);return i.length>0?U(ve(e,i),n.shape):e},b:()=>{let i=V(e,kt(ou(ge(n,r)))),c=Vt(r.shape,s);return c.length>0?U(ve(i,c),r.shape):i}}}},vz={kernelName:fo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=gt(n.shape,r.shape);return{a:()=>{let i=V(e,ce(r,"float32")),c=Vt(n.shape,s);return c.length>0?U(ve(i,c),n.shape):i},b:()=>{let i=V(e,ce(n,"float32")),c=Vt(r.shape,s);return c.length>0?U(ve(i,c),r.shape):i}}}},xz={kernelName:Cc,gradFunc:e=>({x:()=>kt(e)})},wz={kernelName:mo,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>It(n.shape,"float32")}}},kz={kernelName:Ac,gradFunc:e=>({x:()=>Ge(e)})},Iz={kernelName:Dc,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return dt(e,r).map(a=>()=>a)}},yI={kernelName:go,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:s}=n,a=s.map(o=>o[0]);return{x:()=>We(e,a,r.shape)}}},Sz={kernelName:bo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,s]=t,a=n,o=r,i=gt(a.shape,o.shape);return{a:()=>{let l=ce(o,"float32"),d=V(e,V(l,Ns(a,fe(l,Ie(1))))),p=Vt(a.shape,i);return p.length>0&&(d=ve(d,p)),U(d,a.shape)},b:()=>{let l=Rn(a,0),d=pn(l,Kn(a),Ge(a)),p=V(e,V(s,d)),h=Vt(o.shape,i);return h.length>0&&(p=ve(p,h)),U(p,o.shape)}}}},Cz={kernelName:yo,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,s=Rn(n,0);return{x:()=>pn(s,e,V(e,r)),alpha:()=>{let a=pn(s,Ge(e),V(e,n)),o=Vt(r.shape,e.shape);return o.length>0&&(a=ve(a,o)),U(a,r.shape)}}}},Tz={kernelName:Ya,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=gt(n.shape,r.shape);return{a:()=>{let i=ge(e,ce(r,"float32")),c=Vt(n.shape,s);return c.length>0?U(ve(i,c),n.shape):i},b:()=>{let i=V(e,ce(n,"float32")),c=Vt(r.shape,s);c.length>0&&(i=U(ve(i,c),r.shape));let u=ct(r);return kt(ge(i,ce(u,"float32")))}}}},Nz={kernelName:Fc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ge(e,kt(ct(n)))}}},_z={kernelName:wo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=V(da(n,6),pu(n));return{x:()=>V(e,ce(r,"float32"))}}},Ez={kernelName:vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,ce(pu(n),"float32"))}}},Az={kernelName:Rc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,n.shape)}}},Dz={kernelName:xo,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,s={dy:e,images:r};return{images:()=>B.runKernel(ch,s,n)}}},$z={kernelName:Dl,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,s={dy:e,images:r};return{images:()=>B.runKernel(ih,s,n)}}},Fz={kernelName:ko,gradFunc:(e,t,n)=>{let{dims:r}=n,s=wr(r,e.shape);return{x:()=>Zn(e,s)}}},Rz={kernelName:Io,gradFunc:e=>({x:()=>Ge(e)})},Pz={kernelName:So,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>kt(ge(e,V(Ns(n,1.5),2)))}}},Oz={kernelName:Oc,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ce(Ge(n),"float32"),t:()=>V(e,ce(n,e.dtype)),e:()=>V(e,ce(Jl(n),e.dtype))}}},Mz={kernelName:Mc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=Rn(n,Ie(0)),s=Ie(cI),a=Ie(uI),o=V(e,a),i=V(V(e,s),hn(ce(n,"float32")));return pn(r,o,i)}}}},Lz={kernelName:To,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,V(n,fe(Ie(1),n)))}}},Bz={kernelName:zc,gradFunc:e=>({x:()=>Ge(e)})},zz={kernelName:Co,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(Xl(ce(n,"float32")),e)}}},Wz={kernelName:Bc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(Mh(ce(n,"float32")),e)}}},Vz={kernelName:Lc,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:s,size:a}=n,o=r.shape,[i,c]=ok(r,s,a),u=[];for(let l=0;l<e.rank;l++)u.push([i[l],o[l]-i[l]-c[l]]);return{x:()=>dr(e,u)}}},Uz={kernelName:Eo,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:s}=n,a=!0,o=V(e,r);return{logits:()=>fe(o,V(ve(o,[s],a),r))}}},Gz={kernelName:Wc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,lr(n))}}},vI={kernelName:Vc,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:s}=n;return{x:()=>Kl(e,r,s)}}},xI={kernelName:Uc,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>Ze(e,r)}}},Hz={kernelName:No,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ge(e,V(an(ce(n,"float32")),2))}}},jz={kernelName:$l,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,V(ce(n,"float32"),2))}}},qz={kernelName:Ao,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=Ie(2);return{a:()=>V(e,V(s,fe(n,r))),b:()=>V(e,V(s,fe(r,n)))}}},Kz={kernelName:ta,gradFunc:e=>({x:()=>Ge(e)})},Xz={kernelName:Do,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=gt(n.shape,r.shape);return{a:()=>{let i=e,c=Vt(n.shape,s);return c.length>0&&(i=ve(i,c)),U(i,n.shape)},b:()=>{let i=e,c=Vt(r.shape,s);return c.length>0&&(i=ve(i,c)),U(kt(i),r.shape)}}}},Yz={kernelName:_o,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,s=r.shape.slice(),{axis:a}=n;wr(a,r.shape).forEach(u=>{s[u]=1});let i=U(e,s),c=V(i,Xn(r.shape,"float32"));return{x:()=>c}}},Zz={kernelName:$o,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ge(e,ct(Xl(n)))}}},Jz={kernelName:Fo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(fe(Ie(1),ct(n)),e)}}},Qz={kernelName:ea,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:s}=n;return{x:()=>{let o=Ge(r);if(r.rank===1)for(let i=0;i<s[0];++i)o=Y(o,We(e,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<s[0];++i)for(let c=0;c<s[1];++c)o=Y(o,We(e,[i*r.shape[0],c*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<s[0];++i)for(let c=0;c<s[1];++c)for(let u=0;u<s[2];++u)o=Y(o,We(e,[i*r.shape[0],c*r.shape[1],u*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<s[0];++i)for(let c=0;c<s[1];++c)for(let u=0;u<s[2];++u)for(let l=0;l<s[3];++l)o=Y(o,We(e,[i*r.shape[0],c*r.shape[1],u*r.shape[2],l*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return o}}}},e4={kernelName:Ro,gradFunc:(e,t,n)=>{let r=n,{perm:s}=r,a=By(s);return{x:()=>Pe(e,a)}}},t4={kernelName:qc,gradFunc:(e,t,n)=>{let r=n,{axis:s}=r;return{value:()=>Pt(e,s)}}},n4={kernelName:Fl,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>r4(e,n)}}};function r4(e,t){let n=rs(t,Ge(t)),r=Ko(e,n),s=la(t,Ie(0,"int32")),a=r.rank-s.rank;for(let i=0;i<a;++i)s=fn(s,i+1);s=Sr(s,Xn(r.shape,"bool"));let o=Ge(r);return pn(s,r,o)}var s4={kernelName:Kc,gradFunc:e=>({x:()=>Ge(e)})},a4=[hI,aB,oB,iB,cB,uB,lB,dB,pB,hB,fB,mB,yB,wB,kB,IB,SB,CB,TB,NB,_B,EB,DB,AB,RB,PB,OB,MB,LB,BB,Tz,zB,WB,VB,UB,GB,jB,HB,qB,KB,XB,YB,ZB,JB,QB,ez,tz,nz,rz,oz,bI,bI,iz,lz,hz,fz,mz,gz,bz,yz,vz,xz,wz,kz,Iz,yI,yI,Sz,Cz,Nz,_z,Ez,Az,Dz,$z,Fz,Rz,Pz,Oz,Mz,Lz,Bz,zz,Wz,Vz,Uz,Gz,vI,vI,xI,xI,Hz,qz,jz,Kz,Xz,Yz,Zz,Jz,Qz,e4,t4,n4,s4];for(let e of a4)f1(e);ee().prototype.abs=function(){return this.throwIfDisposed(),Mt(this)};ee().prototype.acos=function(){return this.throwIfDisposed(),my(this)};ee().prototype.acosh=function(){return this.throwIfDisposed(),gy(this)};ee().prototype.add=function(e){return this.throwIfDisposed(),Y(this,e)};ee().prototype.all=function(e,t){return this.throwIfDisposed(),Fh(this,e,t)};ee().prototype.any=function(e,t){return this.throwIfDisposed(),jl(this,e,t)};ee().prototype.argMax=function(e){return this.throwIfDisposed(),Ho(this,e)};ee().prototype.argMin=function(e){return this.throwIfDisposed(),by(this,e)};ee().prototype.asScalar=function(){return this.throwIfDisposed(),F(this.size===1,()=>"The array must have only 1 element."),U(this,[])};ee().prototype.asType=function(e){return this.throwIfDisposed(),ce(this,e)};ee().prototype.as1D=function(){return this.throwIfDisposed(),U(this,[this.size])};ee().prototype.as2D=function(e,t){return this.throwIfDisposed(),U(this,[e,t])};ee().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),U(this,[e,t,n])};ee().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),U(this,[e,t,n,r])};ee().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),U(this,[e,t,n,r,s])};ee().prototype.asin=function(){return this.throwIfDisposed(),yy(this)};ee().prototype.asinh=function(){return this.throwIfDisposed(),vy(this)};ee().prototype.atan=function(){return this.throwIfDisposed(),xy(this)};ee().prototype.atan2=function(e){return this.throwIfDisposed(),wy(this,e)};ee().prototype.atanh=function(){return this.throwIfDisposed(),ky(this)};ee().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ur(this,e,t,n,r)};ee().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Kl(this,e,t)};ee().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Ts(this,e,t,n,r,s)};ee().prototype.broadcastTo=function(e){return this.throwIfDisposed(),su(this,e)};ee().prototype.cast=function(e){return this.throwIfDisposed(),ce(this,e)};ee().prototype.ceil=function(){return this.throwIfDisposed(),Ny(this)};ee().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Zt(this,e,t)};ee().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ee&&(e=[e]),Ze([this,...e],t)};ee().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ph(this,e,t,n,r,s,a)};ee().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Oh(this,e,t,n,r,s)};ee().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ft(this,e,t,n,r,s,a)};ee().prototype.cos=function(){return this.throwIfDisposed(),Xl(this)};ee().prototype.cosh=function(){return this.throwIfDisposed(),Mh(this)};ee().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Lh(this,e,t,n)};ee().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Ay(this,e,t)};ee().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),ua(this,e,t,n,r,s,a)};ee().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Dy(this,e,t,n,r,s)};ee().prototype.divNoNan=function(e){return this.throwIfDisposed(),$y(this,e)};ee().prototype.div=function(e){return this.throwIfDisposed(),ge(this,e)};ee().prototype.dot=function(e){return this.throwIfDisposed(),Nk(this,e)};ee().prototype.elu=function(){return this.throwIfDisposed(),au(this)};ee().prototype.equal=function(e){return this.throwIfDisposed(),qn(this,e)};ee().prototype.erf=function(){return this.throwIfDisposed(),Fy(this)};ee().prototype.exp=function(){return this.throwIfDisposed(),hn(this)};ee().prototype.expandDims=function(e){return this.throwIfDisposed(),fn(this,e)};ee().prototype.expm1=function(){return this.throwIfDisposed(),Ry(this)};ee().prototype.fft=function(){return this.throwIfDisposed(),sd(this)};ee().prototype.flatten=function(){return this.throwIfDisposed(),U(this,[this.size])};ee().prototype.floor=function(){return this.throwIfDisposed(),ou(this)};ee().prototype.floorDiv=function(e){return this.throwIfDisposed(),$h(this,e)};ee().prototype.gather=function(e,t){return this.throwIfDisposed(),Ko(this,e,t)};ee().prototype.greaterEqual=function(e){return this.throwIfDisposed(),la(this,e)};ee().prototype.greater=function(e){return this.throwIfDisposed(),Rn(this,e)};ee().prototype.ifft=function(){return this.throwIfDisposed(),du(this)};ee().prototype.irfft=function(){return this.throwIfDisposed(),Qh(this)};ee().prototype.isFinite=function(){return this.throwIfDisposed(),Ek(this)};ee().prototype.isInf=function(){return this.throwIfDisposed(),Ak(this)};ee().prototype.isNaN=function(){return this.throwIfDisposed(),Oy(this)};ee().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Yl(this,e)};ee().prototype.lessEqual=function(e){return this.throwIfDisposed(),da(this,e)};ee().prototype.less=function(e){return this.throwIfDisposed(),zh(this,e)};ee().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),My(this,e,t,n,r)};ee().prototype.logSigmoid=function(){return this.throwIfDisposed(),Fk(this)};ee().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Vh(this,e)};ee().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),zy(this,e,t)};ee().prototype.log=function(){return this.throwIfDisposed(),Kn(this)};ee().prototype.log1p=function(){return this.throwIfDisposed(),Zl(this)};ee().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Sr(this,e)};ee().prototype.logicalNot=function(){return this.throwIfDisposed(),Jl(this)};ee().prototype.logicalOr=function(e){return this.throwIfDisposed(),Uh(this,e)};ee().prototype.logicalXor=function(e){return this.throwIfDisposed(),Mk(this,e)};ee().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),De(this,e,t,n)};ee().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Rt(this,e,t,n,r)};ee().prototype.max=function(e,t){return this.throwIfDisposed(),Ir(this,e,t)};ee().prototype.maximum=function(e){return this.throwIfDisposed(),rs(this,e)};ee().prototype.mean=function(e,t){return this.throwIfDisposed(),_t(this,e,t)};ee().prototype.min=function(e,t){return this.throwIfDisposed(),Ql(this,e,t)};ee().prototype.minimum=function(e){return this.throwIfDisposed(),iu(this,e)};ee().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Vy(this,e,t)};ee().prototype.mod=function(e){return this.throwIfDisposed(),Uy(this,e)};ee().prototype.mul=function(e){return this.throwIfDisposed(),V(this,e)};ee().prototype.neg=function(){return this.throwIfDisposed(),kt(this)};ee().prototype.norm=function(e,t,n){return this.throwIfDisposed(),rf(this,e,t,n)};ee().prototype.notEqual=function(e){return this.throwIfDisposed(),Zo(this,e)};ee().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),tu(this,e,t,n)};ee().prototype.onesLike=function(){return this.throwIfDisposed(),Yn(this)};ee().prototype.pad=function(e,t){return this.throwIfDisposed(),dr(this,e,t)};ee().prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),zk(this,e,t,n,r,s)};ee().prototype.pow=function(e){return this.throwIfDisposed(),Ns(this,e)};ee().prototype.prelu=function(e){return this.throwIfDisposed(),td(this,e)};ee().prototype.prod=function(e,t){return this.throwIfDisposed(),Hh(this,e,t)};ee().prototype.reciprocal=function(){return this.throwIfDisposed(),jy(this)};ee().prototype.relu=function(){return this.throwIfDisposed(),qe(this)};ee().prototype.relu6=function(){return this.throwIfDisposed(),jh(this)};ee().prototype.reshapeAs=function(e){return this.throwIfDisposed(),U(this,e.shape)};ee().prototype.reshape=function(e){return this.throwIfDisposed(),U(this,e)};ee().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),sI(this,e,t,n)};ee().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),aI(this,e,t,n)};ee().prototype.reverse=function(e){return this.throwIfDisposed(),Zn(this,e)};ee().prototype.rfft=function(){return this.throwIfDisposed(),ad(this)};ee().prototype.round=function(){return this.throwIfDisposed(),qh(this)};ee().prototype.rsqrt=function(){return this.throwIfDisposed(),Kh(this)};ee().prototype.selu=function(){return this.throwIfDisposed(),Xh(this)};ee().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Jo(this,e,t,n,r,s,a)};ee().prototype.sigmoid=function(){return this.throwIfDisposed(),lr(this)};ee().prototype.sign=function(){return this.throwIfDisposed(),qy(this)};ee().prototype.sin=function(){return this.throwIfDisposed(),Yh(this)};ee().prototype.sinh=function(){return this.throwIfDisposed(),Zh(this)};ee().prototype.slice=function(e,t){return this.throwIfDisposed(),We(this,e,t)};ee().prototype.softmax=function(e){return this.throwIfDisposed(),Rr(this,e)};ee().prototype.softplus=function(){return this.throwIfDisposed(),Xo(this)};ee().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ed(this,e,t)};ee().prototype.split=function(e,t){return this.throwIfDisposed(),Pn(this,e,t)};ee().prototype.sqrt=function(){return this.throwIfDisposed(),an(this)};ee().prototype.square=function(){return this.throwIfDisposed(),ct(this)};ee().prototype.squaredDifference=function(e){return this.throwIfDisposed(),ef(this,e)};ee().prototype.squeeze=function(e){return this.throwIfDisposed(),ss(this,e)};ee().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Ee?[this,e]:[this,...e];return Pt(n,t)};ee().prototype.step=function(e){return this.throwIfDisposed(),pu(this,e)};ee().prototype.stridedSlice=function(e,t,n,r,s,a,o,i){return this.throwIfDisposed(),Xy(this,e,t,n,r,s,a,o,i)};ee().prototype.sub=function(e){return this.throwIfDisposed(),fe(this,e)};ee().prototype.sum=function(e,t){return this.throwIfDisposed(),ve(this,e,t)};ee().prototype.tan=function(){return this.throwIfDisposed(),Yy(this)};ee().prototype.tanh=function(){return this.throwIfDisposed(),qo(this)};ee().prototype.tile=function(e){return this.throwIfDisposed(),Fn(this,e)};ee().prototype.toBool=function(){return this.throwIfDisposed(),ce(this,"bool")};ee().prototype.toFloat=function(){return this.throwIfDisposed(),ce(this,"float32")};ee().prototype.toInt=function(){return this.throwIfDisposed(),ce(this,"int32")};ee().prototype.topk=function(e,t){return this.throwIfDisposed(),Zy(this,e,t)};ee().prototype.transpose=function(e){return this.throwIfDisposed(),Pe(this,e)};ee().prototype.unique=function(e){return this.throwIfDisposed(),nf(this,e)};ee().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Jy(this,e,t)};ee().prototype.unstack=function(e){return this.throwIfDisposed(),dt(this,e)};ee().prototype.where=function(e,t){return this.throwIfDisposed(),pn(e,this,t)};ee().prototype.zerosLike=function(){return this.throwIfDisposed(),Ge(this)};var wI={};Re(wI,{maxNorm:()=>u4,minMaxNorm:()=>p4,nonNeg:()=>d4,unitNorm:()=>l4});var ov;function Ut(){return ov==null&&(ov=dk().epsilon()),ov}function Mr(){return"channelsLast"}var As=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,As.prototype)}},Lr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Lr.prototype)}},H=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,H.prototype)}},Fe=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Fe.prototype)}},kI=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,kI.prototype)}};function ti(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function os(e,t){if(!e)throw new kI(t)}function II(e,t){let n=0;for(let r of e)r===t&&n++;return n}function On(e){return e.length===1?e[0]:e}function bt(e){return Array.isArray(e)?e:[e]}function Ds(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function ni(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var Cr={};function iv(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function cv(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>cv(t));else{let t=Object.keys(e);for(let n of t){let r=e[n];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?e[n]=r.value:cv(r))}}}function cd(e,t={},n={},r="object",s=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in Cr)o=Cr[a];else if(o=t[a],o==null)throw new H(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new H(`${r}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,c;if(o in n?[i,c]=n[o]:o in Cr?[i,c]=Cr.className:o in t&&([i,c]=t[o]),i==null)throw new H(`Unknown ${r}: ${o}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(c!=null){let u={};for(let h of Object.keys(Cr))u[h]=Cr[h];for(let h of Object.keys(n))u[h]=n[h];let l=a.config;l.customObjects=u;let d=Object.assign({},Cr);for(let h of Object.keys(n))Cr[h]=n[h];cv(a.config);let p=c(i,a.config,n,s);return Cr=Object.assign({},d),p}else{let u=Object.assign({},Cr);for(let d of Object.keys(n))Cr[d]=n[d];let l=new i(a.config);return Cr=Object.assign({},u),l}}}function o4(e,t){return e<t?-1:e>t?1:0}function bf(e,t){return-1*o4(e,t)}function ha(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function i4(e){if(e==null)throw new H(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function ri(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new H(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function uv(e,t,n=0,r=1/0){return os(n>=0),os(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(s=>typeof s===t)}function Jt(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,r)=>Jt(n,`element ${r+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${SI(e)}.`)}function SI(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>SI(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function c4(e,t){let n=w.now(),r;return(...a)=>{let o=w.now();return o-n<t||(n=o,r=e(...a)),r}}function CI(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function lv(e,t){return M(()=>an(ve(V(e,e),t,!0)))}var ud=class extends oe.Serializable{getConfig(){return{}}},dv=class extends ud{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return M(()=>{let t=lv(e,this.axis),n=Zt(t,0,this.maxValue);return V(e,ge(n,Y(Ut(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};dv.className="MaxNorm";oe.registerClass(dv);var pv=class extends ud{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return M(()=>ge(e,Y(Ut(),lv(e,this.axis))))}getConfig(){return{axis:this.axis}}};pv.className="UnitNorm";oe.registerClass(pv);var hv=class extends ud{apply(e){return qe(e)}};hv.className="NonNeg";oe.registerClass(hv);var fv=class extends ud{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return M(()=>{let t=lv(e,this.axis),n=Y(V(this.rate,Zt(t,this.minValue,this.maxValue)),V(1-this.rate,t));return V(e,ge(n,Y(Ut(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};fv.className="MinMaxNorm";oe.registerClass(fv);var TI={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Gt(e){return iv(e)}function NI(e,t={}){return cd(e,oe.SerializationMap.getMap().classNameMap,t,"constraint")}function Ht(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in TI?TI[e]:e,config:{}};return NI(n)}else return e instanceof ud?e:NI(e)}function u4(e){return new dv(e)}function l4(e){return new pv(e)}function d4(){return new hv}function p4(e){return new fv(e)}var _I={};Re(_I,{constant:()=>P4,glorotNormal:()=>V4,glorotUniform:()=>W4,heNormal:()=>U4,heUniform:()=>G4,identity:()=>B4,leCunNormal:()=>H4,leCunUniform:()=>j4,ones:()=>R4,orthogonal:()=>q4,randomNormal:()=>M4,randomUniform:()=>O4,truncatedNormal:()=>L4,varianceScaling:()=>z4,zeros:()=>F4});var h4=["channelsFirst","channelsLast"],f4=["nearest","bilinear"],m4=["valid","same","causal"],g4=["max","avg"],b4=["sum","mul","concat","ave"],fu=new Map;function Ot(e){ri(h4,"DataFormat",e)}function y4(e){ri(f4,"InterpolationFormat",e)}function pr(e){ri(m4,"PaddingMode",e)}function EI(e){ri(g4,"PoolMode",e)}var ld=[],AI="/";function si(e,t){ld.push(e);try{let n=t();return ld.pop(),n}catch(n){throw ld.pop(),n}}function v4(){return ld.length===0?"":ld.join(AI)+AI}function DI(e){if(!FI(e))throw new Error("Not a valid tensor name: '"+e+"'");return v4()+e}function $I(e){if(!FI(e))throw new Error("Not a valid tensor name: '"+e+"'");fu.has(e)||fu.set(e,0);let t=fu.get(e);if(fu.set(e,fu.get(e)+1),t>0){let n=`${e}_${t}`;return fu.set(n,1),n}else return e}var x4=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function FI(e){return!!e.match(x4)}function w4(e){return e===parseInt(e.toString(),10)}function fa(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function mu(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function ma(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function Br(e,t){if(t<e)throw new H(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function yf(e,t){return ce(e,t)}function dd(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),U(e,n)}function k4(e,t){return M(()=>{if(e.shape.length!==2)throw new H(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=dd(e,1);return bv(n,[1,t,1])})}function I4(e){let t=[fa(e.shape)];return U(e,t)}function S4(e){if(e.rank<=1)throw new H(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],fa(e.shape,1)];return U(e,t)}function ai(e,t,n){return M(()=>{switch(e.rank){case 1:return Jh(e,t,n);case 2:return Ky(e,[t,0],[n,e.shape[1]]);case 3:return lu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return rd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return We(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return We(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new H(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function mv(e,t,n){return M(()=>{switch(e.rank){case 1:return Jh(e,t,n);case 2:return Ky(e,[0,t],[e.shape[0],n]);case 3:return lu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return rd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new H(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function vf(e,t,n,r){return M(()=>{switch(e.rank){case 1:return Jh(e,t,n);case 2:switch(r){case 1:return ai(e,t,n);case 2:return mv(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ai(e,t,n);case 2:return lu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return mv(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ai(e,t,n);case 2:return rd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return rd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return mv(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${r}`)}default:throw new H(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function gv(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),Ze(e,t)}function RI(e,t){switch(e.rank){case 1:return xk([e,t]);case 2:return wk([e,t],0);case 3:return kk([e,t],0);case 4:return Ik([e,t],0);default:throw new H(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function bv(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new H(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Fn(e,t)}function xf(e,t=0,n=1,r,s){return Wk(e,t,n,r,s)}function is(e,t,n,r){if(e.rank<2||t.rank<2)throw new Fe(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let s=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(s!==a)throw new Fe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2){let s=!1,a=!1;return pa.matMul({a:e,b:t,transposeA:s,transposeB:a,bias:r?yv(e.rank,r,Mr()):null,activation:n})}else{let s=e.shape.slice(),a=s.pop();e=U(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),c=o.pop(),u=[...o,i],l=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=U(Pe(t,l),[c,-1]);let d=[...s,...u],p=!1,h=!1;return U(pa.matMul({a:e,b:t,transposeA:p,transposeB:h,bias:r?yv(e.rank,r,Mr()):null,activation:n}),d)}}function PI(e,t,n){return M(()=>(Array.isArray(t)?t=He(t,"int32"):t=ce(t,"int32"),Ko(e,t,n)))}function pd(e){return V(e,e)}function yv(e,t,n){let r=t.shape;if(t.rank!==1&&t.rank!==e)throw new H(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return r.length===1?U(t,[1,r[0],1,1,1]):U(t,[1,r[3],r[0],r[1],r[2]]);if(n==="channelsLast")return r.length===1?U(t,[1,1,1,1,r[0]]):U(t,[1].concat(r))}else if(e===4){if(n==="channelsFirst")return r.length===1?U(t,[1,r[0],1,1]):U(t,[1,r[2],r[0],r[1]]);if(n==="channelsLast")return r.length===1?U(t,[1,1,1,r[0]]):U(t,[1].concat(r))}else if(e===3){if(n==="channelsFirst")return r.length===1?U(t,[1,r[0],1]):U(t,[1,r[1],r[0]]);if(n==="channelsLast")return r.length===1?U(t,[1,1,r[0]]):U(t,[1].concat(r))}else if(e<3)return t;throw new H(`Unsupported input rank by biasAdd: ${t.rank}`)}function zr(e,t,n){return M(()=>(n==null&&(n=Mr()),Ot(n),Y(e,yv(e.rank,t,n))))}function C4(e,t=1){if(t!==1)throw new Fe(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return au(e)}function T4(e){return M(()=>ge(e,Y(Mt(e),1)))}function OI(e,t,n,r){return M(()=>Kk(e,t,n,r))}function N4(e){return M(()=>{let t=Y(.5,V(.2,e));return Zt(t,0,1)})}function hd(e,t,n=!1){return n?e():t()}var _4=["fanIn","fanOut","fanAvg"],E4=["normal","uniform","truncatedNormal"];function A4(e){ri(_4,"FanMode",e)}function D4(e){ri(E4,"Distribution",e)}var Tr=class extends oe.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},vv=class extends Tr{apply(e,t){return It(e,t)}};vv.className="Zeros";oe.registerClass(vv);var wf=class extends Tr{apply(e,t){return Xn(e,t)}};wf.className="Ones";oe.registerClass(wf);var xv=class extends Tr{constructor(e){super();if(typeof e!="object")throw new H(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new H(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return M(()=>V(Ie(this.value),Xn(e,t)))}getConfig(){return{value:this.value}}};xv.className="Constant";oe.registerClass(xv);var wv=class extends Tr{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return cu(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};wv.className="RandomUniform";oe.registerClass(wv);var kv=class extends Tr{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Fe(`randomNormal does not support dType ${t}.`);return xf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};kv.className="RandomNormal";oe.registerClass(kv);var Iv=class extends Tr{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Fe(`truncatedNormal does not support dType ${t}.`);return tf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Iv.className="TruncatedNormal";oe.registerClass(Iv);var Sv=class extends Tr{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return M(()=>{if(e.length!==2||e[0]!==e[1])throw new H("Identity matrix initializer can only be used for 2D square matrices.");return V(this.gain,Py(e[0]))})}getConfig(){return{gain:this.gain}}};Sv.className="Identity";oe.registerClass(Sv);function $4(e,t="channelsLast"){let n,r;if(Ot(t),e.length===2)n=e[0],r=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let s=fa(e,2);n=e[1]*s,r=e[0]*s}else if(t==="channelsLast"){let s=fa(e,0,e.length-2);n=e[e.length-2]*s,r=e[e.length-1]*s}}else{let s=fa(e);n=Math.sqrt(s),r=Math.sqrt(s)}return[n,r]}var Mn=class extends Tr{constructor(e){super();if(e.scale<0)throw new H(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,A4(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,D4(this.distribution),this.seed=e.seed}apply(e,t){let n=$4(e),r=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Fe(`${this.getClassName()} does not support dType ${t}.`);return tf(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return cu(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Mn.className="VarianceScaling";oe.registerClass(Mn);var kf=class extends Mn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Mn.className}};kf.className="GlorotUniform";oe.registerClass(kf);var If=class extends Mn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Mn.className}};If.className="GlorotNormal";oe.registerClass(If);var Sf=class extends Mn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Mn.className}};Sf.className="HeNormal";oe.registerClass(Sf);var Cf=class extends Mn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Mn.className}};Cf.className="HeUniform";oe.registerClass(Cf);var Tf=class extends Mn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Mn.className}};Tf.className="LeCunNormal";oe.registerClass(Tf);var Nf=class extends Mn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Mn.className}};Nf.className="LeCunNormal";oe.registerClass(Nf);var Cv=class extends Tr{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Fe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return M(()=>{if(e.length<2)throw new Fe("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,r=xf(n,0,1,"float32"),s=iI.gramSchmidt(r);return e[0]>e[1]&&(s=Pe(s)),V(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Cv.className="Orthogonal";oe.registerClass(Cv);var MI={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function LI(e,t={}){return cd(e,oe.SerializationMap.getMap().classNameMap,t,"initializer")}function Et(e){return iv(e)}function St(e){if(typeof e=="string"){let t=e in MI?MI[e]:e;if(t==="GlorotNormal")return new If;if(t==="GlorotUniform")return new kf;if(t==="HeNormal")return new Sf;if(t==="HeUniform")return new Cf;if(t==="LeCunNormal")return new Tf;if(t==="LeCunUniform")return new Nf;{let n={};return n.className=t,n.config={},LI(n)}}else return e instanceof Tr?e:LI(e)}function F4(){return new vv}function R4(){return new wf}function P4(e){return new xv(e)}function O4(e){return new wv(e)}function M4(e){return new kv(e)}function L4(e){return new Iv(e)}function B4(e){return new Sv(e)}function z4(e){return new Mn(e)}function W4(e){return new kf(e)}function V4(e){return new If(e)}function U4(e){return new Sf(e)}function G4(e){return new Cf(e)}function H4(e){return new Tf(e)}function j4(e){return new Nf(e)}function q4(e){return new Cv(e)}var BI={};Re(BI,{Layer:()=>Ke,RNN:()=>ls,RNNCell:()=>kd,activation:()=>EV,add:()=>LV,alphaDropout:()=>wU,average:()=>BV,averagePooling1d:()=>Ux,averagePooling2d:()=>Gx,averagePooling3d:()=>Hx,avgPool1d:()=>KV,avgPool2d:()=>YV,avgPool3d:()=>JV,avgPooling1d:()=>XV,avgPooling2d:()=>ZV,avgPooling3d:()=>QV,batchNormalization:()=>HV,bidirectional:()=>hU,concatenate:()=>zV,conv1d:()=>xV,conv2d:()=>wV,conv2dTranspose:()=>kV,conv3d:()=>IV,conv3dTranspose:()=>SV,convLstm2d:()=>uU,convLstm2dCell:()=>lU,cropping2D:()=>TV,dense:()=>AV,depthwiseConv2d:()=>_V,dot:()=>GV,dropout:()=>DV,elu:()=>fV,embedding:()=>MV,flatten:()=>FV,gaussianDropout:()=>xU,gaussianNoise:()=>vU,globalAveragePooling1d:()=>eU,globalAveragePooling2d:()=>tU,globalMaxPool1d:()=>mU,globalMaxPool2d:()=>gU,globalMaxPooling1d:()=>KS,globalMaxPooling2d:()=>XS,gru:()=>rU,gruCell:()=>sU,input:()=>yS,inputLayer:()=>hV,layerNormalization:()=>jV,leakyReLU:()=>gV,lstm:()=>aU,lstmCell:()=>oU,masking:()=>kU,maxPool1d:()=>bU,maxPool2d:()=>yU,maxPooling1d:()=>YS,maxPooling2d:()=>ZS,maxPooling3d:()=>nU,maximum:()=>WV,minimum:()=>VV,multiply:()=>UV,permute:()=>OV,prelu:()=>bV,reLU:()=>mV,repeatVector:()=>RV,reshape:()=>PV,rnn:()=>dU,separableConv2d:()=>CV,simpleRNN:()=>iU,simpleRNNCell:()=>cU,softmax:()=>yV,spatialDropout1d:()=>$V,stackedRNNCells:()=>pU,thresholdedReLU:()=>vV,timeDistributed:()=>fU,upSampling2d:()=>NV,zeroPadding2d:()=>qV});var K4=0;function zI(){return K4++}var _f={};function Ef(e=""){return e in _f||(_f[e]=0),_f[e]+=1,e+_f[e].toString()}function Tv(e){return Array.isArray(e)&&Array.isArray(e[0])}function Af(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Le(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new H(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function at(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new H(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function Df(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((r,s)=>r*s);return t}var WI="Variable",VI=class{constructor(e,t="float32",n=WI,r=!0,s=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=zI(),n=n==null?WI:n,this.originalName=DI(n),this.name=$I(this.originalName),this.trainable_=r,this.constraint=s,this.val=Uk(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),X4(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function X4(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Nv(e){return e.map(t=>t.read())}function _v(e){e.forEach(t=>{t[0].write(t[1])})}var Lt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Wr=class{constructor(e,t,n,r,s,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=o,this.id=zI(),a!=null&&(this.originalName=DI(a),this.name=$I(this.originalName)),this.rank=t.length}},Y4=0,$f=class{constructor(e,t){this.callArgs=t,this.id=Y4++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},Z4=0,Ke=class extends oe.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Z4++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Ds(n)+"_"+Ef(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Lr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new H(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return On(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return On(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new As(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new As(`Layer ${this.name} is not connected, no input to return.`);return On(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new As(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new As(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return On(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=bt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=bt(this.inputSpec);if(e.length!==t.length)throw new H(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],s=t[n];if(s==null)continue;let a=r.rank;if(s.ndim!=null&&a!==s.ndim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&r.dtype!==s.dtype)throw new H(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){let o=r.shape;for(let i in s.axes){let c=Number(i),u=s.axes[i],l=c>=0?o[c]:o[o.length+c];if(u!=null&&[u,null].indexOf(l)===-1)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${u} but got shape ${o}.`)}}if(s.shape!=null)for(let o=0;o<s.shape.length;++o){let i=s.shape[o],c=r.shape[o];if(i!=null&&c!=null&&i!==c)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=bt(e),r=!0;for(let a of n)if(!(a instanceof Wr)){r=!1;break}let s=!0;for(let a of n)if(a instanceof Wr){s=!1;break}if(r===s)throw new H("Arguments to apply() must be all SymbolicTensors or all Tensors");return si(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of bt(e))a.push(o.shape);this.build(On(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),o=bt(a),i=[];for(let c of o)n.indexOf(c)!==-1&&(c=c.clone()),i.push(c);if(a=On(i),this.activityRegularizer!=null)throw new Fe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=J4(e),o=this.computeOutputShape(a),i,c=Q4(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((u,l)=>new Wr(c,u,this,bt(e),t,this.name,l)):i=new Wr(c,o,this,bt(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new Fe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{n!=null&&e[r]!=null&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new As(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new As(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Lr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Df(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Nv(e?this.trainableWeights:this.weights)}setWeights(e){M(()=>{let t=this.weights;if(t.length!==e.length)throw new H(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],r=Nv(t);for(let s=0;s<r.length;++s){let a=r[s],o=t[s],i=e[s];if(!w.arraysEqual(a.shape,i.shape))throw new H(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}_v(n)})}addWeight(e,t,n,r,s,a,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new H(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(r=St("zeros"));let i=r.apply(t,n),c=new VI(i,n,e,a,o);return i.dispose(),s!=null&&this.addLoss(()=>s.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=bt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,r,s,a,o=null){let i=bt(e);t=bt(t),n=bt(n),r=bt(r),s=Af(s),a=Af(a);let c=[],u=[],l=[];for(let d of i)c.push(d.sourceLayer),u.push(d.nodeIndex),l.push(d.tensorIndex);new $f({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:l,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function J4(e){e=bt(e);let t=[];for(let n of e)t.push(n.shape);return On(t)}function Q4(e){return"float32"}function UI(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let r=t.inboundNodes[n];if(r.inboundLayers.length===0)return r.inputTensors;{let s=[];for(let a=0;a<r.inboundLayers.length;a++){let o=r.inputTensors[a],i=r.inboundLayers[a],c=r.nodeIndices[a],u=UI(o,i,c);for(let l of u)s.indexOf(l)===-1&&s.push(l)}return s}}}var gu=class extends Ke{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:Ef("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new H("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new H("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new H("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new Wr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new $f({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new H(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};gu.className="InputLayer";oe.registerClass(gu);function GI(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new H("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new gu({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function ga(e){if(e==null)return;let t=[],n=[],r=[];for(let s in e){let a=e[s];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(s),r.push(o)}}if(t.length>0){let s=await Promise.all(t);for(let a=0;a<s.length;++a)e[n[a]]=s[a][0];$e(r)}}function HI(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var jI;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(jI||(jI={}));var eW=125,bu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},qI=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},tW=class extends bu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let r in t){let s=t[r];if(typeof s=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+s*n;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;let o=M(()=>Y(this.totals[r],V(s,n)));this.totals[r]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:M(()=>{let r=V(ge(1,this.seen),this.totals[n]);t[n]=r,this.totals[n].dispose(),Yt(t[n])}))}},KI=class extends bu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(s),n.push(o)}}let r=await Promise.all(e);for(let s=0;s<r.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}},XI=class extends bu{constructor(e,t){super();if(this.currentEpoch=0,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=eW),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=c4(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];this.yield!=null&&(await ga(n),r.push(this.yield(e,t,n))),r.push(gf()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await ga(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await ga(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(gf()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await ga(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await ga(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(gf()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await ga(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await ga(e),await this.trainEnd(e))}};function YI(e,t){return e==null&&(e={}),e instanceof bu?[e]:Array.isArray(e)&&e[0]instanceof bu?e:bt(e).map(r=>new XI(r,t))}var Nr=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Nr.checkForDuplicate(t),Nr.constructors[e]==null&&(Nr.constructors[e]=[]),Nr.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Nr.constructors)Nr.constructors[+t].forEach(r=>{if(r===e)throw new H("Duplicate callback constructor.")})}static clear(){Nr.constructors={}}static createCallbacks(e){let t=[];for(let n in Nr.constructors){let r=+n;e>=r&&t.push(...Nr.constructors[r])}return t.map(n=>new n)}};Nr.constructors={};function ZI(e,t,n,r,s,a,o,i,c){let u=new KI,l=[new tW,...Nr.createCallbacks(t)];e!=null&&l.push(...e),l.push(u);let d=new qI(l);return d.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:c}),{callbackList:d,history:u}}function Vr(e,t={},n=!1){return cd(e,oe.SerializationMap.getMap().classNameMap,t,"layer",n)}function Ff(e,t){return M(()=>{e.dtype!=="float32"&&(e=ce(e,"float32"));let n=ve(pd(e),t,!0),r=xn(n.shape,Ut()),s=an(rs(n,r));return ge(e,s)})}function oi(e,t){return M(()=>_t(pd(fe(t,e)),-1))}function Rf(e,t){return M(()=>_t(Mt(fe(t,e)),-1))}function yu(e,t){return M(()=>{let n=fe(e,t),r=Zt(Mt(e),Ut(),Number.MAX_VALUE),s=Mt(ge(n,r));return V(100,_t(s,-1))})}function nW(e,t){return M(()=>{let n=Zt(t,Ut(),Number.MAX_VALUE),r=Kn(Y(1,n)),s=Zt(e,Ut(),Number.MAX_VALUE),a=Kn(Y(1,s));return _t(pd(fe(r,a)),-1)})}function rW(e,t){return M(()=>{let n=rs(0,fe(1,V(e,t)));return _t(pd(n),-1)})}function sW(e,t){return M(()=>{let n=rs(0,fe(1,V(e,t)));return _t(n,-1)})}function aW(e,t){return M(()=>{let n=ve(V(e,t),-1),r=Ir(V(fe(1,e),t),-1);return rs(0,Y(1,fe(r,n)))})}function oW(e,t){return M(()=>{let n=Math.log(2),r=fe(t,e),s=fe(Y(r,Xo(V(-2,r))),n);return _t(s,-1)})}function fd(e,t,n=!1){return M(()=>{if(n)t=Rr(t);else{let r=ve(t,t.shape.length-1,!0);t=ge(t,r)}return t=Zt(t,Ut(),1-Ut()),kt(ve(V(ce(e,"float32"),Kn(t)),t.shape.length-1))})}function Pf(e,t,n=!1){return M(()=>{let r=ce(ou(I4(e)),"int32");t=Zt(t,Ut(),1-Ut());let s=t.shape,a=U(tu(r,s[s.length-1]),s);return fd(a,t,n)})}function iW(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new H(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return M(()=>{let n=qe(t),r=kt(Mt(t));return Y(fe(n,V(t,e)),Zl(hn(r)))})}function Of(e,t){return M(()=>{let n;return n=Zt(t,Ut(),1-Ut()),n=Kn(ge(n,fe(1,n))),_t(iW(e,n),-1)})}function cW(e,t){return M(()=>{let n=Zt(e,Ut(),1),r=Zt(t,Ut(),1);return ve(V(e,Kn(ge(n,r))),-1)})}function uW(e,t){return M(()=>{let n=Kn(Y(Ut(),t));return _t(fe(t,V(e,n)),-1)})}function Ev(e,t){return M(()=>{let n=Ff(e,-1),r=Ff(t,-1),s=V(n,r);return kt(ve(s,-1))})}var Mf={meanSquaredError:oi,meanAbsoluteError:Rf,meanAbsolutePercentageError:yu,meanSquaredLogarithmicError:nW,squaredHinge:rW,hinge:sW,categoricalHinge:aW,logcosh:oW,categoricalCrossentropy:fd,sparseCategoricalCrossentropy:Pf,binaryCrossentropy:Of,kullbackLeiblerDivergence:cW,poisson:uW,cosineProximity:Ev};function Av(e){if(typeof e=="string"){if(e in Mf)return Mf[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new H(t)}else return e}function Dv(e,t){return M(()=>{let n=V(.5,Yn(t)),r=yf(Rn(t,n),e.dtype);return _t(qn(e,r),-1)})}function $v(e,t){return M(()=>yf(qn(Ho(e,-1),Ho(t,-1)),"float32"))}function JI(e,t){return M(()=>ce(ve(Sr(qn(e,1),qn(t,1))),"float32"))}function lW(e,t){return M(()=>ce(ve(Sr(qn(e,1),qn(t,0))),"float32"))}function dW(e,t){return M(()=>ce(ve(Sr(qn(e,0),qn(t,1))),"float32"))}function QI(e,t){return M(()=>{let n=JI(e,t),r=dW(e,t),s=Y(n,r);return ce(pn(Rn(s,0),ge(n,s),0),"float32")})}function pW(e,t){return M(()=>{let n=JI(e,t),r=lW(e,t),s=Y(n,r);return ce(pn(Rn(s,0),ge(n,s),0),"float32")})}function eS(e,t){return Of(e,t)}function tS(e,t){return e.rank===t.rank&&(e=ss(e,[e.rank-1])),t=Ho(t,-1),t.dtype!==e.dtype&&(t=ce(t,e.dtype)),ce(qn(e,t),"float32")}var hW=oi,fW=oi,mW=Rf,gW=Rf,bW=yu,yW=yu,Fv=fd,vW=Ev,nS=Pf,Lf={binaryAccuracy:Dv,categoricalAccuracy:$v,precision:QI,categoricalCrossentropy:Fv,sparseCategoricalCrossentropy:nS,mse:hW,MSE:fW,mae:mW,MAE:gW,mape:bW,MAPE:yW,cosine:vW};function xW(e){if(typeof e=="string"&&e in Lf)return Lf[e];if(typeof e!="string"&&e!=null)return e;throw new H(`Unknown metric ${e}`)}function Bf(e){if(os(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(Mf))if(Mf[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Lf))if(Lf[n]===e){t=n;break}return t!==void 0?t:e.name}}function wW(e){let t={Adagrad:()=>ei.adagrad(.01),Adadelta:()=>ei.adadelta(1,.95,Ut()),Adam:()=>ei.adam(.001,.9,.999,Ut()),Adamax:()=>ei.adamax(.002,.9,.999,Ut(),0),RMSProp:()=>ei.rmsprop(.001,.9,0,Ut()),SGD:()=>ei.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new H(`Unknown Optimizer ${e}`)}var rS=1*1024*1024;function sS(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!Rv(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let r=JSON.stringify(e);r.length>rS&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${rS}.`)}}function Rv(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!Rv(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!Rv(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function kW(e,t,n,r=console.log){let s=SW(e),a=["Layer (type)","Output shape","Param #"];s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(l=>Math.floor(t*l)));let o;if(!s){a.push("Receives inputs"),o=[];for(let l in e.nodesByDepth)o.push(...e.nodesByDepth[l])}r("_".repeat(t)),zf(a,n,r),r("=".repeat(t));let i=e.layers;for(let l=0;l<i.length;++l)s?CW(i[l],n,r):TW(i[l],n,o,r),r((l===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let c=IW(e),u=Df(e.nonTrainableWeights);r(`Total params: ${c+u}`),r(`Trainable params: ${c}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function IW(e){let t;return e.collectedTrainableWeights!=null?t=Df(e.collectedTrainableWeights):t=Df(e.trainableWeights),t}function SW(e){let t=!0,n=[],r=[];for(let s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(let s of n){if(s.length>1||s.length===1&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(let s of e.layers){let a=!1;for(let o of s.inboundNodes)if(r.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function zf(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function CW(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(i){r="multiple"}let s=e.name,a=e.getClassName(),o=[`${s} (${a})`,r,e.countParams().toString()];zf(o,t,n)}function TW(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(l){s="multiple"}let a=[];for(let l of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(l)===-1))for(let d=0;d<l.inboundLayers.length;++d){let p=l.inboundLayers[d].name,h=l.nodeIndices[d],f=l.tensorIndices[d];a.push(`${p}[${h}][${f}]`)}let o=e.name,i=e.getClassName(),c=a.length===0?"":a[0],u=[`${o} (${i})`,s,e.countParams().toString(),c];zf(u,t,r);for(let l=1;l<a.length;++l)zf(["","","",a[l]],t,r)}function aS(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function md(e,t){if(e===null)return null;if(typeof e=="string")return ni(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let s=0;s<r;++s){let a=e[s];aS(t,s,a)?n.push(a):n.push(md(a,t))}return n}else{let n={};for(let r of Object.keys(e)){let s=e[r];if(r==="name"&&typeof s=="string")n[r]=s;else{let a=ni(r);n[a]=md(s,a)}}return n}}function Pv(e,t){if(e==null)return null;if(typeof e=="string")return Ds(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let s=0;s<r;++s){let a=e[s];aS(t,s,a)?n.push(a):n.push(Pv(a,t))}return n}else{let n={};for(let r of Object.keys(e)){let s=e[r],a=Ds(r);(r==="name"||r==="className")&&typeof s=="string"?n[a]=s:n[a]=Pv(s,r)}return n}}var Ov="3.9.0";function NW(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return ce(t,e.dtype)}catch(n){throw new H(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var ii=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ii)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=NW(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new H(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Wr){if(this.id2Value[e.id]==null)throw new H(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new H(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Wr){if(this.id2Value[e.id]==null)throw new H(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new H(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&$e(this.id2Mask)}},Mv={},oS={};function gd(e,t,n,r){let s=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),c=[],u=t.names();for(let f of i)u.indexOf(f)!==-1?c.push(t.getValue(f)):c.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let l=i.join(",")+"|"+t.names().join(","),d,p;if(Mv[l]==null){let f=_W(o,t);d=f.sorted,p=f.recipientCounts,Mv[l]=d,oS[l]=p}d=Mv[l],p={},s||Object.assign(p,oS[l]);let h=new ii(t);for(let f=0;f<d.length;++f){if(r!=null){let R=Ah().numTensors;R>r.maxNumTensors&&(r.maxNumTensors=R),R<r.minNumTensors&&(r.minNumTensors=R)}let m=d[f],g=m.sourceLayer;if(g instanceof gu)continue;let b=[],y=[],v=[],x=!1;for(let R of m.inputs){let O=h.getValue(R),D=h.getMask(R);b.push(O),y.push(D),D!=null&&(x=!0),s||(p[R.name]--,p[R.name]===0&&!t.hasKey(R)&&i.indexOf(R.name)===-1&&!O.isDisposed&&R.sourceLayer.stateful!==!0&&v.push(O))}x&&(n=n||{},n.mask=y[0]);let k=bt(g.apply(b,n)),C=null;g.supportsMasking&&(C=g.computeMask(b,y));let N=AW(m),$=Array.isArray(N)?N:[N];for(let R=0;R<$.length;++R){h.hasKey($[R])||h.add($[R],k[R],Array.isArray(C)?C[0]:C);let O=i.indexOf($[R].name);O!==-1&&(c[O]=k[R])}s||$e(v)}return h.disposeMasks(),a?c:c[0]}function _W(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(e.length===1){let s=iS(e[0],t);n=s.sorted,r=s.recipientMap}else{let s=new Set;for(let a of e){let{sorted:o,recipientMap:i}=iS(a,t);for(let c of o)s.has(c.name)||(n.push(c),s.add(c.name));for(let c in i)r[c]==null&&(r[c]=new Set),i[c].forEach(u=>r[c].add(u))}}return{sorted:n,recipientCounts:EW(r)}}function EW(e){let t={};for(let n in e)t[n]=e[n].size;return t}function iS(e,t){let n=new Set,r=[],s={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let c=o[o.length-1]===a.length-1;if(i.inputs.length===0||c)a.pop(),r.push(i),n.add(i.name),c&&o.pop();else{o.push(a.length-1);for(let u of i.inputs)s[u.name]==null&&(s[u.name]=new Set),s[u.name].add(i.name),!n.has(u.name)&&a.push(u)}}return{sorted:r,recipientMap:s}}function AW(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let r=0;r<e.sourceLayer.inboundNodes.length;++r)for(let s of e.sourceLayer.inboundNodes[r].outputTensors)if(s.id===e.id){n=r;break}t=e.sourceLayer.getOutputAt(n)}return t}var cs=class extends Ke{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=Ef(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],ha(this.inputs).length!==this.inputs.length)throw new H(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);ha(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let y=b.sourceLayer,v=b.nodeIndex,x=b.tensorIndex;this.outputLayers.push(y),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(x)}for(let b of this.inputs){let y=b.sourceLayer,v=b.nodeIndex,x=b.tensorIndex;os(v===0,"input layer has >1 nodes"),os(x===0,"input layer has >1 tensors"),this.inputLayers.push(y),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(x)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let y=this.inputLayers[b];if(!(y instanceof gu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${y.getClassName()}.`);this.inputNames.push(y.name),this.feedInputShapes.push(y.batchInputShape),this.feedInputNames.push(y.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let t={},n={},r={},s={},a={},o=[],i=(b,y,v,x,k,C)=>{(x==null||k==null||C==null)&&(x=b.sourceLayer,k=b.nodeIndex,C=b.tensorIndex);let N=x.inboundNodes[k];if(v.indexOf(N)!==-1)throw new Lr(`The tensor ${b.name} at layer "${x.name}" is part of a cycle.`);if(y.indexOf(N)!==-1)return;this.containerNodes.add(cs.nodeKey(x,k)),x.id in a||(a[x.id]=Object.keys(a).length),v.indexOf(N)===-1&&v.push(N);let $=N.inboundLayers.length;for(let R=0;R<$;R++){let O=N.inputTensors[R],D=N.inboundLayers[R],P=N.nodeIndices[R],T=N.tensorIndices[R];i(O,y,v,D,P,T)}for(y.push(N);v.indexOf(N)>=0;)v.splice(v.indexOf(N),1);o.push(N)},c=[],u=[];for(let b of this.outputs)i(b,c,u);let l=o.slice().reverse();for(let b of l){n[b.id]=b,b.id in t||(t[b.id]=0);let y=t[b.id],v=r[b.outboundLayer.id]==null?0:r[b.outboundLayer.id];y=Math.max(y,v),r[b.outboundLayer.id]=y,s[b.outboundLayer.id]=b.outboundLayer,t[b.id]=y;for(let x=0;x<b.inboundLayers.length;x++){let k=b.inboundLayers[x],C=b.nodeIndices[x],N=k.inboundNodes[C],$=t[N.id]==null?0:t[N.id];t[N.id]=Math.max(y+1,$),n[N.id]=N}}let d={};for(let b in t){let y=t[b];y in d||(d[y]=[]),d[y].push(n[b])}let p={};for(let b in r){let y=r[b];y in p||(p[y]=[]),p[y].push(s[b])}let h=Object.keys(p).map(b=>parseInt(b,10)).sort(bf);this.layers=[];for(let b of h){let y=p[b];y.sort((v,x)=>{let k=a[v.id],C=a[x.id];return k<C?-1:k>C?1:0});for(let v of y)v instanceof cs&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=p,h=Object.keys(d).map(b=>parseInt(b,10)).sort(bf);let f=this.inputs.slice(),m=[];for(let b of h)for(let y of d[b]){let v=y.outboundLayer;if(v!=null){for(let x of y.inputTensors)if(f.indexOf(x)===-1)throw new Lr(`Graph disconnected: cannot obtain value for tensor ${x} at layer "${v.name}". The following previous layers were accessed without issue: ${m}`);for(let x of y.outputTensors)f.push(x);m.push(v.name)}}this.nodesByDepth=d;let g=this.layers.map(b=>b.name);for(let b of g){let y=g.filter(v=>v===b).length;if(y!==1)throw new Lr(`The name "${b}" is used ${y} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new $f({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new H("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new H(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,r++}let s=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)s.push([n[o],e[a]]);else if(t)throw new H(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new H(`${a.length} of ${r} weights are not set: ${a}`)}_v(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Ov}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Pv(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return M(()=>{e=bt(e);let n=new ii;for(let r=0;r<this.inputs.length;++r)n.add(this.inputs[r],e[r]);return gd(this.outputs,n,t)})}computeMask(e,t){return M(()=>{e=bt(e);let n;return t==null?n=ti(null,e.length):n=bt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=Af(e);if(t.length!==this.inputLayers.length)throw new H(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],c=t[o],u=i.name+"_0_0";n[u]=c}let r=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(bf);if(r.length>1)for(let o of r){let i=this.nodesByDepth[o];for(let c of i){let u=c.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(u.id)!==-1)continue;let l=[];for(let f=0;f<c.inboundLayers.length;f++){let m=c.inboundLayers[f],g=c.nodeIndices[f],b=c.tensorIndices[f],y=`${m.name}_${g}_${b}`,v=n[y];l.push(v)}let d=u.computeOutputShape(On(l)),p=Af(d),h=u.inboundNodes.indexOf(c);for(let f=0;f<p.length;f++){let m=`${u.name}_${h}_${f}`;n[m]=p[f]}}}let s=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],c=this.outputLayersNodeIndices[o],u=this.outputLayersTensorIndices[o],l=`${i.name}_${c}_${u}`;a.push(l)}for(let o=0;o<a.length;o++){let i=a[o];os(i in n),s.push(n[i])}return On(s)}runInternalGraph(e,t){t==null&&(t=ti(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let c=this.inputs[i],u=e[i],l=t[i];n[c.id]=[u,l]}let r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(bf);for(let i of r){let c=this.nodesByDepth[i];for(let u of c){let l=u.outboundLayer,d=u.inputTensors,p=u.outputTensors,h=new Array;for(let f of d)f.id in n&&h.push(n[f.id]);if(h.length===d.length){let f={},m,g,b,y;if(u.callArgs!=null&&(f=u.callArgs),h.length===1){let[v,x]=h[0];f.mask==null&&(f.mask=x),b=bt(l.call(v,f)),y=bt(l.computeMask(v,x)),m=[v],g=[x]}else m=h.map(v=>v[0]),g=h.map(v=>v[1]),f.mask==null&&(f.mask=g),b=bt(l.call(m,f)),y=bt(l.computeMask(m,g));if(l.activityRegularizer)throw new Fe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<p.length;++v){let x=p[v],k=b[v],C=y[v];n[x.id]=[k,C]}}}}let s=[],a=[],o=[];for(let i of this.outputs){os(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[c,u]=n[i.id];o.push(c.shape),s.push(c),a.push(u)}return[s,a,o]}buildNodeConversionMap(e){let t={},n;for(let r of this.layers){n=r instanceof cs?1:0;for(let s=0;s<r.inboundNodes.length;s++){let a=cs.nodeKey(r,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new H(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new H("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new H(`No such layer: ${e}`)}calculateLosses(){return M(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=cs.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),c=[];for(let l=0;l<a.inboundNodes.length;l++){let d=a.inboundNodes[l],p=cs.nodeKey(a,l),h={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let f=[];for(let m=0;m<d.inboundLayers.length;m++){let g=d.inboundLayers[m],b=d.nodeIndices[m],y=d.tensorIndices[m],v=cs.nodeKey(g,b),x=t[v];x==null&&(x=0),f.push([g.name,x,y,h])}c.push(f)}}}let u={};u.name=a.name,u.className=o,u.config=i,u.inboundNodes=c,n.push(u)}e.layers=n;let r=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],c=cs.nodeKey(o,i);if(!this.containerNodes.has(c))continue;let u=t[c];u==null&&(u=0);let l=this.inputLayersTensorIndices[a];r.push([o.name,u,l])}e.inputLayers=r;let s=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],c=cs.nodeKey(o,i);if(!this.containerNodes.has(c))continue;let u=t[c];u==null&&(u=0);let l=this.outputLayersTensorIndices[a];s.push([o.name,u,l])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){let s={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let b=[],y;for(let v of g){let x=v[0],k=v[1],C=v[2];if(y=v[3]==null?{}:v[3],!(x in s)){o(m,g);return}let N=s[x];if(N.inboundNodes.length<=k){o(m,g);return}let $=N.inboundNodes[k];b.push($.outputTensors[C])}b.length>0&&m.apply(On(b),y)}function c(m){let g=m.name,b=Vr(m,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(r),s[g]=b,m.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new H(`Corrupted configuration, expected array for nodeData: ${v}`);o(b,v)})}let u=t.name,l=t.layers;for(let m of l)c(m);for(;!i4(a);)for(let m of l){let g=s[m.name];if(g.name in a){let b=a[g.name];delete a[g.name];for(let y of b)i(g,y)}}let d=[],p=[],h=t.inputLayers;for(let m of h){let g=m[0],b=m[1],y=m[2];os(g in s);let x=s[g].inboundNodes[b].outputTensors;d.push(x[y])}let f=t.outputLayers;for(let m of f){let g=m[0],b=m[1],y=m[2];os(g in s);let x=s[g].inboundNodes[b].outputTensors;p.push(x[y])}return new e({inputs:d,outputs:p,name:u})}get stateful(){if(this._stateful)throw new H("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){M(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function DW(e,t,n){let r=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>null);if(r===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let s=[];return t.forEach(a=>{a in e?s.push(e[a]):s.push(null)}),s}else throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function cS(e,t){return DW(e,t,"classWeight")}async function uS(e,t,n,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let s=M(()=>{if(e.shape.length===1)return Ss(e);if(e.shape.length===2){if(e.shape[1]>1)return Ho(e,1);if(e.shape[1]===1)return U(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await s.data());$e(s);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),He(o,"float32")}else return null}function $W(e,t){return V(e,t)}var FW=32;function lS(e,t){let n,r,s=t;n=s.xs,r=s.ys,w.assert(n!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=dS("input",e.inputNames,n),o=dS("output",e.outputNames,r),i=a[0].shape[0];w.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let c=0;c<a.length;c++)w.assert(a[c].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[c]} has ${a[c].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let c=0;c<o.length;c++)w.assert(o[c].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[c]} has ${o[c].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function dS(e,t,n){if(n instanceof Ee)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let s of t){if(n[s]==null)throw new H(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function RW(e){if(e.length===3)throw new Fe("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function PW(e,t,n){let r=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let s=n.validationData!=null,a,o;if(s)if(pS(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=RW(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),c=e.getDedupedMetricsNames(),u;s?u=c.slice().concat(c.map(g=>"val_"+g)):u=c.slice();let l=YI(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:p,history:h}=ZI(l,d,n.epochs,null,null,OW(t,n),null,s,u);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await p.onEpochBegin(f);let b=0,y=0;for(r||(m=await t.iterator());r?b<n.batchesPerEpoch:!0;){let v=await m.next();if(r&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){let{xs:x,ys:k}=lS(e,v.value),C={};C.batch=y,C.size=x[0].shape[0],await p.onBatchBegin(y,C);let N=[];if(n.classWeight!=null){let O=cS(n.classWeight,e.outputNames);for(let D=0;D<O.length;++D)N.push(await uS(k[D],null,O[D]))}let $=x.concat(k).concat(N),R=i($);$e($);for(let O=0;O<c.length;++O){let D=c[O],P=R[O];C[D]=P,Yt(P)}await p.onBatchEnd(y,C),HI(C),y++,b++}if(r?b>=n.batchesPerEpoch:v.done){if(s){let x;pS(n.validationData)?x=bt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):x=bt(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?FW:n.validationBatchSize,verbose:0}));for(let k=0;k<e.metricsNames.length;++k)g[`val_${e.metricsNames[k]}`]=x[k]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,g),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function OW(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function pS(e){return typeof e.iterator=="function"}function MW(e){return typeof e.next=="function"}async function LW(e,t,n){n=n||{};let r=n.batches!=null,s=e.testFunction,a=[];if(n.verbose>0)throw new Fe("Verbose mode is not implemented yet.");w.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=MW(t)?t:await t.iterator(),i=0,c=0;for(;r?c<n.batches:!0;){let u=await o.next();if(a=M(()=>{if(u.value){let{xs:l,ys:d}=lS(e,u.value),p=l.concat(d),h=M(()=>s(p));if($e(p),c===0)for(let m=0;m<h.length;++m)a.push(Ie(0));let f=p[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],b=a[m];a[m]=M(()=>Y(a[m],V(f,g))),c>0&&$e(b)}$e(h),i+=f,++c}return a}),u.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){let l=a[u];a[u]=ge(a[u],i),$e(l)}return On(a)}function Lv(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function bd(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(r=>ai(r,t,n-t)):ai(e,t,n-t)}function Bv(e,t){return M(()=>e==null?null:Array.isArray(e)?e.map(n=>Bv(n,t)):PI(e,t.dtype==="int32"?t:ce(t,"int32")))}function zv(e,t){let n=[],r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}async function BW(e,t,n,r,s,a,o,i,c,u,l,d,p,h,f){s==null&&(s=32),a==null&&(a=1),l==null&&(l=!0),p==null&&(p=0);let m=!1;if(c!=null&&u!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new H("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,s,h,"steps_per_epoch"),b;g!=null&&(b=Br(0,g)),o==null&&(o=1);let{callbackList:y,history:v}=ZI(i,o,a,p,g,h,s,m,d);y.setModel(e),e.history=v,await y.onTrainBegin(),e.stopTraining_=!1;for(let x=p;x<a;++x){await y.onEpochBegin(x);let k={};if(h!=null)throw new Fe("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new Fe("batch shuffling is not implemneted yet");l&&w.shuffle(b);let C=He(b),N=zv(g,s);for(let $=0;$<N.length;++$){let R={};if(await y.onBatchBegin($,R),M(()=>{let O=N[$][0],D=N[$][1],P=ai(C,O,D-O);R.batch=$,R.size=D-O;let T=Bv(n,P),L=t(T);for(let G=0;G<r.length;++G){let j=r[G],q=L[G];R[j]=q,Yt(q)}if($===N.length-1&&m){let G=e.testLoop(c,u,s);for(let j=0;j<r.length;++j){let q=r[j],K=G[j];Yt(K),k["val_"+q]=K}}}),await y.onBatchEnd($,R),HI(R),e.stopTraining_)break}C.dispose()}if(await y.onEpochEnd(x,k),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}async function zW(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let s,a,o,i,c,u,l;try{let d=r.batchSize==null?32:r.batchSize;Lv(d);let p=!1,h=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,p,d);s=h[0],a=h[1],l=h[2];let f=!1,m;if(r.validationData!=null&&r.validationData.length>0){if(f=!0,r.validationData.length===2)o=r.validationData[0],i=r.validationData[1];else throw r.validationData.length===3?new Fe("validationData including sample weights is not supported yet."):new H(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);let N=!0,$=await e.standardizeUserData(o,i,null,null,N,d);c=$[0],u=$[1],m=c.concat(u)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){f=!0;let N=Math.floor(s[0].shape[0]*(1-r.validationSplit)),$=s[0].shape[0];c=bd(s,N,$),s=bd(s,0,N),u=bd(a,N,$),a=bd(a,0,N),m=c.concat(u)}else r.validationSteps!=null&&(f=!0);let g=s.concat(a).concat(l);e.checkTrainableWeightsConsistency();let b=e.makeTrainFunction(),y=e.getDedupedMetricsNames(),v,x;f?(e.makeTestFunction(),v=e.testFunction,x=y.slice().concat(y.map(N=>"val_"+N))):(v=null,m=[],x=y.slice());let k=YI(r.callbacks,r.yieldEvery);return await BW(e,b,g,y,d,r.epochs,r.verbose,k,v,m,r.shuffle,x,r.initialEpoch,null,null)}finally{e.isTraining=!1,ci(s,t),ci(a,n),ci(c,o),ci(u,i),l!=null&&$e(l)}}function hS(e){let t=[];e instanceof Ee&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(r.rank===1)t.push(dd(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function ci(e,t){if(e==null)return;let n=[];if(t instanceof Ee)n.push(t.id);else if(Array.isArray(t))t.forEach(s=>n.push(s.id));else if(t!=null)for(let s in t){let a=t[s];n.push(a.id)}let r=[];if(e instanceof Ee)n.indexOf(e.id)===-1&&r.push(e);else if(Array.isArray(e))e.forEach(s=>{n.indexOf(s.id)===-1&&r.push(s)});else if(e!=null)for(let s in e){let a=e[s];n.indexOf(a.id)===-1&&r.push(a)}r.forEach(s=>{s.isDisposed||s.dispose()})}function WW(e){return e instanceof Ee}function Wv(e){return Array.isArray(e)}function fS(e){return!WW(e)&&!Wv(e)}function mS(e,t,n,r=!0,s=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(Wv(e)&&e.length>0)o=!0;else if(fS(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new H(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(fS(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new H(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(Wv(e)){if(e=e,e.length!==t.length)throw new H(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new H(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=hS(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new H(`Error when checking ${s}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let c=0;c<n[o].length;++c){if(c===0&&!r)continue;let u=i.shape[c],l=n[o][c];if(l!=null&&l>=0&&u!==l)throw new H(`${s} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function VW(e,t,n){let r=ha(e.map(a=>a.shape[0]));r.sort();let s=ha(t.map(a=>a.shape[0]));if(s.sort(),r.length>1)throw new H(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(s.length>1)throw new H(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(r.length>0&&s.length>0&&!w.arraysEqual(r,s))throw new H(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}function UW(e,t,n){let r=[oi,Of,fd];for(let s=0;s<e.length;++s){let a=e[s],o=t[s],i=n[s];if(o!=null){if(o===fd&&a.shape[a.shape.length-1]===1)throw new H(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(o)!==-1){let c=a.shape.slice(1),u=i.slice(1);for(let l=0;l<c.length;++l){let d=c[l],p=u[l];if(p!=null&&d!==p)throw new H(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function gS(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new H(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new H(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new H(`Error when checking ${s}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let c=0;c<n[o].length;++c){if(c===0&&!r)continue;let u=i.shape[c],l=n[o][c];if(l!=null&&l!==u)throw new H(`Error when checking ${s}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function GW(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(r=>n);{let r=[];for(let s of t){let a=n.hasOwnProperty(s)?n[s]:[];Array.isArray(a)||(a=[a]),r.push(a)}return r}}var HW="layers-model",$s=class extends cs{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new H("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");kW(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=wW(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Es))throw new H("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new H(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Av(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new H(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>Av(o))}else{let a=Av(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],si("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let r=GW(e.metrics,this.outputNames),s=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};si("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=r[a];(c=>{let u="",l,d,p;for(let h of c){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===Of?["accuracy","acc"].indexOf(h)!==-1?d=Dv:["crossentropy","ce"].indexOf(h)!==-1&&(d=eS):this.lossFunctions[a]===Pf?["accuracy","acc"].indexOf(h)!==-1?d=tS:["crossentropy","ce"].indexOf(h)!==-1&&(d=nS):["accuracy","acc"].indexOf(h)!==-1?d=$v:["crossentropy","ce"].indexOf(h)!==-1&&(d=Fv);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),p=d,l=u+g}else p=xW(h),l=u+Bf(h);let f;si(l,()=>{f=p}),s(a,l,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=n.batchSize==null?32:n.batchSize;Lv(r);let s=!0,a=this.standardizeUserDataXY(e,t,s,r);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,c=this.testLoop(i,o,r,n.verbose,n.steps);return On(c)}finally{ci(a[0],e),ci(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),LW(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(n!=null){if(s=null,t!=null)throw new H(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new H(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new H("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new ii;if(e instanceof Ee&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new H(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let c=e[i.name];if(c==null)throw new H(`No value is provided for the model's input ${i.name}`);a.add(i,c)}let o=gd(s,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=ti(null,e.length),n=e.length;for(let r of this.layers){let s=Array.isArray(r.output)?r.output:[r.output],a=s.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=s[i],n--),n===0)break}if(n===0)break}if(n>0){let r=[];throw t.forEach((s,a)=>{s==null&&r.push(e[a])}),new H(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,n=!1){return M(()=>{let r=this.checkNumSamples(e);if(n)throw new Fe("Verbose predictLoop() is not implemented yet.");let s=zv(r,t),a=this.outputs.map(o=>[]);for(let o=0;o<s.length;++o)M(()=>{let c=s[o][0],u=s[o][1],l=bd(e,c,u),d=[];if(Array.isArray(l))for(let h=0;h<l.length;++h)d.push({key:this.inputs[h],value:l[h]});else d.push({key:this.inputs[0],value:l});let p=new ii(d);return gd(this.outputs,p)}).forEach((c,u)=>a[u].push(c));return On(a.map(o=>Ze(o,0)))})}predict(e,t={}){let n=hS(e);gS(n,this.inputNames,this.feedInputShapes,!1);try{let r=t.batchSize==null?32:t.batchSize;return Lv(r),this.predictLoop(n,r)}finally{ci(n,e)}}predictOnBatch(e){gS(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(this.optimizer_==null)throw new Lr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===Pf?s.push(o.slice(0,o.length-1).concat([1])):s.push(o)}if(e=mS(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=mS(t,this.feedOutputNames,s,!1,"target"),VW(e,t,null),UW(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!=0)throw new H(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let c=null;if(r!=null){let u=cS(r,this.outputNames);c=[];for(let l=0;l<u.length;++l)c.push(await uS(i[l],null,u[l]))}return[o,i,c]}testLoop(e,t,n,r=0,s){return M(()=>{let a=this.checkNumSamples(t,n,s,"steps"),o=[];if(r>0)throw new Fe("Verbose mode is not implemented yet.");if(s!=null)throw new Fe("steps mode in testLoop() is not implemented yet");{let i=zv(a,n),c=He(Br(0,a));for(let u=0;u<i.length;++u){let l=i[u][0],d=i[u][1],p=ai(c,l,d-l),h=Bv(t,p),f=e(h);if(u===0)for(let m=0;m<f.length;++m)o.push(Ie(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=Y(o[m],V(d-l,g))}}for(let u=0;u<o.length;++u)o[u]=ge(o[u],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],s=r;II(e,r)>1&&(s+=`_${II(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let l=[];for(let f=0;f<this.inputs.length;++f)l.push({key:this.inputs[f],value:n[f]});let d=new ii(l),p=gd(this.outputs,d,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](r[f],p[f]);s[f]!=null&&(g=$W(g,s[f]));let b=_t(g);t.push(b),f===0?h=g:h=Y(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],b=this.metricsTensors[f][1];m=_t(g(r[b],p[b]))}Yt(m),a.push(m)}return h=_t(h),this.calculateLosses().forEach(f=>{h=Y(h,f)}),h},i=this.collectedTrainableWeights.map(l=>l.read()),c=!0;return[this.optimizer_.minimize(o,c,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>M(()=>{let t=[],n,r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:r[c]});let o=new ii(a),i=gd(this.outputs,o);for(let c=0;c<this.lossFunctions.length;++c){let u=this.lossFunctions[c],l=_t(u(s[c],i[c]));c===0?n=l:n=Y(n,l),t.push(n)}for(let c=0;c<this.metricsTensors.length;++c){let u=this.metricsTensors[c][0],l=this.metricsTensors[c][1],d=_t(u(s[l],i[l]));t.push(d)}return t})}async fit(e,t,n={}){return zW(this,e,t,n)}async fitDataset(e,t){return PW(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],s=n[1],o=this.makeTrainFunction()(r.concat(s)),i=[];for(let c of o){let u=await c.data();i.push(u[0])}return $e(o),On(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||t.push({name:r[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Ah().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ah().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Ds(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Ds(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t)if(typeof n[r]=="string")e[r]=Ds(n[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Ds(Bf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Ds(Bf(e)));{let e={};for(let t in this.metrics)e[t]=Ds(Bf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=md(e.optimizer_config),n=Vr(t),r;if(typeof e.loss=="string")r=ni(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(a=>ni(a));else if(e.loss!=null){r={};for(let a in e.loss)r[a]=ni(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>ni(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=ni(e.metrics[a])}this.compile({loss:r,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let c=Xt.getSaveHandlers(e);if(c.length===0)throw new H(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new H(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new H("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Xt.encodeWeights(this.getNamedWeights(t)),r=!1,s=null,o={modelTopology:this.toJSON(s,r),format:HW,generatedBy:`TensorFlow.js tfjs-layers v${Ov}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let c="optimizer",{data:u,specs:l}=await Xt.encodeWeights(await this.optimizer.getWeights(),c);n.specs.push(...l),n.data=Xt.concatenateArrayBuffers([n.data,u])}if(this.userDefinedMetadata!=null){let c=!0;sS(this.userDefinedMetadata,this.name,c),o.userDefinedMetadata=this.userDefinedMetadata}return o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){sS(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};$s.className="Model";oe.registerClass($s);var bS=class extends $s{};bS.className="Functional";oe.registerClass(bS);async function jW(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let r=md(n),s=Vr(r,t);if(e.weightsManifest!=null){let a=await Xt.loadWeights(e.weightsManifest,e.pathPrefix,s.weights.map(i=>i.originalName)),o={};for(let i of s.weights)o[i.originalName]=a[i.originalName];s.loadWeights(o),$e(a)}return s}async function qW(e,t){if(t==null&&(t={}),typeof e=="string"){let n=Xt.getLoadHandlers(e,t);if(n.length===0)n.push(Xt.browserHTTPRequest(e,t));else if(n.length>1)throw new H(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return KW(e,void 0,t)}async function KW(e,t,n){if(n==null&&(n={}),e.load==null)throw new H("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),s=r.modelTopology;s.model_config!=null&&(s=s.model_config);let a=n.strict==null?!0:n.strict,o=r.weightData!=null&&r.weightSpecs!=null&&a,i=Vr(md(s),t,o),c=r.trainingConfig;if(c!=null&&i.loadTrainingConfig(c),r.userDefinedMetadata!=null&&i.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new H("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:l}=XW(r.weightData,r.weightSpecs);i.loadWeights(u,a),i.optimizer!=null&&l.length>0&&await i.optimizer.setWeights(l),$e(u),$e(l.map(d=>d.tensor))}return i}function XW(e,t){let n=Xt.decodeWeights(e,t),r={},s=[];return t.forEach(a=>{a.group==="optimizer"?s.push({name:a.name,tensor:n[a.name]}):r[a.name]=n[a.name]}),{modelWeights:r,optimizerWeights:s}}var vu=class extends $s{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Ef("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new H(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof vu||e instanceof $s,n;if(t){if(n=e,n.outputs.length!==1)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new H("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new H("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let r=GI({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new H(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=UI(this.outputs[0])}this.inboundNodes=[],new $f({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ti(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{let r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(at(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new $s({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Lr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Lr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Lr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Lr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new H("Legacy serialization format not supported yet.");s=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof vu))throw new Fe(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of s){let u=Vr(i,void 0,r);r&&u.setFastWeightInitDuringBuild(!0),o.add(u)}return o}set stopTraining(e){if(this.model==null)throw new H("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new H("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};vu.className="Sequential";oe.registerClass(vu);function YW(e){return new $s(e)}function ZW(e){return new vu(e)}function JW(e,t){return t==null&&(t={}),qW(e,t)}function yS(e){return GI(e)}function QW(e,t){Nr.registerCallbackConstructor(e,t)}var Ln=class extends oe.Serializable{getConfig(){return{}}},vS=class extends Ln{apply(e,t=1){return C4(e,t)}};vS.className="elu";oe.registerClass(vS);var xS=class extends Ln{apply(e){return Xh(e)}};xS.className="selu";oe.registerClass(xS);var wS=class extends Ln{apply(e){return qe(e)}};wS.className="relu";oe.registerClass(wS);var kS=class extends Ln{apply(e){return M(()=>iu(6,qe(e)))}};kS.className="relu6";oe.registerClass(kS);var IS=class extends Ln{apply(e){return e}};IS.className="linear";oe.registerClass(IS);var SS=class extends Ln{apply(e){return lr(e)}};SS.className="sigmoid";oe.registerClass(SS);var CS=class extends Ln{apply(e){return N4(e)}};CS.className="hardSigmoid";oe.registerClass(CS);var TS=class extends Ln{apply(e){return Xo(e)}};TS.className="softplus";oe.registerClass(TS);var NS=class extends Ln{apply(e){return T4(e)}};NS.className="softsign";oe.registerClass(NS);var _S=class extends Ln{apply(e){return qo(e)}};_S.className="tanh";oe.registerClass(_S);var Vv=class extends Ln{apply(e,t=-1){return Rr(e,t)}};Vv.className="softmax";oe.registerClass(Vv);var ES=class extends Ln{apply(e,t=-1){return Vh(e,t)}};ES.className="logSoftmax";oe.registerClass(ES);var AS=class extends Ln{apply(e,t=1){return M(()=>V(lr(V(e,t)),e))}};AS.className="swish";oe.registerClass(AS);var DS=class extends Ln{apply(e){return M(()=>V(e,qo(Xo(e))))}};DS.className="mish";oe.registerClass(DS);function ba(e){return e.getClassName()}function Uv(e,t={}){return cd(e,oe.SerializationMap.getMap().classNameMap,t,"activation")}function ya(e){if(e==null){let t={};return t.className="linear",t.config={},Uv(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},Uv(t)}else return e instanceof Ln?e:Uv(e)}function Gv(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var $S=class extends oe.Serializable{},yd=class extends $S{constructor(e){super();Gv(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return M(()=>{let t=It([1]);return this.hasL1&&(t=Y(t,ve(V(this.l1,Mt(e))))),this.hasL2&&(t=Y(t,ve(V(this.l2,pd(e))))),U(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};yd.className="L1L2";oe.registerClass(yd);function eV(e){return Gv(e),new yd({l1:e!=null?e.l1:null,l2:0})}function tV(e){return Gv(e),new yd({l2:e!=null?e.l2:null,l1:0})}var FS={l1l2:"L1L2"};function pt(e){return iv(e)}function RS(e,t={}){return cd(e,oe.SerializationMap.getMap().classNameMap,t,"regularizer")}function Ct(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in FS?FS[e]:e,config:{}};return RS(n)}else return e instanceof $S?e:RS(e)}var Hv=class extends Ke{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Le(e);let n=qe(e);return this.maxValue!=null&&(n=Zt(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Hv.className="ReLU";oe.registerClass(Hv);var jv=class extends Ke{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Le(e);return Yl(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};jv.className="LeakyReLU";oe.registerClass(jv);var qv=class extends Ke{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=St(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ct(e.alphaRegularizer),this.alphaConstraint=Ht(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new H(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=at(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new Lt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Le(e),td(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Et(this.alphaInitializer),alphaRegularizer:pt(this.alphaRegularizer),alphaConstraint:Gt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};qv.className="PReLU";oe.registerClass(qv);var Kv=class extends Ke{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Fe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Le(e);return au(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Kv.className="ELU";oe.registerClass(Kv);var Xv=class extends Ke{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Le(e);return V(n,ce(Rn(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Xv.className="ThresholdedReLU";oe.registerClass(Xv);var Yv=class extends Ke{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Vv().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Le(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Yv.className="Softmax";oe.registerClass(Yv);function xu(e,t,n){if(typeof e=="number")return ti(e,t);if(e.length!==t)throw new H(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let s=e[r];if(!w4(s))throw new H(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e}function Ur(e,t,n,r,s=1){if(e==null)return e;let a=t+(t-1)*(s-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+r-1)/r)}function us(e,t,n,r){if(e==null)return null;if(r==="valid")e=e*t+ma([n-t,0]);else if(r==="same")e=e*t;else throw new H(`Unsupport padding mode: ${r}.`);return e}function Zv(e,t){return M(()=>(Ot(t),t==="channelsFirst"?Pe(e,[0,2,3,1]):e))}function PS(e,t){return M(()=>(Ot(t),t==="channelsFirst"?Pe(e,[0,2,3,4,1]):e))}function nV(e,t,n,r=1,s="valid",a,o=1){return M(()=>{if(a==null&&(a=Mr()),Ot(a),e.shape.length!==3)throw new H(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new H(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new H(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=Pe(e,[0,2,1])),s==="causal")throw new Fe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Ph(e,t,r,s==="same"?"same":"valid","NWC",o);return n!=null&&(i=zr(i,n)),i})}function OS(e,t,n,r=[1,1],s="valid",a,o,i=null){return M(()=>{if(a==null&&(a=Mr()),Ot(a),e.rank!==3&&e.rank!==4)throw new H(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new H(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let c=Zv(e,a);if(s==="causal")throw new Fe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=pa.conv2d({x:c,filter:t,strides:r,pad:s==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(c=Pe(c,[0,3,1,2])),c})}function rV(e,t,n,r=[1,1,1],s="valid",a,o){return M(()=>{if(a==null&&(a=Mr()),Ot(a),e.rank!==4&&e.rank!==5)throw new H(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new H(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=PS(e,a);if(s==="causal")throw new Fe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Ey(i,t,r,s==="same"?"same":"valid","NDHWC",o),n!=null&&(i=zr(i,n)),a==="channelsFirst"&&(i=Pe(i,[0,4,1,2,3])),i})}var Jv=class extends Ke{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Jv.verifyArgs(t),this.rank=e,Jt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Fe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=xu(t.kernelSize,e,"kernelSize"),this.strides=xu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,pr(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ot(this.dataFormat),this.activation=ya(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=St(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ht(t.biasConstraint),this.biasRegularizer=Ct(t.biasRegularizer),this.activityRegularizer=Ct(t.activityRegularizer),this.dilationRate=xu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new H(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new H(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new H(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(os("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!uv(e.kernelSize,"number",1,3))throw new H(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ba(this.activation),useBias:this.useBias,biasInitializer:Et(this.biasInitializer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),biasConstraint:Gt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},vd=class extends Jv{constructor(e,t){super(e,t);this.kernel=null,vd.verifyArgs(t),this.filters=t.filters,Jt(this.filters,"filters"),this.kernelInitializer=St(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ht(t.kernelConstraint),this.kernelRegularizer=Ct(t.kernelRegularizer)}build(e){e=at(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return M(()=>{e=Le(e);let n,r=this.bias==null?null:this.bias.read(),s=CI(this.activation.getClassName());if(s!=null&&this.rank===2)n=OS(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=nV(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=OS(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=rV(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Fe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=at(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=Ur(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:Et(this.kernelInitializer),kernelRegularizer:pt(this.kernelRegularizer),kernelConstraint:Gt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new H(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},xd=class extends vd{constructor(e){super(2,e);xd.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!uv(e.kernelSize,"number",1,2))throw new H(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};xd.className="Conv2D";oe.registerClass(xd);var wd=class extends vd{constructor(e){super(3,e);wd.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new H(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};wd.className="Conv3D";oe.registerClass(wd);var Qv=class extends xd{constructor(e){super(e);if(this.inputSpec=[new Lt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new H(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=at(e),e.length!==4)throw new H("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Lt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return M(()=>{let n=Le(e);if(n.shape.length!==4)throw new H(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,s=r[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=r[a],c=r[o],u=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],p=this.strides[1],h=us(i,d,u,this.padding),f=us(c,p,l,this.padding),m=[s,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=Pe(n,[0,2,3,1]));let g=Oh(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Pe(g,[0,3,1,2])),this.bias!=null&&(g=zr(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=at(e);let t=e.slice(),n,r,s;this.dataFormat==="channelsFirst"?(n=1,r=2,s=3):(n=3,r=1,s=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[r]=us(t[r],i,a,this.padding),t[s]=us(t[s],c,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Qv.className="Conv2DTranspose";oe.registerClass(Qv);var ex=class extends wd{constructor(e){super(e);if(this.inputSpec=[new Lt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new H(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=at(e),e.length!==5)throw new H("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Lt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return M(()=>{let n=Le(e);if(n.shape.length!==5)throw new H(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,s=r[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let c=r[i],u=r[a],l=r[o],d=this.kernelSize[0],p=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],b=us(c,f,d,this.padding),y=us(u,m,p,this.padding),v=us(l,g,h,this.padding),x=[s,b,y,v,this.filters];this.dataFormat!=="channelsLast"&&(n=Pe(n,[0,2,3,4,1]));let k=Ck(n,this.kernel.read(),x,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=Pe(k,[0,4,1,2,3])),this.bias!==null&&(k=zr(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(e){e=at(e);let t=e.slice(),n,r,s,a;this.dataFormat==="channelsFirst"?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],l=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=us(t[r],u,o,this.padding),t[s]=us(t[s],l,i,this.padding),t[a]=us(t[a],d,c,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};ex.className="Conv3DTranspose";oe.registerClass(ex);var MS=class extends vd{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new H("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new H("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new H(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=St(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ct(t.depthwiseRegularizer),this.depthwiseConstraint=Ht(t.depthwiseConstraint),this.pointwiseInitializer=St(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ct(t.pointwiseRegularizer),this.pointwiseConstraint=Ht(t.pointwiseConstraint)}build(e){if(e=at(e),e.length<this.rank+2)throw new H(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new H(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let o=0;o<this.rank;++o)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Lt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return M(()=>{e=Le(e);let n;if(this.rank===1)throw new Fe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Pe(e,[0,2,3,1])),n=Jo(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=zr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Pe(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Et(this.depthwiseInitializer),e.pointwiseInitializer=Et(this.pointwiseInitializer),e.depthwiseRegularizer=pt(this.depthwiseRegularizer),e.pointwiseRegularizer=pt(this.pointwiseRegularizer),e.depthwiseConstraint=Gt(this.depthwiseConstraint),e.pointwiseConstraint=Gt(this.pointwiseConstraint),e}};MS.className="SeparableConv";var tx=class extends MS{constructor(e){super(2,e)}};tx.className="SeparableConv2D";oe.registerClass(tx);var Wf=class extends vd{constructor(e){super(1,e);Wf.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!uv(e.kernelSize,"number",1,1))throw new H(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Wf.className="Conv1D";oe.registerClass(Wf);var nx=class extends Ke{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return M(()=>{if(e=Le(e),this.dataFormat==="channelsLast"){let n=vf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return vf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=vf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return vf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};nx.className="Cropping2D";oe.registerClass(nx);var rx=class extends Ke{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ot(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,y4(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return M(()=>{let n=Le(e),r=n.shape;if(this.dataFormat==="channelsFirst"){n=Pe(n,[0,2,3,1]);let s=this.size[0]*r[2],a=this.size[1]*r[3],o=this.interpolation==="nearest"?Jn.resizeNearestNeighbor(n,[s,a]):Jn.resizeBilinear(n,[s,a]);return Pe(o,[0,3,1,2])}else{let s=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?Jn.resizeNearestNeighbor(n,[s,a]):Jn.resizeBilinear(n,[s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};rx.className="UpSampling2D";oe.registerClass(rx);function sV(e,t,n=[1,1],r="valid",s,a){return M(()=>{s==null&&(s=Mr()),Ot(s);let o=Zv(e,s);if(e.rank!==4)throw new H(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new H(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=ua(o,t,n,r==="same"?"same":"valid","NHWC",a),s==="channelsFirst"&&(o=Pe(o,[0,3,1,2])),o})}var sx=class extends Jv{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=St(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ht(e.depthwiseConstraint),this.depthwiseRegularizer=Ct(e.depthwiseRegularizer)}build(e){if(e=at(e),e.length<4)throw new H(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new H(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return M(()=>{e=Le(e);let n=sV(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=zr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=at(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Ur(t,this.kernelSize[0],this.padding,this.strides[0]),a=Ur(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Et(this.depthwiseInitializer),e.depthwiseRegularizer=pt(this.depthwiseRegularizer),e.depthwiseConstraint=Gt(this.depthwiseRegularizer),e}};sx.className="DepthwiseConv2D";oe.registerClass(sx);function LS(e,t,n,r){if(Array.isArray(e)){if(t!=null||n!=null)throw new H("When inputs is an array, neither initialState or constants should be provided");r!=null&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(a){return a==null||Array.isArray(a)?a:[a]}return t=s(t),n=s(n),{inputs:e,initialState:t,constants:n}}function BS(e,t,n,r=!1,s,a,o=!1,i=!1){return M(()=>{let c=t.shape.length;if(c<3)throw new H(`Input should be at least 3D, but is ${c}D.`);let u=[1,0].concat(Br(2,c));if(t=Pe(t,u),a!=null)throw new Fe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),s!=null&&(s=ce(ce(s,"bool"),"float32"),s.rank===c-1&&(s=fn(s,-1)),s=Pe(s,u)),r&&(t=Zn(t,0),s!=null&&(s=Zn(s,0)));let l=[],d,p=n,h=t.shape[0],f=dt(t),m;s!=null&&(m=dt(s));for(let b=0;b<h;++b){let y=f[b],v=M(()=>e(y,p));if(s==null)d=v[0],p=v[1];else{let x=M(()=>{let k=m[b],C=fe(Yn(k),k),N=Y(V(v[0],k),V(p[0],C)),$=p.map((R,O)=>Y(V(v[1][O],k),V(R,C)));return{output:N,newStates:$}});d=x.output,p=x.newStates}i&&l.push(d)}let g;return i&&(g=Pt(l,1)),[d,g,p]})}var ls=class extends Ke{constructor(e){super(e);let t;if(e.cell==null)throw new H("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Gf({cells:e.cell}):t=e.cell,t.stateSize==null)throw new H("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Lt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Br(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Tv(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],r;if(this.returnSequences?r=[e[0],e[1],n]:r=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[r].concat(s)}else return r}computeMask(e,t){return M(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let r=this.states.map(s=>null);return[n].concat(r)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Fe("Constants support is not implemented in RNN yet.");Tv(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new Lt({shape:[n,null,...r]});let s=[e[0]].concat(e.slice(2));if(t!=null)throw new Fe("Constants support is not implemented in RNN yet.");this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new H(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new Lt({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){M(()=>{if(!this.stateful)throw new As("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>It([n,r])):this.states_=[It([n,this.cell.stateSize])];else if(e==null)$e(this.states_),this.keptStates!=null&&($e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>It([n,r])):this.states_[0]=It([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):$e(this.states_);for(let r=0;r<this.states_.length;++r){let s=e[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,o=[n,a];if(!w.arraysEqual(s.shape,o))throw new H(`State ${r} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${s.shape}`);this.states_[r]=s}}this.states_=this.states_.map(r=>Yt(r.clone()))})}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let s=LS(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let c of n)this.stateSpec.push(new Lt({shape:c.shape}));o=o.concat(this.stateSpec)}if(r!=null&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof Wr){let c=[e].concat(a),u=this.inputSpec.concat(o),l=this.inputSpec;this.inputSpec=u;let d=super.apply(c,t);return this.inputSpec=l,d}else return super.apply(e,t)}call(e,t){return M(()=>{let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;e=Le(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new H(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:r},c=BS((h,f)=>{let m=this.cell.call([h].concat(f),o);return[m[0],m.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=c[0],l=c[1],d=c[2];this.stateful&&this.resetStates(d,r);let p=this.returnSequences?l:u;return this.returnState?[p].concat(d):p})}getInitialState(e){return M(()=>{let t=It(e.shape);return t=ve(t,[1,2]),t=dd(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?bv(t,[1,n]):t):this.cell.stateSize>1?[bv(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===ls.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let r=t.cell,s=Vr(r,n);return new e(Object.assign(t,{cell:s}))}};ls.className="RNN";oe.registerClass(ls);var kd=class extends Ke{},Vf=class extends kd{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Jt(this.units,"units"),this.activation=ya(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=St(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ct(e.kernelRegularizer),this.recurrentRegularizer=Ct(e.recurrentRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.kernelConstraint=Ht(e.kernelConstraint),this.recurrentConstraint=Ht(e.recurrentConstraint),this.biasConstraint=Ht(e.biasConstraint),this.dropout=mu([1,ma([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=mu([1,ma([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=at(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return M(()=>{if(e=e,e.length!==2)throw new H(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=va({ones:()=>Yn(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=va({ones:()=>Yn(n),rate:this.recurrentDropout,training:r}));let s,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?s=is(V(e,a),this.kernel.read()):s=is(e,this.kernel.read()),this.bias!=null&&(s=zr(s,this.bias.read())),o!=null&&(n=V(n,o));let i=Y(s,is(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ba(this.activation),useBias:this.useBias,kernelInitializer:Et(this.kernelInitializer),recurrentInitializer:Et(this.recurrentInitializer),biasInitializer:Et(this.biasInitializer),kernelRegularizer:pt(this.kernelRegularizer),recurrentRegularizer:pt(this.recurrentRegularizer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),kernelConstraint:Gt(this.kernelConstraint),recurrentConstraint:Gt(this.recurrentConstraint),biasConstraint:Gt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};Vf.className="SimpleRNNCell";oe.registerClass(Vf);var ax=class extends ls{constructor(e){e.cell=new Vf(e);super(e)}call(e,t){return M(()=>{this.cell.dropoutMask!=null&&($e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return new e(t)}};ax.className="SimpleRNN";oe.registerClass(ax);var Uf=class extends kd{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new H("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Jt(this.units,"units"),this.activation=ya(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ya(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=St(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ct(e.kernelRegularizer),this.recurrentRegularizer=Ct(e.recurrentRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.kernelConstraint=Ht(e.kernelConstraint),this.recurrentConstraint=Ht(e.recurrentConstraint),this.biasConstraint=Ht(e.biasConstraint),this.dropout=mu([1,ma([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=mu([1,ma([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=at(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return M(()=>{if(e=e,e.length!==2)throw new H(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=va({ones:()=>Yn(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=va({ones:()=>Yn(r),rate:this.recurrentDropout,training:n,count:3}));let s=this.dropoutMask,a=this.recurrentDropoutMask,o,i,c;0<this.dropout&&this.dropout<1&&(e=V(e,s[0]));let u=is(e,this.kernel.read());this.useBias&&(u=zr(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=V(r,a[0]));let l=this.recurrentKernel.read(),[d,p]=Pn(l,[2*this.units,this.units],l.rank-1),h=is(r,d),[f,m,g]=Pn(u,3,u.rank-1),[b,y]=Pn(h,2,h.rank-1);o=this.recurrentActivation.apply(Y(f,b)),i=this.recurrentActivation.apply(Y(m,y));let v=is(V(i,r),p);c=this.activation.apply(Y(g,v));let x=Y(V(o,r),V(Y(1,kt(o)),c));return[x,x]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ba(this.activation),recurrentActivation:ba(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Et(this.kernelInitializer),recurrentInitializer:Et(this.recurrentInitializer),biasInitializer:Et(this.biasInitializer),kernelRegularizer:pt(this.kernelRegularizer),recurrentRegularizer:pt(this.recurrentRegularizer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),kernelConstraint:Gt(this.kernelConstraint),recurrentConstraint:Gt(this.recurrentConstraint),biasConstraint:Gt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};Uf.className="GRUCell";oe.registerClass(Uf);var ox=class extends ls{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Uf(e);super(e)}call(e,t){return M(()=>{this.cell.dropoutMask!=null&&($e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};ox.className="GRU";oe.registerClass(ox);var Id=class extends kd{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Jt(this.units,"units"),this.activation=ya(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ya(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=St(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ct(e.kernelRegularizer),this.recurrentRegularizer=Ct(e.recurrentRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.kernelConstraint=Ht(e.kernelConstraint),this.recurrentConstraint=Ht(e.recurrentConstraint),this.biasConstraint=Ht(e.biasConstraint),this.dropout=mu([1,ma([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=mu([1,ma([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=at(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;r=new(t=class extends Tr{apply(i,c){let u=s.apply([a]),l=new wf().apply([a]),d=s.apply([a*2]);return RI(RI(u,l),d)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return M(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new H(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=va({ones:()=>Yn(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=va({ones:()=>Yn(r),rate:this.recurrentDropout,training:n,count:4}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,c,u,l;0<this.dropout&&this.dropout<1&&(e=V(e,a[0]));let d=is(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=V(r,o[0])),d=Y(d,is(r,this.recurrentKernel.read())),this.useBias&&(d=zr(d,this.bias.read()));let[p,h,f,m]=Pn(d,4,d.rank-1);i=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(h),u=Y(V(c,s),V(i,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=V(l,this.activation.apply(u));return[g,g,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ba(this.activation),recurrentActivation:ba(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Et(this.kernelInitializer),recurrentInitializer:Et(this.recurrentInitializer),biasInitializer:Et(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:pt(this.kernelRegularizer),recurrentRegularizer:pt(this.recurrentRegularizer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),kernelConstraint:Gt(this.kernelConstraint),recurrentConstraint:Gt(this.recurrentConstraint),biasConstraint:Gt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};Id.className="LSTMCell";oe.registerClass(Id);var ix=class extends ls{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Id(e);super(e)}call(e,t){return M(()=>{this.cell.dropoutMask!=null&&($e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};ix.className="LSTM";oe.registerClass(ix);var Gf=class extends kd{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return M(()=>{e=e;let n=e.slice(1),r=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?r.push(n.splice(0,o.stateSize.length)):r.push(n.splice(0,1));r.reverse();let s=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=r[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),s.push(a.slice(1))}n=[];for(let o of s.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){Tv(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,r)=>{si(`RNNCell_${r}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),r={cells:this.cells.map(t)};return Object.assign({},e,r)}static fromConfig(e,t,n={}){let r=[];for(let s of t.cells)r.push(Vr(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Nv(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,s=e.splice(r);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}_v(t)}};Gf.className="StackedRNNCells";oe.registerClass(Gf);function va(e){let{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>OI(t(),n),o=()=>hd(a,t,r);return!s||s<=1?Yt(o().clone()):Array(s).fill(void 0).map(o).map(c=>Yt(c.clone()))}var aV=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var s=0,r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]]);return n},zS=class extends ls{constructor(e){if(e.unroll)throw new Fe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Fe("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Lt({ndim:5})]}call(e,t){return M(()=>{if(this.cell.dropoutMask!=null&&($e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new H("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return M(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],a=It(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){M(()=>{if(!this.stateful)throw new As("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(n[0]==null)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(s)):this.states_=[It(s)];else if(e==null)$e(this.states_),this.keptStates!=null&&($e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(s)):this.states_[0]=It(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):$e(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],c=s;if(!w.arraysEqual(i.shape,c))throw new H(`State ${o} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>Yt(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",c=e[i?3:2],u=e[i?4:3],l=Ur(c,r[0],s,a[0],o[0]),d=Ur(u,r[1],s,a[1],o[1]);return[...e.slice(0,2),...i?[n,l,d]:[l,d,n]]}};zS.className="ConvRNN2D";var Hf=class extends Id{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:o}=e;super(Object.assign({},e,{units:t}));this.filters=t,Jt(this.filters,"filters"),this.kernelSize=xu(n,2,"kernelSize"),this.kernelSize.forEach(i=>Jt(i,"kernelSize")),this.strides=xu(r||1,2,"strides"),this.strides.forEach(i=>Jt(i,"strides")),this.padding=s||"valid",pr(this.padding),this.dataFormat=a||"channelsLast",Ot(this.dataFormat),this.dilationRate=xu(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>Jt(i,"dilationRate"))}build(e){var t;e=at(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new H(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],s=4,a=this.kernelSize.concat([r,this.filters*s]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let c=this.biasInitializer,u=this.filters;i=new(t=class extends Tr{apply(d,p){let h=c.apply([u]),f=Xn([u]),m=c.apply([u*2]);return gv([h,f,m])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return M(()=>{if(e.length!==3)throw new H(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],s=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=va({ones:()=>Yn(r),rate:this.dropout,training:n,count:o}));let i=this.dropoutMask,c=(te,ne,re)=>!ne||!ne[re]?te:V(ne[re],te),u=c(r,i,0),l=c(r,i,1),d=c(r,i,2),p=c(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=va({ones:()=>Yn(s),rate:this.recurrentDropout,training:n,count:o}));let h=this.recurrentDropoutMask,f=c(s,h,0),m=c(s,h,1),g=c(s,h,2),b=c(s,h,3),y=3,[v,x,k,C]=Pn(this.kernel.read(),o,y),[N,$,R,O]=this.useBias?Pn(this.bias.read(),o):[null,null,null,null];u=this.inputConv(u,v,N,this.padding),l=this.inputConv(l,x,$,this.padding),d=this.inputConv(d,k,R,this.padding),p=this.inputConv(p,C,O,this.padding);let[D,P,T,L]=Pn(this.recurrentKernel.read(),o,y);f=this.recurrentConv(f,D),m=this.recurrentConv(m,P),g=this.recurrentConv(g,T),b=this.recurrentConv(b,L);let G=this.recurrentActivation.apply(Y(u,f)),j=this.recurrentActivation.apply(Y(l,m)),q=Y(V(j,a),V(G,this.activation.apply(Y(d,g)))),K=V(this.recurrentActivation.apply(Y(p,b)),this.activation.apply(q));return[K,K,q]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=aV(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){let s=Ft(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?zr(s,n,this.dataFormat):s}recurrentConv(e,t){return Ft(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Hf.className="ConvLSTM2DCell";oe.registerClass(Hf);var cx=class extends zS{constructor(e){let t=new Hf(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};cx.className="ConvLSTM2D";oe.registerClass(cx);var jf=class extends Ke{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return n}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Le(e);if(0<this.rate&&this.rate<1){let r=t.training==null?!1:t.training,s=this.getNoiseShape(n);return hd(()=>OI(n,this.rate,s,this.seed),()=>n,r)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};jf.className="Dropout";oe.registerClass(jf);var ux=class extends jf{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};ux.className="SpatialDropout1D";oe.registerClass(ux);var lx=class extends Ke{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Jt(this.units,"units"),this.activation=ya(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=St(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=St(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ht(e.kernelConstraint),this.biasConstraint=Ht(e.biasConstraint),this.kernelRegularizer=Ct(e.kernelRegularizer),this.biasRegularizer=Ct(e.biasRegularizer),this.activityRegularizer=Ct(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=at(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=at(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Le(e),r=CI(this.activation.getClassName()),s;return r!=null?s=is(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=is(n,this.kernel.read()),this.bias!=null&&(s=zr(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:ba(this.activation),useBias:this.useBias,kernelInitializer:Et(this.kernelInitializer),biasInitializer:Et(this.biasInitializer),kernelRegularizer:pt(this.kernelRegularizer),biasRegularizer:pt(this.biasRegularizer),activityRegularizer:pt(this.activityRegularizer),kernelConstraint:Gt(this.kernelConstraint),biasConstraint:Gt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};lx.className="Dense";oe.registerClass(lx);var dx=class extends Ke{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=at(e);for(let t of e.slice(1))if(t==null)throw new H(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],fa(e,1)]}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Le(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let r=[0];for(let s=2;s<n.rank;++s)r.push(s);r.push(1),n=Pe(n,r)}return S4(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};dx.className="Flatten";oe.registerClass(dx);var px=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.activation=ya(e.activation)}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Le(e);return this.activation.apply(n)})}getConfig(){let e={activation:ba(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};px.className="Activation";oe.registerClass(px);var hx=class extends Ke{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return M(()=>(e=Le(e),k4(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};hx.className="RepeatVector";oe.registerClass(hx);var fx=class extends Ke{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),s=1,a=null;for(let i=0;i<r.length;++i){let c=r[i];if(this.isUnknown(c))if(a===null)a=i;else throw new H("Can only specifiy one unknown dimension.");else s*=c}let o=fa(e);if(a!==null){if(s===0||o%s!=0)throw new H(n);r[a]=o/s}else if(o!==s)throw new H(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Le(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return U(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};fx.className="Reshape";oe.registerClass(fx);var mx=class extends Ke{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Br(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Lt({ndim:this.dims.length+1})]}computeOutputShape(e){e=at(e);let t=e.slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Pe(Le(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};mx.className="Permute";oe.registerClass(mx);var gx=class extends Ke{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Le(e),r=-1;return jl(Zo(n,this.maskValue),r)}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Le(e),r=-1,s=!0,a=jl(Zo(n,this.maskValue),r,s);return V(n,ce(a,n.dtype))})}};gx.className="Masking";oe.registerClass(gx);var bx=class extends Ke{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(bt(e.inputLength))}this.inputDim=e.inputDim,Jt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Jt(this.outputDim,"outputDim"),this.embeddingsInitializer=St(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ct(e.embeddingsRegularizer),this.activityRegularizer=Ct(e.activityRegularizer),this.embeddingsConstraint=Ht(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return M(()=>this.maskZero?(e=Le(e),Zo(e,Ge(e))):null)}computeOutputShape(e){if(e=at(e),this.inputLength==null)return[...e,this.outputDim];let t=bt(this.inputLength);if(t.length!==e.length-1)throw new H(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let s=t[r],a=e[r+1];if(s!=null&&a!=null&&s!==a)throw new H(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Le(e);n.dtype!=="int32"&&(n=yf(n,"int32"));let r=PI(this.embeddings.read(),U(n,[n.size]));return U(r,at(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Et(this.embeddingsInitializer),embeddingsRegularizer:pt(this.embeddingsRegularizer),activityRegularizer:pt(this.activityRegularizer),embeddingsConstraint:Gt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};bx.className="Embedding";oe.registerClass(bx);var ui=class extends Ke{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Fe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let s=e[e.length-t.length+r],a=t[r];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new H("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[at(e)]),e=e,e.length<2)throw new H(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=ha(t),t.length>1)throw new H(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let r=e.map(s=>s.length);e.indexOf(null)===-1&&ha(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return M(()=>{if(e=e,this.reshapeRequired){let n=[],r=e.map(s=>s.rank);if(r.indexOf(null)===-1){let s=ma(r);for(let a of e){let o=a.rank;for(let i=0;i<s-o;++i)a=dd(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let i of e){let c=i.rank;if(c==null){let u=i.shape,l=u[0],d=u.slice(1).concat([l]),p=U(i,[l].concat(fa(u.slice(1))));p=Pe(p,[1,0]),p=U(p,d),n.push(p),s=!0}else if(c>1){let u=Br(1,c).concat([0]);n.push(Pe(i,u)),s=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(s){if(o==null){let i=a.shape,c=i.length,u=i[c-1],l=[u].concat(i.slice(0,i.length-1));a=U(Pe(U(a,[-1,u]),[1,0]),l)}else if(o>1){let i=[o-1].concat(Br(0,o-1));a=Pe(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){let s=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let r of e)r!=null&&r[0]!==null&&n.push(r[0]);return n=ha(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return M(()=>{if(t==null)return null;if(!Array.isArray(t))throw new H("`mask` should be an Array");if(!Array.isArray(e))throw new H("`inputs` should be an Array");if(t.length!==e.length)throw new H(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:fn(r,0));let n=t[0];for(let r=1;r<t.length-1;++r)n=Sr(n,t[r]);return n})}},yx=class extends ui{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Y(t,e[n]);return t})}};yx.className="Add";oe.registerClass(yx);var vx=class extends ui{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=V(t,e[n]);return t})}};vx.className="Multiply";oe.registerClass(vx);var xx=class extends ui{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Y(t,e[n]);return V(1/e.length,t)})}};xx.className="Average";oe.registerClass(xx);var wx=class extends ui{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=rs(t,e[n]);return t})}};wx.className="Maximum";oe.registerClass(wx);var kx=class extends ui{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=iu(t,e[n]);return t})}};kx.className="Minimum";oe.registerClass(kx);var Ix=class extends ui{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new H("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let r of e)if(r!=null){t=!1;break}if(t)return;let n=[];for(let r=0;r<e.length;++r){let s=e[r].slice();s.splice(this.axis,1);let a=!1;for(let o of n)if(w.arraysEqual(o,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new H("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return M(()=>gv(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new H("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[r]==null||s[r]==null){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new H("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new H("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new H(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return M(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let r=[];for(let a=0;a<e.length;++a)t[a]==null?r.push(ce(Yn(e[a]),"bool")):t[a].rank<e[a].rank?r.push(fn(t[a],-1)):r.push(t[a]);let s=Ze(r,this.axis);return Fh(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Ix.className="Concatenate";oe.registerClass(Ix);function Sd(e,t){for(;e<0;)e+=t;return e}function oV(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Fe("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Fe("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,s=t.shape.length;n==null&&(n=[r-1,s-2]);let a=n;return M(()=>{let o;if(r>s){o=r-s;let c=[];for(let u=0;u<o;++u)c.push(1);t=U(t,t.shape.concat(c))}else if(s>r){o=s-r;let c=[];for(let u=0;u<o;++u)c.push(1);e=U(e,e.shape.concat(c))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=ve(V(e,t),a[0]):i=ve(V(Pe(e,[1,0]),t),a[1]);else{let c=a[0]!==e.shape.length-1,u=a[1]===t.shape.length-1;i=De(e,t,c,u)}if(o>0){let c;r>s?c=r+s-3:c=r-1;let u=[];for(let l=c;l<c+o;++l)u.push(l);i=ss(i,u)}return i.shape.length===1&&(i=fn(i,1)),i})}var Sx=class extends ui{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Fe("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new H(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new H(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((s,a)=>Sd(s,e[a].shape.length)):r=[Sd(this.axes,t.shape.length),Sd(this.axes,n.shape.length)],this.normalize&&(t=Ff(t,r[0]),n=Ff(n,r[1])),oV(t,n,r)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Sd(this.axes,e.length),Sd(this.axes,t.length)],n}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Fe("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Sx.className="Dot";oe.registerClass(Sx);var Cx=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Le(e);return hd(()=>Y(xf(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};Cx.className="GaussianNoise";oe.registerClass(Cx);var Tx=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return M(()=>{this.invokeCallHook(e,t);let n=Le(e);return this.rate>0&&this.rate<1?hd(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return V(n,xf(n.shape,1,s))},()=>n,t.training||!1):n})}};Tx.className="GaussianDropout";oe.registerClass(Tx);var Nx=class extends Ke{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Le(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return M(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return hd(()=>{let s=Le(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,c=la(cu(n),this.rate);c=yf(c,"float32");let u=((1-this.rate)*(1+this.rate*i**2))**-.5,l=-u*i*this.rate,d=Y(V(s,c),V(Y(c,-1),i));return Y(V(d,u),l)},()=>Le(e),t.training||!1)}return e})}};Nx.className="AlphaDropout";oe.registerClass(Nx);function Cd(e,t,n,r,s,a=.001){let o;if(e.rank===2)o=gk(e,t,n,r,s,a);else if(e.rank===3)o=bk(e,t,n,r,s,a);else if(e.rank===4)o=yk(e,t,n,r,s,a);else throw new Fe(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function iV(e,t,n,r,s=.001){return M(()=>{let a=Gh(e,r),o=a.mean,i=a.variance;return[Cd(e,o,i,n,t,s),o,i]})}function cV(e,t,n,r,s=.001){return M(()=>{let a=Gh(e,r),o=a.mean,i=a.variance,c=[];for(let f of Br(0,e.rank))r.indexOf(f)!==-1?c.push(1):c.push(e.shape[f]);let u=U(o,c),l=U(i,c),d=t==null?null:U(t,c),p=n==null?null:U(n,c);return[Cd(e,u,l,p,d,s),o,i]})}function uV(e,t,n,r,s=.001){return w.arraysEqual(r.slice().sort(),Br(0,e.rank-1))?iV(e,t,n,r,s):cV(e,t,n,r,s)}var _x=class extends Ke{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=St(e.betaInitializer||"zeros"),this.gammaInitializer=St(e.gammaInitializer||"ones"),this.movingMeanInitializer=St(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=St(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ht(e.betaConstraint),this.gammaConstraint=Ht(e.gammaConstraint),this.betaRegularizer=Ct(e.betaRegularizer),this.gammaRegularizer=Ct(e.gammaRegularizer)}build(e){e=at(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new H(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Lt({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return M(()=>{let n=t.training==null?!1:t.training,r=Le(e),s=r.shape,a=s.length,o=Br(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let c=ti(1,a);c[i]=s[i];let u=o.slice();u.sort();let l=!w.arraysEqual(u,Br(0,a).slice(0,a-1)),d=()=>{if(l){let b=U(this.movingMean.read(),c),y=U(this.movingVariance.read(),c),v=this.center?U(this.beta.read(),c):null,x=this.scale?U(this.gamma.read(),c):null;return Cd(r,b,y,v,x,this.epsilon)}else return Cd(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[p,h,f]=uV(r,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(b,y,v)=>{M(()=>{let x=1-v,k=b.read(),C=V(fe(k,y),x);b.write(fe(k,C))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),p})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Et(this.betaInitializer),gammaInitializer:Et(this.gammaInitializer),movingMeanInitializer:Et(this.movingMeanInitializer),movingVarianceInitializer:Et(this.movingVarianceInitializer),betaRegularizer:pt(this.betaRegularizer),gammaRegularizer:pt(this.gammaRegularizer),betaConstraint:Gt(this.betaConstraint),gammaConstraint:Gt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};_x.className="BatchNormalization";oe.registerClass(_x);var Ex=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=St(e.betaInitializer||"zeros"),this.gammaInitializer=St(e.gammaInitializer||"ones"),this.betaRegularizer=Ct(e.betaRegularizer),this.gammaRegularizer=Ct(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=at(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==ha(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=Le(e),r=n.shape,s=r.length;return M(()=>{let a=!0,{mean:o,variance:i}=Gh(n,this.axis,a),c=ti(1,s);for(let f of this.axis)c[f]=r[f];let u=f=>f!=null&&f.shape.length!==s&&this.axis!==[s-1]?U(f,c):f,l=u(this.gamma.read()),d=u(this.beta.read()),p=[],h=[];for(let f=0;f<s;++f)this.axis.indexOf(f)!==-1?(p.push(r[f]),h.push(1)):(p.push(1),h.push(r[f]));return o=Fn(o,p),i=Fn(i,p),l=Fn(l,h),d=Fn(d,h),Cd(n,o,i,d,l,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Et(this.betaInitializer),gammaInitializer:Et(this.gammaInitializer),betaRegularizer:pt(this.betaRegularizer),gammaRegularizer:pt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Ex.className="LayerNormalization";oe.registerClass(Ex);function lV(e,t,n){return M(()=>{if(e.rank!==4)throw new H(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new H("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Mr()),n!=="channelsLast"&&n!=="channelsFirst")throw new H(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return n==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],dr(e,r)})}var Ax=class extends Ke{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?Mr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new H(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new H(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new H(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Lt({ndim:4})]}computeOutputShape(e){e=at(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return M(()=>lV(Le(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Ax.className="ZeroPadding2D";oe.registerClass(Ax);function qf(e,t,n,r,s,a){return M(()=>{Ot(s),EI(a),pr(r),n==null&&(n=[1,1]),r==null&&(r="valid"),s==null&&(s=Mr()),a==null&&(a="max"),e=Zv(e,s);let o,i=r==="same"?"same":"valid";return a==="max"?o=Rt(e,t,n,i):o=ur(e,t,n,i),s==="channelsFirst"&&(o=Pe(o,[0,3,1,2])),o})}function WS(e,t,n,r,s,a){return M(()=>{Ot(s),EI(a),pr(r),n==null&&(n=[1,1,1]),r==null&&(r="valid"),s==null&&(s=Mr()),a==null&&(a="max"),e=PS(e,s);let o,i=r==="same"?"same":"valid";return a==="max"?o=Wy(e,t,n,i):o=Cy(e,t,n,i),s==="channelsFirst"&&(o=Pe(o,[0,4,1,2,3])),o})}var VS=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new H(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Jt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new H(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,pr(this.padding),this.inputSpec=[new Lt({ndim:3})]}computeOutputShape(e){e=at(e);let t=Ur(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return M(()=>{this.invokeCallHook(e,t),e=dd(Le(e),2);let n=this.poolingFunction(Le(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ss(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Dx=class extends VS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ot(s),pr(r),qf(e,t,n,r,s,"max")}};Dx.className="MaxPooling1D";oe.registerClass(Dx);var $x=class extends VS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ot(s),pr(r),qf(e,t,n,r,s,"avg")}};$x.className="AveragePooling1D";oe.registerClass($x);var US=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new H(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Jt(this.poolSize,"poolSize"),Jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ot(this.dataFormat),pr(this.padding),this.inputSpec=[new Lt({ndim:4})]}computeOutputShape(e){e=at(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Ur(t,this.poolSize[0],this.padding,this.strides[0]),n=Ur(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return M(()=>(this.invokeCallHook(e,t),this.poolingFunction(Le(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Fx=class extends US{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ot(s),pr(r),qf(e,t,n,r,s,"max")}};Fx.className="MaxPooling2D";oe.registerClass(Fx);var Rx=class extends US{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ot(s),pr(r),qf(e,t,n,r,s,"avg")}};Rx.className="AveragePooling2D";oe.registerClass(Rx);var GS=class extends Ke{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new H(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Jt(this.poolSize,"poolSize"),Jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ot(this.dataFormat),pr(this.padding),this.inputSpec=[new Lt({ndim:5})]}computeOutputShape(e){e=at(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Ur(t,this.poolSize[0],this.padding,this.strides[0]),n=Ur(n,this.poolSize[1],this.padding,this.strides[1]),r=Ur(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return M(()=>(this.invokeCallHook(e,t),this.poolingFunction(Le(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Px=class extends GS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ot(s),pr(r),WS(e,t,n,r,s,"max")}};Px.className="MaxPooling3D";oe.registerClass(Px);var Ox=class extends GS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ot(s),pr(r),WS(e,t,n,r,s,"avg")}};Ox.className="AveragePooling3D";oe.registerClass(Ox);var HS=class extends Ke{constructor(e){super(e);this.inputSpec=[new Lt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Fe}},Mx=class extends HS{constructor(e){super(e||{})}call(e,t){return M(()=>{let n=Le(e);return _t(n,1)})}};Mx.className="GlobalAveragePooling1D";oe.registerClass(Mx);var Lx=class extends HS{constructor(e){super(e||{})}call(e,t){return M(()=>{let n=Le(e);return Ir(n,1)})}};Lx.className="GlobalMaxPooling1D";oe.registerClass(Lx);var jS=class extends Ke{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ot(this.dataFormat),this.inputSpec=[new Lt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Fe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Bx=class extends jS{call(e,t){return M(()=>{let n=Le(e);return this.dataFormat==="channelsLast"?_t(n,[1,2]):_t(n,[2,3])})}};Bx.className="GlobalAveragePooling2D";oe.registerClass(Bx);var zx=class extends jS{call(e,t){return M(()=>{let n=Le(e);return this.dataFormat==="channelsLast"?Ir(n,[1,2]):Ir(n,[2,3])})}};zx.className="GlobalMaxPooling2D";oe.registerClass(zx);var qS=class extends Ke{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=t.layer,s=Vr(r,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},Wx=class extends qS{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=at(e),e.length<3)throw new H(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=at(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return M(()=>(e=Le(e),BS((a,o)=>[Le(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};Wx.className="TimeDistributed";oe.registerClass(Wx);function dV(e){ri(b4,"BidirectionalMergeMode",e)}var pV="concat",Vx=class extends qS{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Vr(n),t.goBackwards=t.goBackwards!==!0;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Vr(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?pV:e.mergeMode,dV(this.mergeMode),e.weights)throw new Fe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,r,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,r=[n]):this.mergeMode==null?r=[n,n.slice()]:r=[n],this.returnState?this.mergeMode==null?r.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):On(r)}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let s=LS(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&r==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let c=n.length;if(c%2>0)throw new H("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let u=n.map(l=>new Lt({shape:l.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),o.push(...u)}if(r!=null)throw new Fe("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof Wr;for(let c of a)if(c instanceof Wr!==i)throw new H("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let c=[e].concat(a),u=this.inputSpec.concat(o),l=this.inputSpec;this.inputSpec=u;let d=super.apply(c,t);return this.inputSpec=l,d}else return super.apply(e,t)}call(e,t){return M(()=>{let n=t.initialState,r,s;if(n==null)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),c=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Zn(s,1));let o;return this.mergeMode==="concat"?o=gv([r,s]):this.mergeMode==="sum"?o=Y(r,s):this.mergeMode==="ave"?o=V(.5,Y(r,s)):this.mergeMode==="mul"?o=V(r,s):this.mergeMode==null&&(o=[r,s]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){si(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),si(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Vr(t.layer);if(delete t.layer,t.numConstants!=null)throw new Fe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};Vx.className="Bidirectional";oe.registerClass(Vx);function hV(e){return new gu(e)}function fV(e){return new Kv(e)}function mV(e){return new Hv(e)}function gV(e){return new jv(e)}function bV(e){return new qv(e)}function yV(e){return new Yv(e)}function vV(e){return new Xv(e)}function xV(e){return new Wf(e)}function wV(e){return new xd(e)}function kV(e){return new Qv(e)}function IV(e){return new wd(e)}function SV(e){return new ex(e)}function CV(e){return new tx(e)}function TV(e){return new nx(e)}function NV(e){return new rx(e)}function _V(e){return new sx(e)}function EV(e){return new px(e)}function AV(e){return new lx(e)}function DV(e){return new jf(e)}function $V(e){return new ux(e)}function FV(e){return new dx(e)}function RV(e){return new hx(e)}function PV(e){return new fx(e)}function OV(e){return new mx(e)}function MV(e){return new bx(e)}function LV(e){return new yx(e)}function BV(e){return new xx(e)}function zV(e){return new Ix(e)}function WV(e){return new wx(e)}function VV(e){return new kx(e)}function UV(e){return new vx(e)}function GV(e){return new Sx(e)}function HV(e){return new _x(e)}function jV(e){return new Ex(e)}function qV(e){return new Ax(e)}function Ux(e){return new $x(e)}function KV(e){return Ux(e)}function XV(e){return Ux(e)}function Gx(e){return new Rx(e)}function YV(e){return Gx(e)}function ZV(e){return Gx(e)}function Hx(e){return new Ox(e)}function JV(e){return Hx(e)}function QV(e){return Hx(e)}function eU(e){return new Mx(e)}function tU(e){return new Bx(e)}function KS(e){return new Lx(e)}function XS(e){return new zx(e)}function YS(e){return new Dx(e)}function ZS(e){return new Fx(e)}function nU(e){return new Px(e)}function rU(e){return new ox(e)}function sU(e){return new Uf(e)}function aU(e){return new ix(e)}function oU(e){return new Id(e)}function iU(e){return new ax(e)}function cU(e){return new Vf(e)}function uU(e){return new cx(e)}function lU(e){return new Hf(e)}function dU(e){return new ls(e)}function pU(e){return new Gf(e)}function hU(e){return new Vx(e)}function fU(e){return new Wx(e)}var mU=KS,gU=XS,bU=YS,yU=ZS;function vU(e){return new Cx(e)}function xU(e){return new Tx(e)}function wU(e){return new Nx(e)}function kU(e){return new gx(e)}var JS={};Re(JS,{MAPE:()=>FU,MSE:()=>OU,binaryAccuracy:()=>IU,binaryCrossentropy:()=>SU,categoricalAccuracy:()=>TU,categoricalCrossentropy:()=>NU,cosineProximity:()=>AU,mape:()=>RU,meanAbsoluteError:()=>DU,meanAbsolutePercentageError:()=>$U,meanSquaredError:()=>PU,mse:()=>MU,precision:()=>_U,recall:()=>EU,sparseCategoricalAccuracy:()=>CU});function IU(e,t){return Dv(e,t)}function SU(e,t){return eS(e,t)}function CU(e,t){return tS(e,t)}function TU(e,t){return $v(e,t)}function NU(e,t){return Fv(e,t)}function _U(e,t){return QI(e,t)}function EU(e,t){return pW(e,t)}function AU(e,t){return Ev(e,t)}function DU(e,t){return Rf(e,t)}function $U(e,t){return yu(e,t)}function FU(e,t){return yu(e,t)}function RU(e,t){return yu(e,t)}function PU(e,t){return oi(e,t)}function OU(e,t){return oi(e,t)}function MU(e,t){return oi(e,t)}var QS={};Re(QS,{modelFromJSON:()=>jW});var eC={};Re(eC,{l1:()=>BU,l1l2:()=>LU,l2:()=>zU});function LU(e){return new yd(e)}function BU(e){return eV(e)}function zU(e){return tV(e)}var tC=class extends bu{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof $s))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Kf(e,t){return e<t}function nC(e,t){return e>t}var rC=class extends tC{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Fe("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Kf:this.mode==="max"?this.monitorFunc=nC:this.monitor.indexOf("acc")!==-1?this.monitorFunc=nC:this.monitorFunc=Kf,this.monitorFunc===Kf&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Kf?1/0:-1/0}async onEpochEnd(e,t){await ga(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function WU(e){return new rC(e)}var VU={earlyStopping:WU},Gr;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Gr||(Gr={}));var sC;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(sC||(sC={}));var jx={};function UU(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};jx[e]=n}function aC(e){return jx[e]}function GU(e){delete jx[e]}function I(e,t,n,r,s){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,c=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return kn(t.inputNames[a.inputIndexStart],n,r,s);if(a.type==="tensors")return t.inputNames.slice(i,c).map(p=>kn(p,n,r,s));let u=kn(t.inputNames.slice(i)[0],n,r,s),l=u.dataSync();return a.type==="number"?l[0]:w.toNestedArray(u.shape,l)}let o=t.attrParams[e];return o&&o.value}function kn(e,t,n,r){let[s,a]=Qn(e);if(r!=null){let i=r.getHashTableHandleByName(s);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[Xf(s,i)]);return o!==void 0?t[Xf(s,o)][a]:void 0}function HU(e,t,n){return t[Xf(e,n.currentContextId)]}function Fs(e,t){let[n,r,s]=Qn(e);return[Xf(n,t&&t.currentContextId),r,s]}function Xf(e,t){return t?`${e}-${t}`:e}function Qn(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],r=t.length===3?t[1]:void 0,s=Number(t[t.length-1]);return[n,s,r]}function Yf(e,t,n){let r=I("pad",e,t,n);if(r==="explicit"){r=I("explicitPaddings",e,t,n);let s=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)s[a][0]=r[a*2],s[a][1]=r[a*2+1];return s}return r}function Rs(e){return e.kept?e:Ss(e)}var oC={};Re(oC,{json:()=>jU});var jU=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],iC={};Re(iC,{json:()=>qU});var qU=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],cC={};Re(cC,{json:()=>KU});var KU=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],uC={};Re(uC,{json:()=>XU});var XU=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],lC={};Re(lC,{json:()=>YU});var YU=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],dC={};Re(dC,{json:()=>ZU});var ZU=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],pC={};Re(pC,{json:()=>JU});var JU=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],hC={};Re(hC,{json:()=>QU});var QU=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],fC={};Re(fC,{json:()=>eG});var eG=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],mC={};Re(mC,{json:()=>tG});var tG=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],gC={};Re(gC,{json:()=>nG});var nG=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bC={};Re(bC,{json:()=>rG});var rG=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],yC={};Re(yC,{json:()=>sG});var sG=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],vC={};Re(vC,{json:()=>aG});var aG=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],xC={};Re(xC,{json:()=>oG});var oG=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],wC={};Re(wC,{json:()=>iG});var iG=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],kC={};Re(kC,{json:()=>cG});var cG=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],IC={};Re(IC,{json:()=>uG});var uG=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],SC={};Re(SC,{json:()=>lG});var lG=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],CC=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[oC,iC,cC,uC,lC,dC,pC,hC,fC,mC,gC,bC,yC,vC,xC,wC,kC,IC,SC],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,r)=>(n[r.tfOpName]=r,n),{})}transformGraph(e,t={}){let n=e.node,r=[],s=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?r.push(f[m.name]):m.op==="Const"?s.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],c=[],u={},l={};t!=null&&(u=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));let d=Object.keys(o);d.forEach(f=>{let m=o[f];m.inputNames.forEach((g,b)=>{let[y,,v]=Fs(g),x=o[y];if(x.outputs!=null){let k=x.outputs.indexOf(v);if(k!==-1){let C=`${y}:${k}`;m.inputNames[b]=C}}m.inputs.push(x),x.children.push(m)})}),Object.keys(l).length===0?d.forEach(f=>{let m=o[f];m.children.length===0&&c.push(m)}):Object.keys(l).forEach(f=>{let[m]=Fs(f),g=o[m];g!=null&&(g.signatureKey=l[f],c.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(f=>{let[m]=Fs(f),g=o[m];g&&(g.signatureKey=u[f],i.push(g))}):i=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:o,inputs:i,outputs:c,weights:s,placeholders:r,signature:t,functions:p};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=aC(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.substr(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((r,s)=>(r[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},r),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((r,s)=>{let a=s.type,o;switch(s.type){case"string":o=qx(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=qx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":o=tw(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=tw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":o=Xx(e.attr,s.tfName,s.defaultValue||0),o===void 0&&!!s.tfDeprecatedName&&(o=Xx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":o=ew(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=ew(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":o=Kx(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=Kx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":o=rw(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=rw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":o=Qx(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=Qx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":o=nw(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=nw(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":o=Zx(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=Zx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":o=Jx(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=Jx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":o=NC(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=NC(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return r[s.name]={value:o,type:a},r},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r=[],s={};t!=null&&(s=t.reduce((l,d)=>(l[d.name]=this.mapNode(d),d.op==="Const"&&r.push(l[d.name]),l),{}));let a=[],o=[];e.signature.inputArg.forEach(l=>{let[d]=Fs(l.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Yx(l.type),type:"dtype"}},children:[]};p.signatureKey=l.name,a.push(p),s[d]=p}),Object.keys(s).forEach(l=>{let d=s[l];d.inputNames.forEach((p,h)=>{let[f,,m]=Fs(p),g=s[f];if(g.outputs!=null){let b=g.outputs.indexOf(m);if(b!==-1){let y=`${f}:${b}`;d.inputNames[h]=y}}d.inputs.push(g),g.children.push(d)})});let c=e.ret;e.signature.outputArg.forEach(l=>{let[d,p]=Fs(c[l.name]),h=s[d];h!=null&&(h.defaultOutput=p,o.push(h))});let u=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:o,weights:r,placeholders:n,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function dG(e){let t=Q().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function TC(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):dG(e);return t?n:n.toLowerCase()}function qx(e,t,n,r=!1){let s=e[t];return s!=null?TC(s.s,r):n}function Kx(e,t,n){let r=e[t];return r?r.b:n}function Xx(e,t,n){let r=e[t]||{},s=r.i!=null?r.i:r.f!=null?r.f:n;return typeof s=="number"?s:parseInt(s,10)}function Yx(e){switch(typeof e=="string"&&(e=Gr[e]),e){case Gr.DT_FLOAT:return"float32";case Gr.DT_INT32:case Gr.DT_INT64:case Gr.DT_INT8:case Gr.DT_UINT8:return"int32";case Gr.DT_BOOL:return"bool";case Gr.DT_DOUBLE:return"float32";case Gr.DT_STRING:return"string";default:return null}}function NC(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function Zx(e,t,n){let r=e[t];return r&&r.type?Yx(r.type):n}function Jx(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(s=>Yx(s)):n}function _C(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Qx(e,t,n){let r=e[t];return r&&r.shape?_C(r.shape):n}function ew(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):n}function tw(e,t,n,r=!1){let s=e[t];return s&&s.list&&s.list.s?s.list.s.map(a=>TC(a,r)):n}function nw(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(s=>_C(s)):n}function rw(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var pG=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,s)=>(r[s]=this.getAttr(s),r),{}))}getInput(e){return kn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return kn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Xx(this.node.rawAttrs,e,t);if(n.s!=null)return qx(this.node.rawAttrs,e,t);if(n.b!=null)return Kx(this.node.rawAttrs,e,t);if(n.shape!=null)return Qx(this.node.rawAttrs,e,t);if(n.type!=null)return Zx(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return ew(this.node.rawAttrs,e,t);if(n.list.s!=null)return tw(this.node.rawAttrs,e,t);if(n.list.shape!=null)return nw(this.node.rawAttrs,e,t);if(n.list.b!=null)return rw(this.node.rawAttrs,e,t);if(n.list.type!=null)return Jx(this.node.rawAttrs,e,t)}return t}},hG=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Y(I("a",e,t,n),I("b",e,t,n))];case"AddN":return[pk(I("tensors",e,t,n))];case"FloorMod":case"Mod":return[Uy(I("a",e,t,n),I("b",e,t,n))];case"Mul":return[V(I("a",e,t,n),I("b",e,t,n))];case"RealDiv":case"Div":return[ge(I("a",e,t,n),I("b",e,t,n))];case"DivNoNan":return[$y(I("a",e,t,n),I("b",e,t,n))];case"FloorDiv":return[$h(I("a",e,t,n),I("b",e,t,n))];case"Sub":return[fe(I("a",e,t,n),I("b",e,t,n))];case"Minimum":return[iu(I("a",e,t,n),I("b",e,t,n))];case"Maximum":return[rs(I("a",e,t,n),I("b",e,t,n))];case"Pow":return[Ns(I("a",e,t,n),I("b",e,t,n))];case"SquaredDifference":return[ef(I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},fG=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Mt(I("x",e,t,n))];case"Acos":return[my(I("x",e,t,n))];case"Acosh":return[gy(I("x",e,t,n))];case"Asin":return[yy(I("x",e,t,n))];case"Asinh":return[vy(I("x",e,t,n))];case"Atan":return[xy(I("x",e,t,n))];case"Atan2":return[wy(I("x",e,t,n),I("y",e,t,n))];case"Atanh":return[ky(I("x",e,t,n))];case"Ceil":return[Ny(I("x",e,t,n))];case"Complex":return[sa(I("real",e,t,n),I("imag",e,t,n))];case"Cos":return[Xl(I("x",e,t,n))];case"Cosh":return[Mh(I("x",e,t,n))];case"Elu":return[au(I("x",e,t,n))];case"Erf":return[Fy(I("x",e,t,n))];case"Exp":return[hn(I("x",e,t,n))];case"Expm1":return[Ry(I("x",e,t,n))];case"Floor":return[ou(I("x",e,t,n))];case"Log":return[Kn(I("x",e,t,n))];case"Log1p":return[Zl(I("x",e,t,n))];case"Imag":return[Bh(I("x",e,t,n))];case"Neg":return[kt(I("x",e,t,n))];case"Reciprocal":return[jy(I("x",e,t,n))];case"Real":return[nd(I("x",e,t,n))];case"Relu":return[qe(I("x",e,t,n))];case"Round":return[qh(I("x",e,t,n))];case"Selu":return[Xh(I("x",e,t,n))];case"Sigmoid":return[lr(I("x",e,t,n))];case"Sin":return[Yh(I("x",e,t,n))];case"Sign":return[qy(I("x",e,t,n))];case"Sinh":return[Zh(I("x",e,t,n))];case"Softplus":return[Xo(I("x",e,t,n))];case"Sqrt":return[an(I("x",e,t,n))];case"Square":return[ct(I("x",e,t,n))];case"Tanh":return[qo(I("x",e,t,n))];case"Tan":return[Yy(I("x",e,t,n))];case"ClipByValue":return[Zt(I("x",e,t,n),I("clipValueMin",e,t,n),I("clipValueMax",e,t,n))];case"Relu6":return[jh(I("x",e,t,n))];case"Rsqrt":return[Kh(kn(e.inputNames[0],t,n))];case"Prod":return[Hh(I("x",e,t,n),I("axes",e,t,n))];case"LeakyRelu":return[Yl(I("x",e,t,n),I("alpha",e,t,n))];case"Prelu":return[td(I("x",e,t,n),I("alpha",e,t,n))];case"IsNan":return[Oy(kn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function _r(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let s=e[r],a=t[r];w.assert(s<0||a<0||s===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function EC(e){return!(typeof e=="number"||e.some(t=>t<0))}function Td(e,t,n){let r=sw(e,n),s=!EC(r);if(s&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach(a=>{r=sw(a.shape,r)}),!EC(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function sw(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}var mG=class{constructor(e,t,n,r,s,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ie(0),Yt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),_r(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Yt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,r)=>this.write(n,t[r]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return jn([],[0].concat(this.elementShape));let n=this.readMany(e);return _r(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Pt(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return jn([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return _r(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Ze(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,dt(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];M(()=>{t=U(t,[1,n,s]);for(let i=0;i<e.length;++i){let c=i===0?0:r[i-1],u=[0,c,0],l=[1,e[i],s];a[i]=U(We(t,u,l),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},Nd=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);_r(t,s.shape,"TensorList shape mismatch: "),Yt(s)}),this.idTensor=Ie(0),this.maxNumElements=r,Yt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Nd([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);_r(e,this.elementShape,"TensorList shape mismatch: ");let r=Td(this.elementShape,this.tensors,e);return M(()=>{let s=this.tensors.map(a=>U(a,r));return Pt(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Td(this.elementShape,this.tensors,e),r=this.tensors.pop();return _r(r.shape,e,"TensorList shape mismatch: "),U(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(_r(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Yt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);_r(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=Td(this.elementShape,this.tensors,t);return U(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);_r(this.elementShape,t.shape,"TensorList shape mismatch: "),Yt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);_r(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=Td(this.elementShape,this.tensors,n);return e.length===0?jn([],[0].concat(r)):M(()=>{let s=e.map(a=>U(this.tensors[a],r));return Pt(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);_r(this.elementShape,t,"TensorList shape mismatch: ");let n=Td(this.elementShape,this.tensors,t);return this.size()===0?jn([],[0].concat(n)):M(()=>{let r=this.tensors.map(s=>U(s,n));return Ze(r,0)})}};function gG(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let s=e.shape.slice(1);_r(s,t,"TensorList shape mismatch: ");let a=dt(e);return new Nd(a,t,r)}function bG(e,t,n){return new Nd([],e,t,n)}function yG(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let s=Math.max(...t);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);let a=new Nd([],n,e.dtype,r),o=dt(e,0);return t.forEach((i,c)=>{a.setItem(i,o[c])}),a}function vG(e,t,n){let r=0,s=t.map(l=>(r+=l,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=sw(a,n),i=r===0?0:e.size/r,c=M(()=>{let l=[];e=U(e,[1,r,i]);for(let d=0;d<t.length;++d){let p=d===0?0:s[d-1],h=[0,p,0],f=[1,t[d],i];l[d]=U(We(e,h,f),o)}return e.dispose(),l}),u=new Nd([],n,e.dtype,t.length);for(let l=0;l<c.length;l++)u.setItem(l,c[l]);return u}var xG=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=I("thenBranch",e,t,n),s=I("elseBranch",e,t,n),a=I("cond",e,t,n),o=I("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=I("body",e,t,n),s=I("cond",e,t,n),a=I("args",e,t,n),o=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(l=>l.id),c=await o[0].data();o.forEach(l=>{!l.kept&&i.indexOf(l.id)===-1&&l.dispose()});let u=a;for(;c[0];){let l=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let d=u.map(h=>h.id);l.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()});let p=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);c=await p[0].data(),p.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()})}return u}case"LoopCond":{let r=I("pred",e,t,n);return[Rs(r)]}case"Switch":{let r=I("pred",e,t,n),s=I("data",e,t,n);return s.kept||(s=Rs(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{let r=e.inputNames.find(s=>kn(s,t,n)!==void 0);if(r){let s=kn(r,t,n);return[Rs(s)]}return}case"Enter":{let r=I("frameName",e,t,n),s=I("tensor",e,t,n);return n.enterFrame(r),[Rs(s)]}case"Exit":{let r=I("tensor",e,t,n);return n.exitFrame(),[Rs(r)]}case"NextIteration":{let r=I("tensor",e,t,n);return n.nextIteration(),[Rs(r)]}case"TensorArrayV3":{let r=I("size",e,t,n),s=I("dtype",e,t,n),a=I("elementShape",e,t,n),o=I("dynamicSize",e,t,n),i=I("clearAfterRead",e,t,n),c=I("identicalElementShapes",e,t,n),u=I("name",e,t,n),l=new mG(u,s,r,a,c,o,i);return n.addTensorArray(l),[l.idTensor,Ie(1)]}case"TensorArrayWriteV3":{let r=I("tensorArrayId",e,t,n),s=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(s,a),[o.idTensor]}case"TensorArrayReadV3":{let r=I("tensorArrayId",e,t,n),s=I("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{let r=I("tensorArrayId",e,t,n),s=I("indices",e,t,n),a=I("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{let r=I("tensorArrayId",e,t,n),s=I("indices",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(s,a),[o.idTensor]}case"TensorArrayConcatV3":{let r=I("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=I("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{let r=I("tensorArrayId",e,t,n),s=I("tensor",e,t,n),a=I("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(a,s),[o.idTensor]}case"TensorArraySizeV3":{let r=I("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[Ie(s.size(),"int32")]}case"TensorArrayCloseV3":{let r=I("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{let r=I("tensorListId",e,t,n),s=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(s,a),[o.idTensor]}case"TensorListGetItem":{let r=I("tensorListId",e,t,n),s=I("index",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let r=I("indices",e,t,n),s=I("tensor",e,t,n),a=I("elementShape",e,t,n),o=I("numElements",e,t,n),i=yG(s,r,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=I("elementShape",e,t,n),s=I("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=I(a,e,t,n),i=bG(r,s,o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let r=I("tensorListId",e,t,n),s=I("indices",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,o,a)]}case"TensorListStack":{let r=I("tensorListId",e,t,n),s=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=I("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,o)]}case"TensorListFromTensor":{let r=I("tensor",e,t,n),s=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=gG(r,s,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":{let r=I("tensorListId",e,t,n),s=n.getTensorList(r.id),a=I("dtype",e,t,n),o=I("elementShape",e,t,n);return[s.concat(a,o)]}case"TensorListPushBack":{let r=I("tensorListId",e,t,n),s=I("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{let r=I("tensorListId",e,t,n),s=I("elementShape",e,t,n),a=I("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{let r=I("tensor",e,t,n),s=I("elementShape",e,t,n),a=I("lengths",e,t,n),o=vG(r,a,s);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function AC(e,t,n){let[r,s]=I("fusedOps",e,t,n),a=r==="biasadd",o=!a,i=s==="prelu",c=r==="fusedbatchnorm",u=I("numArgs",e,t,n);if(a){if(i&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=I("strides",e,t,n),d=Yf(e,t,n),p=I("dataFormat",e,t,n).toUpperCase(),h=I("dilations",e,t,n),[f,m]=I("args",e,t,n);o&&(m=f,f=void 0);let g=I("leakyreluAlpha",e,t,n);return{stride:l,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:g}}var wG=(e,t,n)=>{switch(e.op){case"Conv1D":{let r=I("stride",e,t,n),s=I("pad",e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilation",e,t,n);return[Ph(I("x",e,t,n),I("filter",e,t,n),r,s,a,o)]}case"Conv2D":{let r=I("strides",e,t,n),s=Yf(e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilations",e,t,n);return[Ft(I("x",e,t,n),I("filter",e,t,n),[r[1],r[2]],s,a,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:c,activationFunc:u,leakyreluAlpha:l}=AC(e,t,n);return[pa.conv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:u,preluActivationWeights:c,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:c,activationFunc:u,leakyreluAlpha:l}=AC(e,t,n);return[pa.depthwiseConv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:u,preluActivationWeights:c,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=I("outputShape",e,t,n),s=I("strides",e,t,n),a=Yf(e,t,n);return[Oh(I("x",e,t,n),I("filter",e,t,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=I("strides",e,t,n),s=Yf(e,t,n),a=I("dilations",e,t,n),o=I("dataFormat",e,t,n).toUpperCase();return[ua(I("input",e,t,n),I("filter",e,t,n),[r[1],r[2]],s,o,[a[1],a[2]])]}case"Conv3D":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilations",e,t,n);return[Ey(I("x",e,t,n),I("filter",e,t,n),[r[1],r[2],r[3]],s,a,[o[1],o[2],o[3]])]}case"AvgPool":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[ur(I("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[Rt(I("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("kernelSize",e,t,n),o=I("includeBatchInIndex",e,t,n),{result:i,indexes:c}=Lk(I("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s,o);return[i,c]}case"AvgPool3D":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[Cy(I("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[Wy(I("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{let r=I("strides",e,t,n),s=I("pad",e,t,n),a=I("dilations",e,t,n),o=r[1],i=r[2],c=a[1],u=a[2];return[Dy(I("x",e,t,n),I("filter",e,t,n),[o,i],s,[c,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},kG=(e,t,n)=>{switch(e.op){case"Fill":{let r=I("shape",e,t,n),s=I("dtype",e,t,n),a=I("value",e,t,n);return[xn(r,a,s)]}case"LinSpace":{let r=I("start",e,t,n),s=I("stop",e,t,n),a=I("num",e,t,n);return[Dk(r,s,a)]}case"Multinomial":{let r=I("logits",e,t,n),s=I("numSamples",e,t,n),a=I("seed",e,t,n);return[Bk(r,s,a)]}case"OneHot":{let r=I("indices",e,t,n),s=I("depth",e,t,n),a=I("onValue",e,t,n),o=I("offValue",e,t,n);return[tu(r,s,a,o)]}case"Ones":return[Xn(I("shape",e,t,n),I("dtype",e,t,n))];case"OnesLike":return[Yn(I("x",e,t,n))];case"RandomUniform":return[cu(I("shape",e,t,n),I("minval",e,t,n),I("maxval",e,t,n),I("dtype",e,t,n))];case"Range":{let r=I("start",e,t,n),s=I("stop",e,t,n),a=I("step",e,t,n);return[uu(r,s,a,I("dtype",e,t,n))]}case"TruncatedNormal":{let r=I("shape",e,t,n),s=I("mean",e,t,n),a=I("stdDev",e,t,n),o=I("seed",e,t,n);return[tf(r,s,a,I("dtype",e,t,n),o)]}case"Zeros":return[It(I("shape",e,t,n),I("dtype",e,t,n))];case"ZerosLike":return[Ge(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function aw(e,t,n){let r=I("boxes",e,t,n),s=I("scores",e,t,n),a=I("maxOutputSize",e,t,n),o=I("iouThreshold",e,t,n),i=I("scoreThreshold",e,t,n),c=I("softNmsSigma",e,t,n);return{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:c}}var IG=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:c}=aw(e,t,n),u=await Jn.nonMaxSuppressionWithScoreAsync(r,s,a,o,i,c);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=aw(e,t,n),c=I("padToMaxOutputSize",e,t,n),u=await Jn.nonMaxSuppressionPaddedAsync(r,s,a,o,i,c);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=aw(e,t,n);return[await Jn.nonMaxSuppressionAsync(r,s,a,o,i)]}case"Where":{let r=ce(I("condition",e,t,n),"bool"),s=[await Qy(r)];return r.dispose(),s}case"ListDiff":return Vk(I("x",e,t,n),I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},SG=(e,t,n)=>{switch(e.op){case"TopKV2":{let r=I("x",e,t,n),s=I("k",e,t,n),a=I("sorted",e,t,n),o=Zy(r,s,a);return[o.values,o.indices]}case"Unique":{let r=I("x",e,t,n),s=nf(r);return[s.values,s.indices]}case"UniqueV2":{let r=I("x",e,t,n),s=I("axis",e,t,n),a=nf(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},CG=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=I("default",e,t,n);return[kn(e.name,t,n)||r];case"Placeholder":return[kn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=I("x",e,t,n);return[Rs(u)]}case"IdentityN":return I("x",e,t,n).map(u=>Rs(u));case"Snapshot":let s=I("x",e,t,n);return[Rs(s)];case"Shape":return[He(I("x",e,t,n).shape,"int32")];case"ShapeN":return I("x",e,t,n).map(u=>He(u.shape));case"Size":return[Ie(I("x",e,t,n).size,"int32")];case"Rank":return[Ie(I("x",e,t,n).rank,"int32")];case"NoOp":return[Ie(1)];case"Print":let a=I("x",e,t,n),o=I("data",e,t,n),i=I("message",e,t,n),c=I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let u=0;u<o.length;u++)console.log(Array.prototype.slice.call(o[u].dataSync()).slice(0,c));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},TG=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ie(0),this.tensorMap=new Map,Yt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ie(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),M(()=>{let r=dt(t),s=n.length,a=r.length;w.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let o=0;o<s;o++){let i=n[o],c=r[o];Yt(c),this.tensorMap.set(i,c)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return M(()=>{let r=[];for(let s=0;s<n.length;s++){let a=n[s],o=this.findWithDefault(a,t);r.push(o)}return Pt(r)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},NG=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let s=I("keyDType",e,t,n),a=I("valueDType",e,t,n),o=new TG(s,a);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let s=I("tableHandle",e,t,n,r),a=I("keys",e,t,n),o=I("values",e,t,n);return[await r.getHashTableById(s.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let s=I("tableHandle",e,t,n,r),a=I("keys",e,t,n),o=I("defaultValue",e,t,n);return[await r.getHashTableById(s.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let s=I("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},_G=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let r=I("images",e,t,n),s=I("size",e,t,n),a=I("alignCorners",e,t,n),o=I("halfPixelCenters",e,t,n);return[Jn.resizeBilinear(r,[s[0],s[1]],a,o)]}case"ResizeNearestNeighbor":{let r=I("images",e,t,n),s=I("size",e,t,n),a=I("alignCorners",e,t,n),o=I("halfPixelCenters",e,t,n);return[Jn.resizeNearestNeighbor(r,[s[0],s[1]],a,o)]}case"CropAndResize":{let r=I("image",e,t,n),s=I("boxes",e,t,n),a=I("boxInd",e,t,n),o=I("cropSize",e,t,n),i=I("method",e,t,n),c=I("extrapolationValue",e,t,n);return[Jn.cropAndResize(r,s,a,o,i,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},EG=(e,t,n)=>{switch(e.op){case"Equal":return[qn(I("a",e,t,n),I("b",e,t,n))];case"NotEqual":return[Zo(I("a",e,t,n),I("b",e,t,n))];case"Greater":return[Rn(I("a",e,t,n),I("b",e,t,n))];case"GreaterEqual":return[la(I("a",e,t,n),I("b",e,t,n))];case"Less":return[zh(I("a",e,t,n),I("b",e,t,n))];case"LessEqual":return[da(I("a",e,t,n),I("b",e,t,n))];case"LogicalAnd":return[Sr(I("a",e,t,n),I("b",e,t,n))];case"LogicalNot":return[Jl(I("a",e,t,n))];case"LogicalOr":return[Uh(I("a",e,t,n),I("b",e,t,n))];case"Select":case"SelectV2":return[pn(I("condition",e,t,n),I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},AG=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[De(I("a",e,t,n),I("b",e,t,n),I("transposeA",e,t,n),I("transposeB",e,t,n))];case"Einsum":return[_k(I("equation",e,t,n),...I("tensors",e,t,n))];case"Transpose":return[Pe(I("x",e,t,n),I("perm",e,t,n))];case"_FusedMatMul":let[r,s]=I("fusedOps",e,t,n),a=r==="biasadd",o=s==="prelu",i=I("numArgs",e,t,n),c=I("leakyreluAlpha",e,t,n);if(a){if(o&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,l]=I("args",e,t,n);return[pa.matMul({a:I("a",e,t,n),b:I("b",e,t,n),transposeA:I("transposeA",e,t,n),transposeB:I("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:l,leakyreluAlpha:c})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},DG=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Ts(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"FusedBatchNormV3":return[Ts(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"LRN":return[My(I("x",e,t,n),I("radius",e,t,n),I("bias",e,t,n),I("alpha",e,t,n),I("beta",e,t,n))];case"Softmax":return[Rr(I("x",e,t,n))];case"LogSoftmax":return[Vh(I("x",e,t,n))];case"SparseToDense":return[ev(I("sparseIndices",e,t,n),I("outputShape",e,t,n),I("sparseValues",e,t,n),I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},$G=(e,t,n)=>{switch(e.op){case"Max":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Ir(I("x",e,t,n),o,i)]}case"Mean":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[_t(I("x",e,t,n),o,i)]}case"Min":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Ql(I("x",e,t,n),o,i)]}case"Sum":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[ve(I("x",e,t,n),o,i)]}case"All":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Fh(I("x",e,t,n),o,i)]}case"Any":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[jl(I("x",e,t,n),o,i)]}case"ArgMax":{let o=I("axis",e,t,n);return[Ho(I("x",e,t,n),o)]}case"ArgMin":{let o=I("axis",e,t,n);return[by(I("x",e,t,n),o)]}case"Prod":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Hh(I("x",e,t,n),o,i)]}case"Cumsum":{let o=I("axis",e,t,n),i=I("exclusive",e,t,n),c=I("reverse",e,t,n);return[Lh(I("x",e,t,n),o,i,c)]}case"Bincount":let r=I("x",e,t,n),s=I("weights",e,t,n),a=I("size",e,t,n);return[Ty(r,s,a)];case"DenseBincount":{let o=I("x",e,t,n),i=I("weights",e,t,n),c=I("size",e,t,n),u=I("binaryOutput",e,t,n);return[Tk(o,i,c,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},FG=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=I("n",e,t,n),s=I("axis",e,t,n),a=I("tensors",e,t,n);return a=a.slice(0,r),[Ze(a,s)]}case"Gather":{let r=I("x",e,t,n),s=I("indices",e,t,n);return[Ko(r,ce(s,"int32"),0)]}case"GatherV2":{let r=I("axis",e,t,n),s=I("batchDims",e,t,n),a=I("x",e,t,n),o=I("indices",e,t,n);return[Ko(a,ce(o,"int32"),r,s)]}case"Reverse":{let r=I("dims",e,t,n),s=[];for(let o=0;o<r.length;o++)r[o]&&s.push(o);let a=I("x",e,t,n);return[Zn(a,s)]}case"ReverseV2":{let r=I("axis",e,t,n),s=I("x",e,t,n);return[Zn(s,r)]}case"Slice":{let r=I("begin",e,t,n),s=I("size",e,t,n);return[We(I("x",e,t,n),r,s)]}case"StridedSlice":{let r=I("begin",e,t,n),s=I("end",e,t,n),a=I("strides",e,t,n),o=I("beginMask",e,t,n),i=I("endMask",e,t,n),c=I("ellipsisMask",e,t,n),u=I("newAxisMask",e,t,n),l=I("shrinkAxisMask",e,t,n),d=I("x",e,t,n);return[Xy(d,r,s,a,o,i,c,u,l)]}case"Pack":return M(()=>{let r=I("axis",e,t,n),s=I("tensors",e,t,n),a=s[0].shape,o=ss(s[0]).shape,i=s.map(c=>{let u=w.arraysEqual(c.shape,a);if(!u&&!w.arraysEqual(ss(c).shape,o))throw new Error("the input tensors shape does not match");return u?c:U(c,a)});return[Pt(i,r)]});case"Unpack":{let r=I("axis",e,t,n),s=I("tensor",e,t,n);return dt(s,r)}case"Tile":{let r=I("reps",e,t,n);return[Fn(I("x",e,t,n),r)]}case"Split":case"SplitV":{let r=I("axis",e,t,n),s=I("numOrSizeSplits",e,t,n),a=I("x",e,t,n);return Pn(a,s,r)}case"ScatterNd":{let r=I("indices",e,t,n),s=I("values",e,t,n),a=I("shape",e,t,n);return[jk(r,s,a)]}case"GatherNd":{let r=I("x",e,t,n),s=I("indices",e,t,n);return[qk(r,s)]}case"SparseToDense":{let r=I("sparseIndices",e,t,n),s=I("outputShape",e,t,n),a=I("sparseValues",e,t,n),o=I("defaultValue",e,t,n);return[ev(r,a,s,a.dtype===o.dtype?o:ce(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},RG=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:s,emptyRowIndicator:a,reverseIndexMap:o}=od.sparseFillEmptyRows(I("indices",e,t,n),I("values",e,t,n),I("denseShape",e,t,n),I("defaultValue",e,t,n));return[r,s,a,o]}case"SparseReshape":{let{outputIndices:r,outputShape:s}=od.sparseReshape(I("inputIndices",e,t,n),I("inputShape",e,t,n),I("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[od.sparseSegmentMean(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];case"SparseSegmentSum":return[od.sparseSegmentSum(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},PG=(e,t,n)=>{switch(e.op){case"FFT":return[sd(I("x",e,t,n))];case"IFFT":return[du(I("x",e,t,n))];case"RFFT":return[ad(I("x",e,t,n))];case"IRFFT":return[Qh(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},OG=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:s}=uf.stringNGrams(I("data",e,t,n),I("dataSplits",e,t,n),I("separator",e,t,n),I("nGramWidths",e,t,n),I("leftPad",e,t,n),I("rightPad",e,t,n),I("padWidth",e,t,n),I("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{let{indices:r,values:s,shape:a}=uf.stringSplit(I("input",e,t,n),I("delimiter",e,t,n),I("skipEmpty",e,t,n));return[r,s,a]}case"StringToHashBucketFast":return[uf.stringToHashBucketFast(I("input",e,t,n),I("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},MG=(e,t,n)=>{switch(e.op){case"Cast":return[ce(I("x",e,t,n),I("dtype",e,t,n))];case"ExpandDims":{let r=I("axis",e,t,n);return[fn(I("x",e,t,n),r)]}case"Squeeze":{let r=I("axis",e,t,n);return[ss(I("x",e,t,n),r)]}case"Reshape":return[U(I("x",e,t,n),I("shape",e,t,n))];case"MirrorPad":return[Vy(I("x",e,t,n),I("padding",e,t,n),I("mode",e,t,n))];case"PadV2":case"Pad":return[dr(I("x",e,t,n),I("padding",e,t,n),I("constantValue",e,t,n))];case"SpaceToBatchND":{let r=I("blockShape",e,t,n),s=I("paddings",e,t,n);return[ed(I("x",e,t,n),r,s)]}case"BatchToSpaceND":{let r=I("blockShape",e,t,n),s=I("crops",e,t,n);return[Kl(I("x",e,t,n),r,s)]}case"DepthToSpace":{let r=I("blockSize",e,t,n),s=I("dataFormat",e,t,n).toUpperCase();return[Ay(I("x",e,t,n),r,s)]}case"BroadcastTo":return[su(I("x",e,t,n),I("shape",e,t,n))];case"BroadcastArgs":return[vk(I("s0",e,t,n),I("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function DC(e,t,n,r){let s=((a,o,i)=>{switch(a.category){case"arithmetic":return M(()=>hG(a,o,i));case"basic_math":return M(()=>fG(a,o,i));case"control":return xG(a,o,i);case"convolution":return M(()=>wG(a,o,i));case"creation":return M(()=>kG(a,o,i));case"dynamic":return IG(a,o,i);case"evaluation":return M(()=>SG(a,o,i));case"image":return M(()=>_G(a,o,i));case"graph":return M(()=>CG(a,o,i));case"logical":return M(()=>EG(a,o,i));case"matrices":return M(()=>AG(a,o,i));case"normalization":return M(()=>DG(a,o,i));case"reduction":return M(()=>$G(a,o,i));case"slice_join":return M(()=>FG(a,o,i));case"sparse":return M(()=>RG(a,o,i));case"spectral":return M(()=>PG(a,o,i));case"string":return M(()=>OG(a,o,i));case"transformation":return M(()=>MG(a,o,i));case"hash_table":return NG(a,o,i,r);case"custom":let c=aC(a.op);if(c&&c.customExecutor)return c.customExecutor(new pG(a,o,i));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(s)?s.then(a=>[].concat(a)):[].concat(s)}var $C=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function FC(e,t,n,r){let s=new Set,a=[],o=null,i=null,c=new Set,u=Object.keys(e).map(p=>Qn(p)[0]),l=[];r!=null&&(l=r.map(p=>Qn(p.name)[0]));let d=[...t];for(;d.length>0;){let p=d.pop();if((RC(p)||VG(p)||UG(p))&&o==null&&(o=p,i=o.children.map(h=>h.name).filter(h=>s.has(h))),s.add(p.name),n[p.name]==null&&u.indexOf(p.name)===-1&&l.indexOf(p.name)===-1){if(p.inputs.length===0){a.push(p.name);continue}p.inputs.forEach(h=>{c.has(h.name)||(c.add(h.name),d.push(h))})}}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:o,syncInputs:i}}function LG(e,t,n){let{usedNodes:r,inputs:s}=n,a=[],o=Object.keys(s).map(l=>Qn(l)[0]).map(l=>e.nodes[l]),i=e.initNodes;o.forEach(l=>{r.has(l.name)&&a.push(l)}),e.weights.forEach(l=>{r.has(l.name)&&a.push(l)}),i!=null&&i.forEach(l=>{r.has(l.name)&&a.push(l)});let c=new Set,u=[];for(;a.length>0;){let l=a.pop();c.add(l.name),t[l.name]||u.push(l),l.children.forEach(d=>{!c.has(d.name)&&r.has(d.name)&&d.inputs.every(p=>c.has(p.name))&&a.push(d)})}return u}var BG=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],zG=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],WG=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function RC(e){return BG.indexOf(e.op)>=0}function VG(e){return zG.indexOf(e.op)>=0}function UG(e){return WG.indexOf(e.op)>=0}var ow=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new ow(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),r=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=FC(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){let o=t.map(c=>c.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${r}]`)}return LG(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map(l=>this.graph.nodes[Qn(l)[0]]),s=t.map(l=>Qn(l)[0]),a=s.map(l=>this.graph.nodes[l]);a.length===0&&(a=this._outputs);let o=this.getCompilationKey(r,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let c={},u={};return M(()=>{let l=new $C(this.weightMap,c,u,this.functionExecutorMap),d=Object.assign({},this.weightMap);Object.keys(e).forEach(f=>{let[m,g]=Qn(f),b=[];b[g]=e[f],d[m]=b});let p=this.getFrozenTensorIds(d),h={};for(let f=0;f<i.length;f++){let m=i[f];if(!d[m.name]){let g=DC(m,d,l,this._resourceManager);if(w.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);d[m.name]=g,this.checkTensorForDisposal(m.name,m,d,l,p,s,h)}}return this.parent==null&&l.dispose(p),t.map(f=>kn(f,d,l))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let c=HU(i.name,n,r);c!=null&&c.forEach(u=>{if(u&&!u.kept&&!s.has(u.id)){let l=o[u.id];l===1?(u.dispose(),delete o[u.id]):l!=null&&o[u.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let a=new $C(this.weightMap,r,s,this.functionExecutorMap),o=await this.executeWithControlFlow(e,a,t,n),i=t.map(d=>kn(d,o,a)),c=i.map(d=>d.id),u=Object.keys(e).map(d=>e[d].id),l=new Set([...c,...u,...this.weightIds]);return Object.keys(o).forEach(d=>{o[d].forEach(h=>{h&&!h.kept&&!h.isDisposed&&!l.has(h.id)&&h.dispose()})}),this.parent==null&&a.dispose(l),i}async executeFunctionAsync(e,t,n){let r=e.reduce((s,a,o)=>(s[this.inputs[o].name]=a,s),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let s=Object.keys(e),a=s.map(y=>this.graph.nodes[Qn(y)[0]]),o=n.map(y=>Qn(y)[0]),i=o.map(y=>this.graph.nodes[y]);i.length===0&&(i=this._outputs);let{usedNodes:c,missingInputs:u,dynamicNode:l,syncInputs:d}=FC(e,i,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(y=>({node:y,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(y=>{let[v,x]=Qn(y),k=[];k[x]=e[y],h[v]=k});let f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){let y=this.processStack(a,p,t,h,g,m,o,f,c);await Promise.all(y)}l==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=i.filter(y=>!RC(y)&&!kn(y.name,h,t)).map(y=>y.name);if(b.length>0){let y="";throw l!=null&&(y=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${u}]. ${y}`)}return h}processStack(e,t,n,r,s,a,o,i,c){let u=[];for(;t.length>0;){let l=t.pop();n.currentContext=l.contexts;let d="";if(l.node.op==="Enter"&&I("isConstant",l.node,r,n)&&([d]=Fs(l.node.name,n)),r[l.node.name]==null){let p=DC(l.node,r,n,this._resourceManager);d||([d]=Fs(l.node.name,n));let h=n.currentContext;w.isPromise(p)?u.push(p.then(f=>(r[d]=f,n.currentContext=h,this.checkTensorForDisposal(d,l.node,r,n,a,o,i),this.processChildNodes(l.node,t,n,r,s,c),f))):(r[d]=p,this.checkTensorForDisposal(d,l.node,r,n,a,o,i),this.processChildNodes(l.node,t,n,r,s,c))}else this.processChildNodes(l.node,t,n,r,s,c)}return u}processChildNodes(e,t,n,r,s,a){e.children.forEach(o=>{let[i]=Fs(o.name,n);s[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(c=>!!kn(c,r,n))&&(s[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(c=>!!kn(c,r,n))&&(s[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[r]=Qn(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,c)=>a[c]===-1||a[c]===i);w.assert(o,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&w.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let r=this._signature.inputs[n];t[r.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[r]=Qn(n);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=Qn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},GG=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},HG="?tfjs-format=file",jG="model.json",PC=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new GG}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Xt.browserHTTPRequest(e,this.loadOptions);else{let t=Xt.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Xt.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=Xt.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new ow(CC.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=CC.Instance.transformGraph(e.modelInitializer);this.initializer=new ow(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Xt.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ee)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function qG(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${jG}${HG}`);let n=new PC(e,t);return await n.load(),n}var KG="3.9.0",OC={};Re(OC,{CSVDataset:()=>KC,Dataset:()=>ku,FileDataSource:()=>tT,TextLineDataset:()=>HC,URLDataSource:()=>nT,array:()=>bH,csv:()=>_H,func:()=>EH,generator:()=>AH,microphone:()=>$H,version_data:()=>FH,webcam:()=>DH,zip:()=>yH});var XG=Ra(Z0()),YG=Ra(Z0());function ZG(e,t){return Zf(e,t)}function Zf(e,t,n=new Map,r=new Set){if(e==null)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let s=t(e);if(s.recurse&&s.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse)if(wu(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let o in e){let i=e[o],c=Zf(i,t,n,r);a[o]=c}return r.delete(e),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,s.value),s.value}function JG(e,t=LC){return MC(e,t)}function MC(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let s=t(e);if(s.recurse&&s.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse)if(wu(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let o in r){let i=e.map(u=>u[o]),c=MC(i,t,n);a[o]=c}return n.delete(r),a}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return s.value}function LC(e){return e===null?null:wu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function BC(e,t){let n=new Map;Zf(e,t,n);for(let s of Array.from(n.keys())){let a=n.get(s);if(w.isPromise(a)){let o=await a;n.set(s,o)}}return Zf(e,t,n)}function wu(e){let t=!1;if(Q().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=J0();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof Ee)&&!(e instanceof Promise)&&!t)}function QG(e){return e==null||eH(e)||Array.isArray(e)||typeof e=="object"&&e instanceof Ee||w.isTypedArray(e)}function eH(e){return e===null||typeof e!="object"&&typeof e!="function"}function tH(e){return ZG(e,nH)}function nH(e){return e instanceof Ee?{value:e.clone(),recurse:!1}:wu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var zC=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},iw=class extends zC{constructor(){super(iw.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};iw.INITIAL_CAPACITY=32;function WC(e){return new aH(e)}function cw(e){return new oH(e)}function rH(e,t){return new UC(e,t)}function sH(e,t=xa.FAIL){return new mH(e,t)}var Qt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new hH(this,e)}filter(e){return new dH(this,e)}map(e){return new pH(this,e)}mapAsync(e){return new VC(this,e)}serialMapAsync(e){return new VC(this,e).serial()}flatmap(e){return new fH(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new lH(this,e,t)}columnMajorBatch(e,t=!0,n=LC){return this.rowMajorBatch(e,t).map(s=>JG(s,n))}concatenate(e,t){return new UC(WC([this,e]),t)}take(e){return e<0||e==null?this:new uH(this,e)}skip(e){return e<0||e==null?this:new cH(this,e)}prefetch(e){return new GC(this,e)}shuffle(e,t){return new gH(this,e,t)}serial(){return new iH(this)}},aH=class extends Qt{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:tH(e),done:!1}}},oH=class extends Qt{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},iH=class extends Qt{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},cH=class extends Qt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;$e(e.value)}return this.upstream.next()}},uH=class extends Qt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},lH=class extends Qt{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},dH=class extends Qt{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;$e(e.value)}}},pH=class extends Qt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=$r.getTensorsInContainer(e.value),n=this.transform(e.value),r=$r.getTensorsInContainer(n);for(let s of t)$r.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}},hH=class extends Qt{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},VC=class extends Qt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=$r.getTensorsInContainer(e.value),n=await this.transform(e.value),r=$r.getTensorsInContainer(n);for(let s of t)$r.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}},uw=class extends Qt{constructor(){super();this.outputQueue=new iw,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},fH=class extends uw{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=$r.getTensorsInContainer(e.value),n=this.transform(e.value),r=$r.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)$r.isTensorInList(s,r)||s.dispose();return!0}},UC=class extends Qt{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},xa;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(xa||(xa={}));var mH=class extends Qt{constructor(e,t=xa.FAIL){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function r(a){return a instanceof Qt?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let s=await BC(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case xa.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case xa.SHORTEST:return{value:null,done:!0};case xa.LONGEST:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},GC=class extends Qt{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new zC(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},gH=class extends GC{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=YG.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},ku=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),er(async()=>(await n.iterator()).columnMajorBatch(e,t,vH),r)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,er(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,er(async()=>(await t.iterator()).filter(r=>M(()=>e(r))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return er(async()=>(await t.iterator()).map(n=>M(()=>e(n))),this.size)}mapAsync(e){let t=this;return er(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return er(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,er(async()=>{let r=cw(async()=>({value:await t.iterator(),done:!1}));return rH(r.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,er(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,s=XG.alea(t||w.now().toString());return er(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await r.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,er(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};ku.MAX_BUFFER_SIZE=1e4;function er(e,t=null){return new class extends ku{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function bH(e){return er(async()=>WC(e),e.length)}function yH(e){if(!wu(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return er(async()=>{let n=await BC(e,r=>{if(r instanceof ku)return{value:r.iterator(),recurse:!1};if(wu(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return sH(n,xa.SHORTEST)},t)}function vH(e){if(e===null)return null;let t=e[0];return QG(t)?{value:xH(e),recurse:!1}:{value:null,recurse:!0}}function xH(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ee?Pt(e):jn(e)}var HC=class extends ku{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(r=>(r.endsWith("\r")&&(r=r.slice(0,-1)),r))}},Jf='"',_d=Symbol("out"),jC=Symbol("field"),Qf=Symbol("quote"),lw=Symbol("quoteafterquote"),qC=Symbol("quoteinquote"),KC=class extends ku{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new HC(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((r,s)=>(r[s]=r[s]+1||1,r),{}),n=Object.keys(t).filter(r=>t[r]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[s],c=null;if(i==="")if(o&&o.default!==void 0)c=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);c=void 0}else{let u=Number(i);if(isNaN(u))o&&o.dtype==="bool"?c=this.getBoolean(i):c=i;else if(!o||!o.dtype)c=u;else switch(o.dtype){case"float32":c=u;break;case"int32":c=Math.floor(u);break;case"bool":c=this.getBoolean(i);break;default:c=u}}o&&o.isLabel?r[a]=c:n[a]=c}}return Object.keys(r).length===0?n:{xs:n,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],r=0,s=e.length,a=_d;for(let o=0;o<s;o++)switch(a){case _d:switch(e.charAt(o)){case Jf:r=o+1,a=Qf;break;case this.delimiter:if(r=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=_d;break;default:a=jC,r=o;break}break;case jC:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(r,o)),a=_d,r=o+1;break;default:}break;case Qf:switch(e.charAt(o)){case Jf:a=lw;break;default:}break;case lw:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(r,o-1)),a=_d,r=o+1;break;case Jf:a=Qf;break;default:a=qC;break}break;case qC:switch(e.charAt(o)){case Jf:a=Qf;break;default:}break;default:}if(a===lw?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},XC=class extends Qt{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Q().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new XC(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let r=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(r,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let r=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(r,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(r=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((r,s)=>n.set(r,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(w.sizeFromShape(t));return n.set(e,n.length-e.length),jn(n,t)}},YC=class extends Qt{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=He([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,r=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,a=(1-r)/2,o=s+n,i=r+a;this.cropBox=Pr([a,s,i,o],[1,4])}else this.cropBox=Pr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Q().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new YC(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Uo.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return M(()=>{let t=fn(ce(e,"float32"),0),n;n=Jn.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=n.shape;return U(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},ZC=class{},JC=class extends Qt{split(e){return new wH(this,e)}},wH=class extends JC{constructor(e,t){super();this.upstream=e,this.impl=new kH(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},kH=class extends uw{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},IH=class extends Qt{decodeUTF8(){return new SH(this)}},SH=class extends JC{constructor(e){super();this.upstream=e,this.impl=new CH(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},CH=class extends uw{constructor(e){super();if(this.upstream=e,Q().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=J0();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return Q().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},QC=class extends IH{constructor(e,t={}){super();this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(Q().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let r=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,r)));else{let s=new FileReader;s.onload=o=>{let i=s.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},s.onabort=o=>n(new Error("Aborted")),s.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,r);s.readAsArrayBuffer(a)}this.offset=r}),done:!1}}};async function TH(e,t={}){let n,r;typeof e=="string"?n=e:(n=e.url,r=NH(e));let s=await w.fetch(n,r);if(s.ok){let a=new Uint8Array(await s.arrayBuffer());return new QC(a,t)}else throw new Error(s.statusText)}var NH=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function eT(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var tT=class extends ZC{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(eT(this.input)&&Q().get("IS_NODE")){let e=ji("fs");this.input=e.readFileSync(this.input.substr(7))}return new QC(this.input,this.options)}},nT=class extends ZC{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return eT(this.url)?new tT(this.url,this.fileOptions).iterator():TH(this.url,this.fileOptions)}};function _H(e,t={}){return new KC(new nT(e),t)}function EH(e){let t=cw(e);return er(async()=>t)}function AH(e){return er(async()=>{let t=await e();return cw(()=>t.next())})}async function DH(e,t){return YC.create(e,t)}async function $H(e){return XC.create(e)}var FH="3.9.0";function ke(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var RH=as.whereImpl,dw=class extends bl{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new Dp(this,Cs())}nextDataId(){return dw.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Q().get("IS_NODE")&&_.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let s=n.map(a=>w.encodeString(a));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let r=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return _.mergeRealAndImagArrays(r,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(r=>w.decodeString(r))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,n)}makeOutput(e,t,n){let r=this.write(e,t,n);return Cs().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ke([e],"where");let t=this.readSync(e.dataId);return RH(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};dw.nextDataId=0;var rT={};Re(rT,{addImpl:()=>aT,bincountImpl:()=>hw,bincountReduceImpl:()=>oT,ceilImpl:()=>iT,concatImpl:()=>fw,equalImpl:()=>cT,expImpl:()=>lT,expm1Impl:()=>pT,floorImpl:()=>hT,gatherNdImpl:()=>fT,gatherV2Impl:()=>mT,greaterEqualImpl:()=>bT,greaterImpl:()=>gT,lessEqualImpl:()=>vT,lessImpl:()=>yT,linSpaceImpl:()=>xT,logImpl:()=>wT,maxImpl:()=>kT,maximumImpl:()=>IT,minimumImpl:()=>ST,multiplyImpl:()=>mw,negImpl:()=>CT,notEqualImpl:()=>TT,prodImpl:()=>NT,rangeImpl:()=>bw,rsqrtImpl:()=>_T,sigmoidImpl:()=>k6,simpleAbsImpl:()=>sT,sliceImpl:()=>nm,sparseFillEmptyRowsImpl:()=>AT,sparseReshapeImpl:()=>DT,sparseSegmentReductionImpl:()=>yw,sqrtImpl:()=>C6,squaredDifferenceImpl:()=>$T,stridedSliceImpl:()=>FT,stringNGramsImpl:()=>RT,stringSplitImpl:()=>PT,stringToHashBucketFastImpl:()=>OT,subImpl:()=>MT,tileImpl:()=>LT,topKImpl:()=>zT,transposeImpl:()=>gw,uniqueImpl:()=>WT});function sT(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var PH=e=>{let{x:t}=e.inputs,n=e.backend;ke(t,"abs");let r=new Float32Array(w.sizeFromShape(t.shape)),s=n.data.get(t.dataId).values;return r=sT(s),n.makeOutput(r,t.shape,"float32")},OH={kernelName:Xi,backendName:"cpu",kernelFunc:PH};function Bt(e){return(t,n,r,s,a)=>{let o=_.assertAndGetBroadcastShape(t,n),i=o.length,c=w.computeStrides(o),u=w.sizeFromShape(o),l=w.getTypedArrayFromDType(a,u),d=t.length,p=n.length,h=w.computeStrides(t),f=w.computeStrides(n),m=_.getBroadcastDims(t,o),g=_.getBroadcastDims(n,o);if(m.length+g.length===0)for(let b=0;b<l.length;++b)l[b]=e(r[b%r.length],s[b%s.length]);else for(let b=0;b<l.length;++b){let y=w.indexToLoc(b,i,c),v=y.slice(-d);m.forEach(N=>v[N]=0);let x=w.locToIndex(v,d,h),k=y.slice(-p);g.forEach(N=>k[N]=0);let C=w.locToIndex(k,p,f);l[b]=e(r[x],s[C])}return[l,o]}}function tr(e){let{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64"),c=n.data.get(i.dataId);return c.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",o)},i}var MH={kernelName:Bp,backendName:"cpu",kernelFunc:tr};function em(e,t,n="float32"){if(n==="complex64"){let s=em(e,t,"float32"),a=em(e,t,"float32");return tr({inputs:{real:s,imag:a},backend:e})}let r=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function ds(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var LH={kernelName:ro,backendName:"cpu",kernelFunc:ds};function li(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}var BH={kernelName:oh,backendName:"cpu",kernelFunc:li};function wa(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if(a==="complex64"){if(s.dtype==="complex64")return ds({inputs:{x:s},backend:n});let o=em(n,s.shape,s.dtype),i=wa({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),c=tr({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}if(s.dtype==="complex64"){let o=li({inputs:{input:s},backend:n}),i=wa({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!w.hasEncodingLoss(s.dtype,a)){let o=ds({inputs:{x:s},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(s.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(s.shape,"int32",i)}if(a==="bool"){let o=n.data.get(s.dataId).values,i=w.toTypedArray([0],s.dtype),[c,u]=Bt((l,d)=>l!==d?1:0)(s.shape,[],o,i,"bool");return n.makeTensorInfo(u,"bool",c)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}var zH={kernelName:Va,backendName:"cpu",kernelFunc:wa};function en(e,t,n,r){return n==null?({inputs:s,backend:a})=>{let{a:o,b:i}=s,c=a;ke([o,i],e);let u=c.data.get(o.dataId).values,l=c.data.get(i.dataId).values,d=o.dtype==="string"?_.fromUint8ToStringArray(u):u,p=o.dtype==="string"?_.fromUint8ToStringArray(l):l,h=r||o.dtype,[f,m]=t(o.shape,i.shape,d,p,h);return c.makeTensorInfo(m,h,f)}:({inputs:s,backend:a})=>{let{a:o,b:i}=s,c=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let u=wa({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),l=c.data.get(u.dataId),d=l.complexTensorInfos.real,p=l.complexTensorInfos.imag,h=c.data.get(d.dataId).values,f=c.data.get(p.dataId).values,m=wa({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),g=c.data.get(m.dataId),b=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,v=c.data.get(b.dataId).values,x=c.data.get(y.dataId).values,[k,C,N]=n(o.shape,i.shape,h,f,v,x),$=c.makeTensorInfo(N,"float32",k),R=c.makeTensorInfo(N,"float32",C),O=tr({inputs:{real:$,imag:R},backend:c});return c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo($),c.disposeIntermediateTensorInfo(R),O}else{let u=c.data.get(o.dataId).values,l=c.data.get(i.dataId).values,d=r||o.dtype,[p,h]=t(o.shape,i.shape,u,l,d);return c.makeTensorInfo(h,d,p)}}}function pw(e){return(t,n,r,s,a,o)=>{let i=_.assertAndGetBroadcastShape(t,n),c=w.sizeFromShape(i),u=i.length,l=w.computeStrides(i),d=w.getTypedArrayFromDType("float32",c),p=w.getTypedArrayFromDType("float32",c),h=_.getBroadcastDims(t,i),f=_.getBroadcastDims(n,i),m=_.mergeRealAndImagArrays(r,s),g=_.mergeRealAndImagArrays(a,o),b=t.length,y=w.computeStrides(t),v=n.length,x=w.computeStrides(n);if(h.length+f.length===0)for(let k=0;k<d.length;k++){let C=k%m.length,N=k%g.length,$=e(m[C*2],m[C*2+1],g[N*2],g[N*2+1]);d[k]=$.real,p[k]=$.imag}else for(let k=0;k<d.length;k++){let C=w.indexToLoc(k,u,l),N=C.slice(-b);h.forEach(P=>N[P]=0);let $=w.locToIndex(N,b,y),R=C.slice(-v);f.forEach(P=>R[P]=0);let O=w.locToIndex(R,v,x),D=e(m[$*2],m[$*2+1],g[O*2],g[O*2+1]);d[k]=D.real,p[k]=D.imag}return[d,p,i]}}var aT=Bt((e,t)=>e+t),WH=pw((e,t,n,r)=>({real:e+n,imag:t+r})),Ed=en(Js,aT,WH),VH={kernelName:Js,backendName:"cpu",kernelFunc:Ed};function hw(e,t,n,r,s){let a=w.sizeFromShape(r),o=w.makeZerosTypedArray(s,n);for(let i=0;i<e.length;i++){let c=e[i];if(c<0)throw new Error("Input x must be non-negative!");c>=s||(a>0?o[c]+=t[i]:o[c]+=1)}return o}function oT(e,t,n,r=!1){let s=e.shape[0],a=e.shape[1],o=ze([s,n],t.dtype);for(let i=0;i<s;i++)for(let c=0;c<a;c++){let u=e.get(i,c);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(r?o.set(1,i,u):t.size>0?o.set(o.get(i,u)+t.get(i,c),i,u):o.set(o.get(i,u)+1,i,u))}return o}function ka(e){return(t,n,r)=>{let s=w.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)s[a]=e(t[a],r);return s}}function ot(e,t,n){return({inputs:r,attrs:s,backend:a})=>{let{x:o}=r;if(ke(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,c=i.data.get(o.dataId).values,u=w.sizeFromShape(o.shape),l=n||o.dtype,d=w.getArrayFromDType(l,u);for(let p=0;p<u;++p)d[p]=t(c[p],s);return i.makeTensorInfo(o.shape,l,d)}}function Iu(e,t,n){return({inputs:r,attrs:s,backend:a})=>{let{x:o}=r;if(ke(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,c=i.data.get(o.dataId).values,u=n||o.dtype,l=t(c,u,s);return i.makeTensorInfo(o.shape,u,l)}}var iT=ka(e=>Math.ceil(e)),UH=Iu(Ua,iT),GH={kernelName:Ua,backendName:"cpu",kernelFunc:UH};function fw(e,t,n,r){let s=w.getArrayFromDType(n,w.sizeFromShape(t));if(r&&n!=="string"){let a=0;e.forEach(o=>{let i=w.sizeFromShape(o.shape);s.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?_.fromUint8ToStringArray(o.vals):o.vals,c=0;for(let u=0;u<o.shape[0];++u){let l=u*t[1]+a;for(let d=0;d<o.shape[1];++d)s[l+d]=i[c++]}a+=o.shape[1]})}return s}var cT=Bt((e,t)=>e===t?1:0),uT=en(lc,cT,null,"bool"),HH={kernelName:lc,backendName:"cpu",kernelFunc:uT},lT=ka(e=>Math.exp(e)),dT=Iu(Ja,lT),jH={kernelName:Ja,backendName:"cpu",kernelFunc:dT},pT=ka(e=>Math.expm1(e)),qH=Iu(pc,pT),KH={kernelName:pc,backendName:"cpu",kernelFunc:qH},hT=ka(e=>Math.floor(e)),XH=Iu(Qa,hT),YH={kernelName:Qa,backendName:"cpu",kernelFunc:XH};function fT(e,t,n,r,s,a,o,i,c){let u=ze([r,a],n);for(let l=0;l<r;l++){let d=[],p=0;for(let h=0;h<s;h++){let f=e[l*s+h];p+=f*o[h],d.push(f)}if(p<0||p>=c/a)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let h=0;h<a;h++)u.values[l*a+h]=t.get(...t.indexToLoc(p*a+h))}return u}function mT(e,t,n){let r=ze(n,e.dtype);for(let s=0;s<r.size;++s){let o=r.indexToLoc(s).slice(),i=o[0],c=o[2],u=t.locToIndex([i,c]);o[2]=t.values[u];let l=e.locToIndex(o);r.values[s]=e.values[l]}return r}var gT=Bt((e,t)=>e>t?1:0),ZH=en(gc,gT,null,"bool"),JH={kernelName:gc,backendName:"cpu",kernelFunc:ZH},bT=Bt((e,t)=>e>=t?1:0),QH=en(no,bT,null,"bool"),e6={kernelName:no,backendName:"cpu",kernelFunc:QH},yT=Bt((e,t)=>e<t?1:0),t6=en(xc,yT,null,"bool"),n6={kernelName:xc,backendName:"cpu",kernelFunc:t6},vT=Bt((e,t)=>e<=t?1:0),r6=en(wc,vT,null,"bool"),s6={kernelName:wc,backendName:"cpu",kernelFunc:r6};function xT(e,t,n){let r=(t-e)/(n-1),s=w.makeZerosTypedArray(n,"float32");s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}var wT=ka(e=>Math.log(e)),a6=Iu(ao,wT),o6={kernelName:ao,backendName:"cpu",kernelFunc:a6};function kT(e,t,n,r){let s=w.getTypedArrayFromDType(r,w.sizeFromShape(n));for(let a=0;a<s.length;++a){let o=a*t,i=e[o];for(let c=0;c<t;++c){let u=e[o+c];(Number.isNaN(u)||u>i)&&(i=u)}s[a]=i}return s}var IT=Bt((e,t)=>Math.max(e,t)),i6=en(io,IT),c6={kernelName:io,backendName:"cpu",kernelFunc:i6},ST=Bt((e,t)=>Math.min(e,t)),u6=en(po,ST),l6={kernelName:po,backendName:"cpu",kernelFunc:u6},mw=Bt((e,t)=>e*t),d6=pw((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),tm=en(fo,mw,d6),p6={kernelName:fo,backendName:"cpu",kernelFunc:tm};function CT(e,t,n){let r=w.createScalarValue(-1,n);return mw([],t,r,e,n)}function h6(e){let{inputs:t,backend:n}=e,{x:r}=t;ke(r,"neg");let s=n.data.get(r.dataId).values,[a,o]=CT(s,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,a)}var f6={kernelName:Cc,backendName:"cpu",kernelFunc:h6},TT=Bt((e,t)=>e!==t?1:0),m6=en(Tc,TT,null,"bool"),g6={kernelName:Tc,backendName:"cpu",kernelFunc:m6};function gw(e,t,n,r,s){let a=t.length,o=w.sizeFromShape(t),i=w.computeStrides(t),c=w.computeStrides(s),u=w.getTypedArrayFromDType(n,w.sizeFromShape(s));for(let l=0;l<o;++l){let d=w.indexToLoc(l,a,i),p=new Array(d.length);for(let f=0;f<p.length;f++)p[f]=d[r[f]];let h=w.locToIndex(p,a,c);u[h]=e[l]}return u}function hr(e){let{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;ke(s,"transpose");let o=s.shape.length,i=new Array(o);for(let d=0;d<i.length;d++)i[d]=s.shape[a[d]];let c=r.data.get(s.dataId).values,u=gw(c,s.shape,s.dtype,a,i);return{dataId:r.write(u,i,s.dtype),shape:i,dtype:s.dtype}}var b6={kernelName:Ro,backendName:"cpu",kernelFunc:hr};function NT(e,t,n,r){let[s,a]=_.computeOutAndReduceShapes(e,r),o=kr(t,"int32"),i=w.makeZerosTypedArray(w.sizeFromShape(s),o),c=w.sizeFromShape(a);for(let u=0;u<i.length;++u){let l=u*c,d=1;for(let p=0;p<c;++p)d*=n[l+p];i[u]=d}return{outVals:i,outShape:s,outDtype:o}}function y6(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;ke(s,"prod");let i=s.shape.length,c=w.parseAxisParam(a,s.shape),u=_.getAxesPermutation(c,i),l=c,d=s,p=[];u!=null&&(d=hr({inputs:{x:s},backend:n,attrs:{perm:u}}),p.push(d),l=_.getInnerMostAxes(l.length,i));let h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=NT(d.shape,d.dtype,h,l),b=m;return o&&(b=_.expandShapeToKeepDim(m,c)),p.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(b,g,f)}var v6={kernelName:$c,backendName:"cpu",kernelFunc:y6};function bw(e,t,n,r){let s=e===t,a=e<t&&n<0,o=t<e&&n>1;if(s||a||o)return w.makeZerosTypedArray(0,r);let i=Math.abs(Math.ceil((t-e)/n)),c=w.makeZerosTypedArray(i,r);t<e&&n===1&&(n=-1),c[0]=e;for(let u=1;u<c.length;u++)c[u]=c[u-1]+n;return c}var _T=ka(e=>1/Math.sqrt(e)),x6=Iu(So,_T),w6={kernelName:So,backendName:"cpu",kernelFunc:x6},k6=ka(e=>1/(1+Math.exp(-e))),ET=ot(To,e=>1/(1+Math.exp(-e))),I6={kernelName:To,backendName:"cpu",kernelFunc:ET};function nm(e,t,n,r,s){let a=vn.isSliceContinous(r,t,n),o=w.sizeFromShape(n),i=w.computeStrides(r);if(a){let d=vn.computeFlatOffset(t,i);return s==="string"?e.slice(d,d+o):e.subarray(d,d+o)}let c=s==="string"?_.fromUint8ToStringArray(e):e,u=ze(r,s,c),l=ze(n,s);for(let d=0;d<l.size;++d){let p=l.indexToLoc(d),h=p.map((f,m)=>f+t[m]);l.set(u.get(...h),...p)}return s==="string"?_.fromStringArrayToUint8(l.values):l.values}function di(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r;ke(s,"slice");let[i,c]=vn.parseSliceParams(s,a,o);vn.assertParamsValid(s,i,c);let u=n.data.get(s.dataId).values,l=nm(u,i,c,s.shape,s.dtype);return n.makeTensorInfo(c,s.dtype,l)}var S6={kernelName:Lc,backendName:"cpu",kernelFunc:di};function AT(e,t,n,r,s,a,o){let i=t[0],c=a[0],u=new Array(c),l=new Array(i),d=t[1];if(c===0){if(i!==0)throw new Error(`Received SparseTensor with denseShape[0] = 0 but
         indices.shape[0] = ${i}`);let g=w.getArrayFromDType(n,0),b=w.getArrayFromDType(s,0);return[g,[0,d],b,u,l]}let p=!0,h=0,f=new Array(c).fill(0);for(let g=0;g<i;++g){let b=e[g*d];if(b<0)throw new Error(`indices(${g}, 0) is invalid: ${b} < 0`);if(b>=c)throw new Error(`indices(${g}, 0) is invalid: ${b} >= ${c}`);++f[b],p=p&&b>=h,h=b}let m=!0;for(let g=0;g<c;++g){let b=f[g]===0;u[g]=b,m=m&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,b=r;for(let y=0;y<i;++y)l[y]=y;return[g,[i,d],b,u,l]}else{let g=f[c-1],b=w.getArrayFromDType(n,g*d),y=w.getArrayFromDType(s,g),v=new Array(c).fill(0);for(let x=0;x<i;++x){let k=e[x*d],C=v[k],N=(k===0?0:f[k-1])+C;v[k]++;for(let $=0;$<d;++$)b[N*d+$]=e[x*d+$];y[N]=r[x],l[x]=N}for(let x=0;x<c;++x)if(v[x]===0){let C=x===0?0:f[x-1];b[C*d+0]=x;for(let N=1;N<d;++N)b[C*d+N]=0;y[C]=o}return[b,[g,d],y,u,l]}}function DT(e,t,n,r,s){let a=w.sizeFromShape(r),o=t[0],i=s.length,c=[],u=1,l=-1;for(let g=0;g<i;++g){let b=s[g];if(b===-1){if(l!==-1)throw new Error(`only one output dimension may be -1, not both ${l} and ${g}`);l=g,c.push(1)}else{if(b<0)throw new Error(`size ${g} must be non-negative, not ${b}`);u*=b,c.push(b)}}if(l!==-1){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");let g=Math.trunc(a/u);if(u*g!==a)throw new Error(`Input to reshape is a SparseTensor with ${a}
          dense values, but the requested shape requires a multiple of ${u}. inputShape=${r} outputShape= ${c}`);c[l]=g}let d=w.sizeFromShape(c);if(d!==a)throw new Error(`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${d}. inputShape=${r} outputShape=${c}`);let p=r.length,h=[];if(p>0){h[p-1]=1;for(let g=p-2;g>=0;--g)h[g]=h[g+1]*r[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*c[g+1]}let m=w.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let b=0;for(let y=0;y<p;++y)b+=e[g*p+y]*h[y];for(let y=0;y<i;++y)m[g*i+y]=Math.trunc(b/f[y]),b%=f[y]}return[m,[o,i],c]}function yw(e,t,n,r,s,a=!1,o=0){let i=r.length;if(i!==s.length)throw new Error("segmentIds and indices should have same size.");let c=[t[0],e.length/t[0]],u=c[1],d=i>0?s[i-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");let p=t.slice();p[0]=d;let h=p.reduce((v,x)=>v*x,1),f=w.getArrayFromDType(n,h);if(i===0)return d>0&&f.fill(o),[f,p];if(d<=0)throw new Error("segment ids must be >= 0");let m=0,g=1,b=0,y=s[m];for(;;){let v=0;if(g<i){if(v=s[g],y===v){++g;continue}if(y>=v)throw new Error("segment ids are not increasing")}if(y<0||y>=d)throw new Error(`Segment id ${y} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);y>b&&f.fill(o,b*u,y*u);for(let x=m;x<g;++x){let k=r[x];if(k<0||k>=c[0])throw new Error(`Bad: indices[${x}] == ${r[x]} out of range [0, ${c[0]})`);for(let C=0;C<u;C++)f[y*u+C]+=e[k*u+C]}if(a)for(let x=0;x<u;x++)f[y*u+x]/=g-m;if(m=g,++g,b=y+1,y=v,g>i)break}return b<d&&f.fill(o,b*u,d*u),[f,p]}var C6=ka(e=>Math.sqrt(e)),T6=ot(No,e=>Math.sqrt(e)),N6={kernelName:No,backendName:"cpu",kernelFunc:T6},$T=Bt((e,t)=>{let n=e-t;return n*n}),_6=en(Ao,$T),E6={kernelName:Ao,backendName:"cpu",kernelFunc:_6};function FT(e,t,n,r){let s=ze(e,t.dtype);for(let a=0;a<s.size;a++){let o=s.indexToLoc(a),i=new Array(o.length);for(let c=0;c<i.length;c++)i[c]=o[c]*n[c]+r[c];s.set(t.get(...i),...o)}return s}var A6=class{constructor(e,t,n,r,s,a){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let o=0;o<s;++o){let i=this.getPadWidth(a),c=Math.max(0,i-o),u=Math.max(0,i-(s-(o+1))),l=a-(c+u),d=t+(c>0?0:o-i),p=0;p+=c*this.leftPad.length;for(let b=0;b<l;++b)p+=e[d+b].length;p+=u*this.rightPad.length,p+=(c+u+l-1)*this.separator.length,n[r+o]=new Uint8Array(p);let f=n[r+o],m=0,g=b=>b.forEach(y=>f[m++]=y);for(let b=0;b<c;++b)g(this.leftPad),g(this.separator);for(let b=0;b<l-1;++b)g(e[d+b]),g(this.separator);if(l>0){g(e[d+l-1]);for(let b=0;b<u;++b)g(this.separator),g(this.rightPad)}else{for(let b=0;b<u-1;++b)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let c=1;c<r;++c){let u=t[c]>=i;if(u=u&&t[c]<=n,!u)throw new Error(`Invalid split value ${t[c]}, must be in [${i}, ${n}]`);i=t[c]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let s=r-1,a=w.getArrayFromDType("int32",r);if(n===0||r===0){let i=new Array(n);for(let c=0;c<=s;++c)a[c]=0;return[i,a]}a[0]=0;for(let i=1;i<=s;++i){let c=t[i]-t[i-1],u=0;this.nGramWidths.forEach(l=>{u+=this.getNumNGrams(c,l)}),this.preserveShort&&c>0&&u===0&&(u=1),a[i]=a[i-1]+u}let o=new Array(a[s]);for(let i=0;i<s;++i){let c=t[i],u=a[i];if(this.nGramWidths.forEach(l=>{let d=t[i+1]-t[i],p=this.getNumNGrams(d,l);this.createNGrams(e,c,o,u,p,l),u+=p}),this.preserveShort&&u===a[i]){let l=t[i+1]-t[i];if(l===0)continue;let d=l+2*this.padWidth,p=1;this.createNGrams(e,c,o,u,p,d)}}return[o,a]}};function RT(e,t,n,r,s,a,o,i){return new A6(n,r,s,a,o,i).compute(e,t)}function D6(e,t,n,r){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)r.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&r.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&r.push(e);return}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(s,a);(!n||o.length!==0)&&r.push(o),s=a+1}}function PT(e,t,n){let r=e.length,s=[],a=0,o=0,i=new Array(r);for(let p=0;p<r;++p){let h=s.length;D6(e[p],t,n,s);let f=s.length-h;i[p]=f,a+=f,o=Math.max(o,f)}let c=w.getArrayFromDType("int32",a*2),u=new Array(a),l=[r,o],d=0;for(let p=0;p<r;++p)for(let h=0;h<i[p];++h)c[d*2]=p,c[d*2+1]=h,u[d]=s[d],++d;return[c,u,l]}function OT(e,t){let n=w.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=w.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var MT=Bt((e,t)=>e-t),$6=pw((e,t,n,r)=>({real:e-n,imag:t-r})),vw=en(Do,MT,$6),F6={kernelName:Do,backendName:"cpu",kernelFunc:vw};function LT(e,t){let n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];let r=ze(n,e.dtype);for(let s=0;s<r.values.length;++s){let a=r.indexToLoc(s),o=new Array(e.rank);for(let c=0;c<o.length;c++)o[c]=a[c]%e.shape[c];let i=e.locToIndex(o);r.values[s]=e.values[i]}return r}var Ad=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function BT(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let i=r-n+1,c=t-n+1,u=Math.log(i),l=.5*Math.exp(2*u/3),d=.5*Math.sqrt(u*l*(i-l)/i)*Math.sign(c-i/2),p=Math.max(n,Math.floor(t-c*l/i+d)),h=Math.min(r,Math.floor(t+(i-c)*l/i+d));BT(e,t,p,h)}let s=e[t],a=n,o=r;for(w.swap(e,n,t),Ad(e[r],s)>0&&w.swap(e,n,r);a<o;){for(w.swap(e,a,o),a++,o--;Ad(e[a],s)<0;)a=a+1;for(;Ad(e[o],s)>0;)o=o-1}Ad(e[n],s)===0?w.swap(e,n,o):(o=o+1,w.swap(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function zT(e,t,n,r,s){let a=t[t.length-1],[o,i]=[e.length/a,a],c=w.getTypedArrayFromDType(n,o*r),u=w.getTypedArrayFromDType("int32",o*r);for(let d=0;d<o;d++){let p=d*i,h=e.subarray(p,p+i),f=new Array(h.length);h.forEach((y,v)=>f[v]={value:y,index:v}),r<f.length&&(BT(f,r),f=f.slice(0,r)),s&&f.sort(Ad);let m=d*r,g=c.subarray(m,m+r),b=u.subarray(m,m+r);for(let y=0;y<r;y++)g[y]=f[y].value,b[y]=f[y].index}let l=t.slice();return l[l.length-1]=r,[ze(l,n,c),ze(l,"int32",u)]}function WT(e,t,n,r){let s=w.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<s;f++)a[0]*=n[f];a[1]=n[s];for(let f=s+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[s]),c=new Wt(a,r,e),u=[],l=a[0]===1&&a[2]===1;for(let f=0;f<n[s];f++){let m;if(l)m=e[f].toString();else{let g=[];for(let b=0;b<a[0];b++)for(let y=0;y<a[2];y++)g.push(c.get(b,f,y));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,u.push(f)}}let d=a.slice();d[1]=Object.keys(o).length;let p=new Wt(d,r);u.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let b=0;b<a[2];b++)p.set(c.get(g,f,b),g,m,b)});let h=n.slice();return h[s]=d[1],{outputValues:p.values,outputShape:h,indices:i}}Dh("cpu",()=>new dw,1);var VT=ot(Za,e=>e>=0?e:Math.exp(e)-1),R6={kernelName:Za,backendName:"cpu",kernelFunc:VT};function UT(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;ke([s],"leakyRelu");let o=w.sizeFromShape(s.shape),i=n.data.get(s.dataId).values,c=w.getTypedArrayFromDType("float32",o);for(let u=0;u<i.length;u++)c[u]=i[u]<0?a*i[u]:i[u];return n.makeTensorInfo(s.shape,"float32",c)}var P6={kernelName:so,backendName:"cpu",kernelFunc:UT},O6=Bt((e,t)=>e<0?t*e:e);function GT(e){let{inputs:t,backend:n}=e,{x:r,alpha:s}=t;ke([r,s],"prelu");let a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[i,c]=O6(r.shape,s.shape,a,o,r.dtype);return n.makeTensorInfo(c,r.dtype,i)}var M6={kernelName:yo,backendName:"cpu",kernelFunc:GT},HT=ot(vo,e=>Math.max(0,e)),L6={kernelName:vo,backendName:"cpu",kernelFunc:HT},jT=ot(wo,e=>Math.min(Math.max(0,e),6)),B6={kernelName:wo,backendName:"cpu",kernelFunc:jT};function xw(e,t,n,r,s){if(n==="linear")return ds({inputs:{x:t},backend:e});if(n==="relu")return HT({inputs:{x:t},backend:e});if(n==="elu")return VT({inputs:{x:t},backend:e});if(n==="relu6")return jT({inputs:{x:t},backend:e});if(n==="prelu")return GT({inputs:{x:t,alpha:r},backend:e});if(n==="leakyrelu")return UT({inputs:{x:t},backend:e,attrs:{alpha:s}});if(n==="sigmoid")return ET({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function yt(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=w.sizeFromShape(s.shape),i=w.inferFromImplicitShape(a,o),c=w.sizeFromShape(i);w.assert(o===c,()=>`The new shape (${i}) has ${c} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);let u=n.data.get(s.dataId);if(u.complexTensorInfos!=null){let l=u.complexTensorInfos.real,d=u.complexTensorInfos.imag;l.shape=i,d.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}var z6={kernelName:Rc,backendName:"cpu",kernelFunc:yt};function qT(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;ke([s,a],"matMul");let c=s.shape.length,u=a.shape.length,l=o?s.shape[c-2]:s.shape[c-1],d=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[c-1]:s.shape[c-2],h=i?a.shape[u-2]:a.shape[u-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),b=w.sizeFromShape(m),y=g===b||g===1||b===1;w.assert(c>=2&&u>=2&&y,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`);let x=(g>b?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,h]);w.assert(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let k=o?[g,l,p]:[g,p,l],C=i?[b,h,d]:[b,d,h],N=yt({inputs:{x:s},backend:n,attrs:{shape:k}}),$=yt({inputs:{x:a},backend:n,attrs:{shape:C}}),R=o?N.shape[1]:N.shape[2],O=o?N.shape[2]:N.shape[1],D=i?$.shape[1]:$.shape[2],P=Math.max(g,b),T=n.data.get(N.dataId).values,L=n.data.get($.dataId).values,G=w.computeStrides(N.shape),j=w.computeStrides($.shape),[q,K,te]=o?[G[0],1,G[1]]:[G[0],G[1],1],[ne,re,se]=i?[1,j[1],j[0]]:[j[1],1,j[0]],J=O*D,ie=ze([P,O,D],N.dtype),ue=ie.values,le=n.blockSize;for(let me=0;me<P;me++)for(let Ce=0;Ce<O;Ce+=le)for(let Te=0;Te<D;Te+=le)for(let _e=0;_e<R;_e+=le){let Me=Math.min(Ce+le,O),Ae=Math.min(Te+le,D),lt=Math.min(_e+le,R);for(let nt=Ce;nt<Me;nt++)for(let rt=Te;rt<Ae;rt++){let et=0;for(let it=_e;it<lt;it++){let Ve=Math.min(me,g-1)*q,An=Math.min(me,b-1)*se,Tt=T[Ve+nt*K+it*te],Un=L[it*ne+rt*re+An];et+=Tt*Un}ue[me*J+(nt*D+rt)]+=et}}return n.disposeIntermediateTensorInfo(N),n.disposeIntermediateTensorInfo($),n.makeTensorInfo(x,ie.dtype,ie.values)}var W6={kernelName:Wa,backendName:"cpu",kernelFunc:qT};function V6(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=r,p,h,f,m=[];p=qT({inputs:{a:s,b:a},attrs:{transposeA:c,transposeB:u},backend:n}),o&&(h=Ed({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),l&&(f=xw(n,p,l,i,d),m.push(p),p=f);for(let b of m)n.disposeIntermediateTensorInfo(b);return p}var U6={kernelName:Po,backendName:"cpu",kernelFunc:V6},G6=ot(Yi,e=>Math.acos(e)),H6={kernelName:Yi,backendName:"cpu",kernelFunc:G6},j6=ot(Zi,e=>Math.acosh(e)),q6={kernelName:Zi,backendName:"cpu",kernelFunc:j6};function K6(e){let{inputs:t,backend:n}=e,r=t;ke(t,"addN");let s=r.map(i=>n.data.get(i.dataId).values),a=ze(r[0].shape,r[0].dtype),o=a.values;for(let i=0;i<r.length;i++){let c=s[i];for(let u=0;u<o.length;u++)o[u]+=c[u]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var X6={kernelName:La,backendName:"cpu",kernelFunc:K6};function Y6(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;ke(s,"all");let i=w.parseAxisParam(a,s.shape),c=i,u=_.getAxesPermutation(c,s.shape.length),l=s;u!=null&&(l=hr({inputs:{x:s},backend:n,attrs:{perm:u}}),c=_.getInnerMostAxes(c.length,s.shape.length)),_.assertAxesAreInnerMostDims("all",c,l.shape.length);let[d,p]=_.computeOutAndReduceShapes(l.shape,c),h=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let k=m[y+x];v=v&&k}f[b]=v}u!=null&&n.disposeIntermediateTensorInfo(l);let g=n.makeTensorInfo(d,l.dtype,f);if(o){let b=_.expandShapeToKeepDim(d,i),y=yt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var Z6={kernelName:Ji,backendName:"cpu",kernelFunc:Y6};function J6(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;ke(s,"any");let i=w.parseAxisParam(a,s.shape),c=i,u=_.getAxesPermutation(c,s.shape.length),l=s;u!=null&&(l=hr({inputs:{x:s},backend:n,attrs:{perm:u}}),c=_.getInnerMostAxes(c.length,s.shape.length)),_.assertAxesAreInnerMostDims("any",c,l.shape.length);let[d,p]=_.computeOutAndReduceShapes(l.shape,c),h=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let k=m[y+x];v=v||k}f[b]=v}u!=null&&n.disposeIntermediateTensorInfo(l);let g=n.makeTensorInfo(d,l.dtype,f);if(o){let b=_.expandShapeToKeepDim(d,i),y=yt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var Q6={kernelName:Qi,backendName:"cpu",kernelFunc:J6};function e5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;ke(s,"argMax");let o=w.parseAxisParam(a,s.shape),i=_.getAxesPermutation(o,s.shape.length),c=s,u=[];i!=null&&(c=hr({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(c),o=_.getInnerMostAxes(o.length,c.shape.length)),o=[o[0]],_.assertAxesAreInnerMostDims("argMax",o,c.shape.length);let[l,d]=_.computeOutAndReduceShapes(c.shape,o),p=w.sizeFromShape(l),h=w.makeZerosTypedArray(p,"int32"),f=w.sizeFromShape(d),m=n.data.get(c.dataId).values;for(let g=0;g<h.length;++g){let b=g*f,y=m[b],v=0;for(let x=0;x<f;++x){let k=m[b+x];k>y&&(y=k,v=x)}h[g]=v}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(l,"int32",h)}var t5={kernelName:Ba,backendName:"cpu",kernelFunc:e5};function n5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;ke(s,"argMin");let o=w.parseAxisParam(a,s.shape),i=_.getAxesPermutation(o,s.shape.length),c=s,u=[];i!=null&&(c=hr({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(c),o=_.getInnerMostAxes(o.length,c.shape.length)),o=[o[0]],_.assertAxesAreInnerMostDims("argMin",o,c.shape.length);let[l,d]=_.computeOutAndReduceShapes(c.shape,o),p=w.sizeFromShape(l),h=w.makeZerosTypedArray(p,"int32"),f=w.sizeFromShape(d),m=n.data.get(c.dataId).values;for(let g=0;g<h.length;++g){let b=g*f,y=m[b],v=0;for(let x=0;x<f;++x){let k=m[b+x];k<y&&(y=k,v=x)}h[g]=v}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(l,"int32",h)}var r5={kernelName:xl,backendName:"cpu",kernelFunc:n5},s5=ot(ec,e=>Math.asin(e)),a5={kernelName:ec,backendName:"cpu",kernelFunc:s5},o5=ot(tc,e=>Math.asinh(e)),i5={kernelName:tc,backendName:"cpu",kernelFunc:o5},c5=ot(nc,e=>Math.atan(e)),u5={kernelName:nc,backendName:"cpu",kernelFunc:c5},l5=Bt((e,t)=>Math.atan2(e,t)),d5=en(sc,l5),p5={kernelName:sc,backendName:"cpu",kernelFunc:d5},h5=ot(rc,e=>Math.atanh(e)),f5={kernelName:rc,backendName:"cpu",kernelFunc:h5};function ww(e,t,n,r,s,a){let o=s.strideHeight,i=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,l=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,h=s.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ze(s.outShape,n),g=m.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let x=0;x<s.batchSize;++x){let k=x*b,C=x*r[0];for(let N=0;N<s.inChannels;++N)for(let $=0;$<s.outHeight;++$){let R=$*o-p,O=Math.max(0,R),D=Math.min(s.inHeight,l+R),P=k+$*y;for(let T=0;T<s.outWidth;++T){let L=T*i-h,G=Math.max(0,L),j=Math.min(s.inWidth,d+L),q=f,K=0,te=0;for(let re=O;re<D;re+=c){let se=C+re*r[1];for(let J=G;J<j;J+=u){let ie=se+J*r[2],ue=e[ie+N];a==="max"&&ue>q?q=ue:a==="avg"&&(K+=ue,te++)}if(isNaN(q))break}let ne=P+T*v+N;g[ne]=a==="avg"?K/te:q}}}return m}function KT(e,t,n,r,s=!1,a=!1){let o=ze(r.outShape,"int32"),i=r.strideHeight,c=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,h=r.padInfo.top,f=r.padInfo.left,m=ze(t,n,e);for(let g=0;g<r.batchSize;++g)for(let b=0;b<r.inChannels;++b)for(let y=0;y<r.outHeight;++y){let v=y*i-h,x=v;for(;x<0;)x+=u;let k=Math.min(r.inHeight,d+v);for(let C=0;C<r.outWidth;++C){let N=C*c-f,$=N;for(;$<0;)$+=l;let R=Math.min(r.inWidth,p+N),O=Number.NEGATIVE_INFINITY,D=-1;for(let P=x;P<k;P+=u){let T=P-v;for(let L=$;L<R;L+=l){let G=L-N,j=m.get(g,P,L,b);j>O&&(O=j,s?D=a?((g*r.inHeight+P)*r.inWidth+L)*r.inChannels+b:(P*r.inWidth+L)*r.inChannels+b:D=T*p+G)}}o.set(D,g,y,C,b)}}return o}function XT(e,t,n,r,s,a){let o=s.strideDepth,i=s.strideHeight,c=s.strideWidth,u=s.dilationDepth,l=s.dilationHeight,d=s.dilationWidth,p=s.effectiveFilterDepth,h=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,b=s.padInfo.left,y=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=ze(s.outShape,n),x=v.values,k=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],C=s.outShape[2]*s.outShape[3]*s.outShape[4],N=s.outShape[3]*s.outShape[4],$=s.outShape[4];for(let R=0;R<s.batchSize;++R){let O=R*k,D=R*r[0];for(let P=0;P<s.inChannels;++P)for(let T=0;T<s.outDepth;++T){let L=T*o-m,G=L;for(;G<0;)G+=u;let j=Math.min(s.inDepth,p+L),q=O+T*C;for(let K=0;K<s.outHeight;++K){let te=K*i-g,ne=te;for(;ne<0;)ne+=l;let re=Math.min(s.inHeight,h+te),se=q+K*N;for(let J=0;J<s.outWidth;++J){let ie=J*c-b,ue=ie;for(;ue<0;)ue+=d;let le=Math.min(s.inWidth,f+ie),me=se+J*$,Ce=y,Te=0,_e=0;for(let Ae=G;Ae<j;Ae+=u){let lt=D+Ae*r[1];for(let nt=ne;nt<re;nt+=l){let rt=lt+nt*r[2];for(let et=ue;et<le;et+=d){let it=rt+et*r[3],Ve=e[it+P];if(a==="max"&&Ve>Ce?Ce=Ve:a==="avg"&&(Te+=Ve,_e++),isNaN(Ce))break}if(isNaN(Ce))break}if(isNaN(Ce))break}let Me=me+P;x[Me]=a==="avg"?Te/_e:Ce}}}}return v}function m5(e,t){let n=ze(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,c=t.dilationWidth,u=t.effectiveFilterDepth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){let y=b*r-p,v=y;for(;v<0;)v+=o;let x=Math.min(t.inDepth,u+y);for(let k=0;k<t.outHeight;++k){let C=k*s-h,N=C;for(;N<0;)N+=i;let $=Math.min(t.inHeight,l+C);for(let R=0;R<t.outWidth;++R){let O=R*a-f,D=O;for(;D<0;)D+=c;let P=Math.min(t.inWidth,d+O),T=Number.NEGATIVE_INFINITY,L=-1;for(let G=v;G<x;G+=o){let j=G-y;for(let q=N;q<$;q+=i){let K=q-C;for(let te=D;te<P;te+=c){let ne=te-O,re=e.get(m,G,q,te,g);re>=T&&(T=re,L=j*l*d+K*l+ne)}}}n.set(L,m,b,k,R,g)}}}return n}function g5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ke(s,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:c}=r,u=1;w.assert(_.eitherStridesOrDilationsAreOne(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let l=_.computePool2DInfo(s.shape,a,o,u,i,c),d;if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))d=ds({inputs:{x:s},backend:n});else{let p=n.data.get(s.dataId).values,h=w.computeStrides(s.shape),f=ww(p,s.shape,s.dtype,h,l,"avg");d=n.makeTensorInfo(l.outShape,s.dtype,f.values)}return d}var b5={kernelName:za,backendName:"cpu",kernelFunc:g5};function y5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:c,dataFormat:u}=r;ke(s,"avgPool3d");let l=_.computePool3DInfo(s.shape,a,o,1,i,c,u),d=n.data.get(s.dataId).values,p=XT(d,s.shape,s.dtype,w.computeStrides(s.shape),l,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}var v5={kernelName:wl,backendName:"cpu",kernelFunc:y5};function x5(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=r;ke([s,a],"avgPool3DGrad");let l=_.computePool3DInfo(a.shape,o,i,1,c,u),d=l.strideDepth,p=l.strideHeight,h=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,b=l.dilationDepth,y=l.dilationHeight,v=l.dilationWidth,x=l.effectiveFilterDepth,k=l.effectiveFilterHeight,C=l.effectiveFilterWidth,N=x-1-l.padInfo.front,$=C-1-l.padInfo.left,R=k-1-l.padInfo.top,O=ze(a.shape,"float32"),D=1/(f*m*g),P=n.bufferSync(s);for(let T=0;T<l.batchSize;++T)for(let L=0;L<l.inChannels;++L)for(let G=0;G<l.inDepth;++G)for(let j=0;j<l.inHeight;++j)for(let q=0;q<l.inWidth;++q){let K=G-N,te=j-R,ne=q-$,re=0;for(let se=0;se<x;se+=b){let J=(K+se)/d;if(!(J<0||J>=l.outDepth||Math.floor(J)!==J))for(let ie=0;ie<k;ie+=y){let ue=(te+ie)/p;if(!(ue<0||ue>=l.outHeight||Math.floor(ue)!==ue))for(let le=0;le<C;le+=v){let me=(ne+le)/h;if(me<0||me>=l.outWidth||Math.floor(me)!==me)continue;re+=P.get(T,J,ue,me,L)}}}O.set(re*D,T,G,j,q,L)}return n.makeTensorInfo(O.shape,O.dtype,O.values)}var w5={kernelName:Mp,backendName:"cpu",kernelFunc:x5};function k5(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;ke([s,a],"avgPoolGrad");let{filterSize:i,strides:c,pad:u}=r,l=_.computePool2DInfo(o.shape,i,c,1,u),d=l.strideHeight,p=l.strideWidth,h=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,b=l.effectiveFilterHeight,y=l.effectiveFilterWidth,v=y-1-l.padInfo.left,x=b-1-l.padInfo.top,k=ze(o.shape,"float32"),C=1/(h*f),N=n.data.get(s.dataId).values,$=ze(s.shape,"float32",N);for(let R=0;R<l.batchSize;++R)for(let O=0;O<l.inChannels;++O)for(let D=0;D<l.inHeight;++D)for(let P=0;P<l.inWidth;++P){let T=D-x,L=P-v,G=0;for(let j=0;j<b;j+=m){let q=(T+j)/d;if(!(q<0||q>=l.outHeight||Math.floor(q)!==q))for(let K=0;K<y;K+=g){let te=(L+K)/p;if(te<0||te>=l.outWidth||Math.floor(te)!==te)continue;G+=$.get(R,q,te,O)}}k.set(G*C,R,D,P,O)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var I5={kernelName:Op,backendName:"cpu",kernelFunc:k5};function S5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:o,mean:i,variance:c}=t;w.assert(i.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ke([s,i,c,a,o],"batchNorm");let{varianceEpsilon:u}=r;u==null&&(u=.001);let l=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,p=n.data.get(c.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,b=h.length,y=p.length,v=d.length,x=0,k=0,C=0,N=0;for(let $=0;$<l.length;++$)m[$]=f[x++]+(l[$]-d[k++])*h[C++]/Math.sqrt(p[N++]+u),x>=g&&(x=0),k>=v&&(k=0),C>=b&&(C=0),N>=y&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,m)}var C5={kernelName:to,backendName:"cpu",kernelFunc:S5};function T5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;ke([s],"batchToSpaceND");let i=a.reduce((b,y)=>b*y),c=_.getReshaped(s.shape,a,i),u=_.getPermuted(c.length,a.length),l=_.getReshapedPermuted(s.shape,a,i),d=_.getSliceBeginCoords(o,a.length),p=_.getSliceSize(l,o,a.length),h=yt({inputs:{x:s},backend:n,attrs:{shape:c}}),f=hr({inputs:{x:h},backend:n,attrs:{perm:u}}),m=yt({inputs:{x:f},backend:n,attrs:{shape:l}}),g=di({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var N5={kernelName:ac,backendName:"cpu",kernelFunc:T5};function _5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,u=hw(i,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}var E5={kernelName:Lp,backendName:"cpu",kernelFunc:_5};function A5(e){let{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=_.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var D5={kernelName:Mb,backendName:"cpu",kernelFunc:A5},$5=ot(Qs,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),F5={kernelName:Qs,backendName:"cpu",kernelFunc:$5},R5=e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(w.sizeFromShape(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,i=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values;for(let u=0;u<i.length;u++){let l=i[u],d=c[u];r[u]=Math.hypot(l,d)}return n.makeOutput(r,t.shape,"float32")},P5={kernelName:kl,backendName:"cpu",kernelFunc:R5};function Su(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}var O5={kernelName:Qp,backendName:"cpu",kernelFunc:Su};function Cu(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=w.parseAxisParam(s,t[0].shape)[0],o=_.computeOutShape(t.map(m=>m.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>w.sizeFromShape(m.shape)>0);if(i.length===1)return ds({inputs:{x:i[0]},backend:n});let c=i.map(m=>m.shape);if(_.assertParamsConsistent(c,a),i[0].dtype==="complex64"){let m=i.map(x=>li({inputs:{input:x},backend:n})),g=i.map(x=>Su({inputs:{input:x},backend:n})),b=Cu({inputs:m,backend:n,attrs:{axis:a}}),y=Cu({inputs:g,backend:n,attrs:{axis:a}}),v=tr({inputs:{real:b,imag:y},backend:n});return m.forEach(x=>n.disposeIntermediateTensorInfo(x)),g.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),v}let u=i.map(m=>{let g=w.sizeFromShape(m.shape.slice(a));return yt({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),l=u.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=_.computeOutShape(u.map(m=>m.shape),1);let d=u[0].shape[0]===1,p=fw(l,o,t[0].dtype,d),h=_.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,p);return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var M5={kernelName:oc,backendName:"cpu",kernelFunc:Cu};function YT(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:c,dilations:u,dimRoundingMode:l}=r;ke([s,a],"conv2d");let d=_.convertConv2DDataFormat(c),p=_.computeConv2DInfo(s.shape,a.shape,o,u,i,l,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,b=p.padInfo.left,y=p.padInfo.top,v=p.dataFormat==="channelsLast",x=new Wt(p.outShape,s.dtype),k=w.computeStrides(s.shape),C=w.computeStrides(a.shape),N=k[0],$=v?k[1]:k[2],R=v?k[2]:1,O=v?1:k[1],D=x.strides[0],P=v?x.strides[1]:x.strides[2],T=v?x.strides[2]:1,L=v?1:x.strides[1],G=n.data.get(s.dataId).values,j=n.data.get(a.dataId).values,q=x.values;for(let K=0;K<p.batchSize;++K){let te=K*N,ne=K*D;for(let re=0;re<p.outHeight;++re){let se=ne+re*P,J=re*p.strideHeight-y;for(let ie=0;ie<h;++ie){let ue=J+ie*m;if(ue<0||ue>=p.inHeight)continue;let le=ie*C[0],me=te+ue*$;for(let Ce=0;Ce<p.outWidth;++Ce){let Te=se+Ce*T,_e=Ce*p.strideWidth-b;for(let Me=0;Me<f;++Me){let Ae=_e+Me*g;if(Ae<0||Ae>=p.inWidth)continue;let lt=le+Me*C[1],nt=me+Ae*R,rt=lt;for(let et=0;et<p.inChannels;++et){let it=G[nt+et*O];for(let Ve=0;Ve<p.outChannels;++Ve)q[Te+Ve*L]+=it*j[rt+Ve];rt+=p.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,q)}var L5={kernelName:Ga,backendName:"cpu",kernelFunc:YT};function B5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:u,filterShape:l}=r;ke([s,a],"conv2dBackpropFilter");let d=_.convertConv2DDataFormat(c),p=_.computeConv2DInfo(s.shape,l,o,1,i,u,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,b=p.dataFormat==="channelsLast",y=new Wt(p.filterShape,"float32"),v=p.padInfo.left,x=p.padInfo.top,k=n.data.get(s.dataId).values,C=n.data.get(a.dataId).values,N=new Wt(s.shape,s.dtype,k),$=new Wt(a.shape,a.dtype,C);for(let R=0;R<m;++R){let O=Math.max(0,Math.ceil((x-R)/h)),D=Math.min(p.outHeight,(p.inHeight+x-R)/h);for(let P=0;P<g;++P){let T=Math.max(0,Math.ceil((v-P)/f)),L=Math.min(p.outWidth,(p.inWidth+v-P)/f);for(let G=0;G<p.inChannels;++G)for(let j=0;j<p.outChannels;++j){let q=0;for(let K=0;K<p.batchSize;++K)for(let te=O;te<D;++te){let ne=R+te*h-x;for(let re=T;re<L;++re){let se=P+re*f-v;b?q+=N.get(K,ne,se,G)*$.get(K,te,re,j):q+=N.get(K,G,ne,se)*$.get(K,j,te,re)}}y.set(q,R,P,G,j)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var z5={kernelName:zp,backendName:"cpu",kernelFunc:B5};function W5(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=r;ke([s,a],"conv2dBackpropInput");let d=w.computeStrides(a.shape),p=w.computeStrides(s.shape),h=_.convertConv2DDataFormat(u),f=_.computeConv2DInfo(o,a.shape,i,1,c,l,!1,h),m=new Wt(f.inShape,"float32"),g=m.values,b=n.data.get(s.dataId).values,y=n.data.get(a.dataId).values,[v,x,k]=d,{batchSize:C,filterHeight:N,filterWidth:$,inChannels:R,inHeight:O,inWidth:D,outChannels:P,outHeight:T,outWidth:L,strideHeight:G,strideWidth:j}=f;h=f.dataFormat;let q=N-1-f.padInfo.top,K=$-1-f.padInfo.left,te=h==="channelsLast",ne=m.strides[0],re=te?m.strides[1]:m.strides[2],se=te?m.strides[2]:1,J=te?1:m.strides[1],ie=p[0],ue=te?p[1]:p[2],le=te?p[2]:1,me=te?1:p[1];for(let Ce=0;Ce<C;++Ce)for(let Te=0;Te<R;++Te)for(let _e=0;_e<O;++_e){let Me=_e-q,Ae=Math.max(0,Math.ceil(Me/G)),lt=Math.min(T,(N+Me)/G);for(let nt=0;nt<D;++nt){let rt=nt-K,et=Math.max(0,Math.ceil(rt/j)),it=Math.min(L,($+rt)/j),Ve=0;for(let Tt=Ae;Tt<lt;++Tt){let Un=Tt*G-Me;for(let nn=et;nn<it;++nn){let vr=nn*j-rt,mn=ie*Ce+ue*Tt+le*nn,sr=v*(N-1-Un)+x*($-1-vr)+k*Te;for(let ar=0;ar<P;++ar){let rn=b[mn+me*ar],or=y[sr+ar];Ve+=rn*or}}}let An=ne*Ce+re*_e+se*nt+J*Te;g[An]=Ve}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var V5={kernelName:Ha,backendName:"cpu",kernelFunc:W5};function U5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:c}=r;ke([s,a],"conv3d");let u=_.computeConv3DInfo(s.shape,a.shape,o,c,i),{filterDepth:l,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,y=g.left,v=g.top,x=new Wt(u.outShape,s.dtype),k=n.data.get(s.dataId).values,C=n.data.get(a.dataId).values,N=x.values,$=w.computeStrides(s.shape),R=w.computeStrides(a.shape);for(let O=0;O<u.batchSize;++O){let D=O*$[0],P=O*x.strides[0];for(let T=0;T<u.outDepth;++T){let L=P+T*x.strides[1],G=T*u.strideDepth-b;for(let j=0;j<l;++j){let q=G+j*h;if(q<0||q>=u.inDepth)continue;let K=j*R[0],te=D+q*$[1];for(let ne=0;ne<u.outHeight;++ne){let re=L+ne*x.strides[2],se=ne*u.strideHeight-v;for(let J=0;J<d;++J){let ie=se+J*f;if(ie<0||ie>=u.inHeight)continue;let ue=K+J*R[1],le=te+ie*$[2];for(let me=0;me<u.outWidth;++me){let Ce=re+me*u.outChannels,Te=me*u.strideWidth-y;for(let _e=0;_e<p;++_e){let Me=Te+_e*m;if(Me<0||Me>=u.inWidth)continue;let Ae=ue+_e*R[2],lt=le+Me*u.inChannels,nt=Ae;for(let rt=0;rt<u.inChannels;++rt){let et=k[lt+rt];for(let it=0;it<u.outChannels;++it)N[Ce+it]+=et*C[nt+it];nt+=u.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var G5={kernelName:Il,backendName:"cpu",kernelFunc:U5};function H5(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:c}=r;ke([s,a],"conv3dBackpropFilterV2");let u=w.computeStrides(s.shape),l=w.computeStrides(a.shape),d=_.computeConv3DInfo(s.shape,c,o,1,i),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,b=d.filterWidth,y=new Wt(d.filterShape,"float32"),v=y.values,[x,k,C,N]=y.strides,$=n.data.get(a.dataId).values,[R,O,D,P]=l,T=n.data.get(s.dataId).values,[L,G,j,q]=u,K=d.padInfo.front,te=d.padInfo.left,ne=d.padInfo.top;for(let re=0;re<m;++re){let se=Math.max(0,Math.ceil((K-re)/p)),J=Math.min(d.outDepth,(d.inDepth+K-re)/p),ie=re*x;for(let ue=0;ue<g;++ue){let le=Math.max(0,Math.ceil((ne-ue)/h)),me=Math.min(d.outHeight,(d.inHeight+ne-ue)/h),Ce=ue*k+ie;for(let Te=0;Te<b;++Te){let _e=Math.max(0,Math.ceil((te-Te)/f)),Me=Math.min(d.outWidth,(d.inWidth+te-Te)/f),Ae=Te*C+Ce;for(let lt=0;lt<d.inChannels;++lt){let nt=lt*N+Ae;for(let rt=0;rt<d.outChannels;++rt){let et=0;for(let it=0;it<d.batchSize;++it){let Ve=it*L,An=it*R;for(let Tt=se;Tt<J;++Tt){let nn=(re+Tt*p-K)*G+Ve,vr=Tt*O+An;for(let mn=le;mn<me;++mn){let ar=(ue+mn*h-ne)*j+nn,rn=mn*D+vr;for(let or=_e;or<Me;++or){let Gn=(Te+or*f-te)*q+ar,Xr=or*P+rn;et+=T[Gn+lt]*$[Xr+rt]}}}}v[nt+rt]=et}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var j5={kernelName:Wp,backendName:"cpu",kernelFunc:H5};function q5(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:c}=r;ke([s],"conv3dBackpropInputV2");let u=w.computeStrides(s.shape),l=w.computeStrides(a.shape),d=_.computeConv3DInfo(c,a.shape,i,1,o),p=new Wt(d.inShape,"float32"),h=p.values,[f,m,g,b]=p.strides,y=n.data.get(s.dataId).values,[v,x,k,C]=u,N=n.data.get(a.dataId).values,[$,R,O,D]=l,{batchSize:P,filterDepth:T,filterHeight:L,filterWidth:G,inChannels:j,inDepth:q,inHeight:K,inWidth:te,outChannels:ne,outDepth:re,outHeight:se,outWidth:J,strideDepth:ie,strideHeight:ue,strideWidth:le}=d,me=T-1-d.padInfo.front,Ce=L-1-d.padInfo.top,Te=G-1-d.padInfo.left;for(let _e=0;_e<P;++_e)for(let Me=0;Me<j;++Me)for(let Ae=0;Ae<q;++Ae){let lt=Ae-me,nt=Math.max(0,Math.ceil(lt/ie)),rt=Math.min(re,(T+lt)/ie);for(let et=0;et<K;++et){let it=et-Ce,Ve=Math.max(0,Math.ceil(it/ue)),An=Math.min(se,(L+it)/ue);for(let Tt=0;Tt<te;++Tt){let Un=Tt-Te,nn=Math.max(0,Math.ceil(Un/le)),vr=Math.min(J,(G+Un)/le),mn=0;for(let sr=nt;sr<rt;++sr){let ar=sr*ie-lt;for(let rn=Ve;rn<An;++rn){let or=rn*ue-it;for(let ir=nn;ir<vr;++ir){let Gn=ir*le-Un,Xr=v*_e+x*sr+k*rn+C*ir,bs=$*(T-1-ar)+R*(L-1-or)+O*(G-1-Gn)+D*Me;for(let Gs=0;Gs<ne;++Gs){let Pi=y[Xr+Gs],Yr=N[bs+Gs];mn+=Pi*Yr}}}}h[f*_e+m*Ae+g*et+b*Tt+Me]=mn}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}var K5={kernelName:Vp,backendName:"cpu",kernelFunc:q5},X5=ot(ja,e=>Math.cos(e)),Y5={kernelName:ja,backendName:"cpu",kernelFunc:X5},Z5=ot(qa,e=>Math.cosh(e)),J5={kernelName:qa,backendName:"cpu",kernelFunc:Z5};function Q5(e){let{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:u}=r,[l,d,p,h]=s.shape,f=a.shape[0],[m,g]=i,b=ze([f,m,g,h],"float32"),y=n.data.get(a.dataId).values,v=n.data.get(o.dataId).values,x=n.data.get(s.dataId).values,k=w.computeStrides(s.shape),C=w.computeStrides(b.shape);for(let N=0;N<f;N++){let $=N*4,R=y[$],O=y[$+1],D=y[$+2],P=y[$+3],T=v[N];if(T>=l)continue;let L=m>1?(D-R)*(d-1)/(m-1):0,G=g>1?(P-O)*(p-1)/(g-1):0;for(let j=0;j<m;j++){let q=m>1?R*(d-1)+j*L:.5*(R+D)*(d-1);if(q<0||q>d-1){for(let K=0;K<g;K++)for(let te=0;te<h;te++){let ne=te+K*C[2]+j*C[1]+N*C[0];b.values[ne]=u}continue}if(c==="bilinear"){let K=Math.floor(q),te=Math.ceil(q),ne=q-K;for(let re=0;re<g;re++){let se=g>1?O*(p-1)+re*G:.5*(O+P)*(p-1);if(se<0||se>p-1){for(let le=0;le<h;le++){let me=le+re*C[2]+j*C[1]+N*C[0];b.values[me]=u}continue}let J=Math.floor(se),ie=Math.ceil(se),ue=se-J;for(let le=0;le<h;le++){let me=le+J*k[2]+K*k[1]+T*k[0],Ce=x[me];me=le+ie*k[2]+K*k[1]+T*k[0];let Te=x[me];me=le+J*k[2]+te*k[1]+T*k[0];let _e=x[me];me=le+ie*k[2]+te*k[1]+T*k[0];let Me=x[me],Ae=Ce+(Te-Ce)*ue,lt=_e+(Me-_e)*ue;me=le+re*C[2]+j*C[1]+N*C[0],b.values[me]=Ae+(lt-Ae)*ne}}}else for(let K=0;K<g;++K){let te=g>1?O*(p-1)+K*G:.5*(O+P)*(p-1);if(te<0||te>p-1){for(let se=0;se<h;se++){let J=se+K*C[2]+j*C[1]+N*C[0];b.values[J]=u}continue}let ne=Math.round(te),re=Math.round(q);for(let se=0;se<h;se++){let J=se+ne*k[2]+re*k[1]+T*k[0],ie=se+K*C[2]+j*C[1]+N*C[0];b.values[ie]=x[J]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var ej={kernelName:ic,backendName:"cpu",kernelFunc:Q5};function tj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;ke(s,"cumsum");let c=_.getAxesPermutation([a],s.shape.length),u=s;c!=null&&(u=hr({inputs:{x:s},backend:n,attrs:{perm:c}}));let l=_.getInnerMostAxes(1,s.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);let d=kr(u.dtype,"int32"),p=w.makeZerosTypedArray(w.sizeFromShape(u.shape),d),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(b,y)=>b+f-y-1:(b,y)=>b+y;for(let b=0;b<h.length;b+=f)for(let y=0;y<f;y++){let v=m(b,y);if(y===0)p[v]=o?0:h[v];else{let x=m(b,y-1);p[v]=o?h[x]+p[x]:h[v]+p[x]}}let g=n.makeTensorInfo(u.shape,d,p);if(c!=null){let b=_.getUndoAxesPermutation(c),y=hr({inputs:{x:g},backend:n,attrs:{perm:b}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),y}return g}var nj={kernelName:Ka,backendName:"cpu",kernelFunc:tj};function rj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(s.shape.length===1){let c=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,l=hw(c,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,l)}else if(s.shape.length===2){let c=n.bufferSync(s),u=n.bufferSync(a),l=oT(c,u,o,i);return n.makeTensorInfo(l.shape,a.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}var sj={kernelName:Up,backendName:"cpu",kernelFunc:rj};function aj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r;w.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`),w.assert(a>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`);let i=s.shape[0],c=s.shape[1],u=s.shape[2],l=s.shape[3],d=c*a,p=u*a,h=l/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(i*d*p*h),g=0;for(let b=0;b<i;++b)for(let y=0;y<d;++y){let v=Math.floor(y/a),x=y%a;for(let k=0;k<p;++k){let C=Math.floor(k/a),N=k%a,$=(x*a+N)*h;for(let R=0;R<h;++R){let D=R+$+l*(C+u*(v+c*b));m[g++]=f[D]}}}return n.makeTensorInfo([i,d,p,h],s.dtype,m)}var oj={kernelName:cc,backendName:"cpu",kernelFunc:aj};function ZT(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:u}=r;ke([s,a],"depthwiseConv2DNative");let l=w.computeStrides(s.shape),d=w.computeStrides(a.shape),p=c;p==null&&(p=[1,1]),w.assert(_.eitherStridesOrDilationsAreOne(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);let h=_.computeConv2DInfo(s.shape,a.shape,o,p,i,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:y}=h,v=y.left,x=y.top,k=h.outChannels/h.inChannels,C=new Wt(h.outShape,s.dtype),N=n.data.get(s.dataId).values,$=n.data.get(a.dataId).values,R=C.values;for(let O=0;O<h.batchSize;++O){let D=O*l[0],P=O*C.strides[0];for(let T=0;T<h.outHeight;++T){let L=P+T*C.strides[1],G=T*h.strideHeight-x;for(let j=0;j<f;++j){let q=G+j*g;if(q<0||q>=h.inHeight)continue;let K=j*d[0],te=D+q*l[1];for(let ne=0;ne<h.outWidth;++ne){let re=L+ne*C.strides[2],se=ne*h.strideWidth-v;for(let J=0;J<m;++J){let ie=se+J*b;if(ie<0||ie>=h.inWidth)continue;let ue=K+J*d[1],le=te+ie*h.inChannels,me=re,Ce=ue;for(let Te=0;Te<h.inChannels;++Te){let _e=N[le+Te];for(let Me=0;Me<k;++Me)R[me+Me]+=_e*$[Ce+Me];me+=k,Ce+=k}}}}}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var ij={kernelName:Xa,backendName:"cpu",kernelFunc:ZT};function cj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:u,filterShape:l}=r;ke([s,a],"depthwiseConv2dNativeBackpropFilter");let d=_.computeConv2DInfo(s.shape,l,o,i,c,u,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new Wt(d.filterShape,"float32"),b=d.padInfo.left,y=d.padInfo.top,v=d.outChannels/d.inChannels,x=n.data.get(s.dataId).values,k=new Wt(s.shape,s.dtype,x),C=n.data.get(a.dataId).values,N=new Wt(a.shape,a.dtype,C);for(let $=0;$<f;++$){let R=Math.max(0,Math.ceil((y-$)/p)),O=Math.min(d.outHeight,(d.inHeight+y-$)/p);for(let D=0;D<m;++D){let P=Math.max(0,Math.ceil((b-D)/h)),T=Math.min(d.outWidth,(d.inWidth+b-D)/h);for(let L=0;L<d.outChannels;++L){let G=Math.trunc(L/v),j=L%v,q=0;for(let K=0;K<d.batchSize;++K)for(let te=R;te<O;++te){let ne=$+te*p-y;for(let re=P;re<T;++re){let se=D+re*h-b;q+=k.get(K,ne,se,G)*N.get(K,te,re,L)}}g.set(q,$,D,G,j)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var uj={kernelName:Gp,backendName:"cpu",kernelFunc:cj};function lj(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:u,inputShape:l}=r;ke([s,a],"depthwiseConv2DNativeBackpropInput");let d=w.computeStrides(s.shape),p=w.computeStrides(a.shape),h=_.computeConv2DInfo(l,a.shape,o,i,c,u,!0),f=new Wt(h.inShape,"float32"),m=f.values,[g,b,y]=f.strides,v=n.data.get(s.dataId).values,[x,k,C]=d,N=n.data.get(a.dataId).values,[$,R,O]=p,{batchSize:D,filterHeight:P,filterWidth:T,inChannels:L,inHeight:G,inWidth:j,outChannels:q,outHeight:K,outWidth:te,strideHeight:ne,strideWidth:re}=h,se=P-1-h.padInfo.top,J=T-1-h.padInfo.left,ie=q/L;for(let ue=0;ue<D;++ue)for(let le=0;le<L;++le)for(let me=0;me<G;++me){let Ce=me-se,Te=Math.max(0,Math.ceil(Ce/ne)),_e=Math.min(K,(P+Ce)/ne);for(let Me=0;Me<j;++Me){let Ae=Me-J,lt=Math.max(0,Math.ceil(Ae/re)),nt=Math.min(te,(T+Ae)/re),rt=0;for(let et=Te;et<_e;++et){let it=et*ne-Ce;for(let Ve=lt;Ve<nt;++Ve){let An=Ve*re-Ae,Tt=x*ue+k*et+C*Ve,Un=$*(P-1-it)+R*(T-1-An)+O*le;for(let nn=0;nn<ie;++nn){let vr=le*ie+nn,mn=v[Tt+vr],sr=N[Un+nn];rt+=mn*sr}}}m[g*ue+b*me+y*Me+le]=rt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var dj={kernelName:Hp,backendName:"cpu",kernelFunc:lj};function pj(e){let{inputs:t,backend:n}=e,{x:r}=t,s=w.sizeFromShape(r.shape),a=n.data.get(r.dataId).values,o=ze([s,s],r.dtype),i=o.values;for(let u=0;u<a.length;u++)i[u*s+u]=a[u];let c=[...r.shape,...r.shape];return n.makeTensorInfo(c,o.dtype,o.values)}var hj={kernelName:jp,backendName:"cpu",kernelFunc:pj},fj={kernelName:Sl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:s}=e,{strides:a,pad:o,dilations:i}=n,c=t,u=c.data.get(r.dataId).values,l=r.shape.length,d=c.data.get(s.dataId).values,p=s.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:v,strideHeight:x,strideWidth:k,filterHeight:C,filterWidth:N,dilationHeight:$,dilationWidth:R,outShape:O}=_.computeDilation2DInfo(r.shape,s.shape,a,o,"NHWC",i),D=w.sizeFromShape(O),P=O.length,T=w.getArrayFromDType(r.dtype,D);for(let G=0;G<h;++G)for(let j=0;j<b;++j){let q=j*x-v.top;for(let K=0;K<y;++K){let te=K*k-v.left;for(let ne=0;ne<g;++ne){let re=Number.MIN_SAFE_INTEGER;for(let J=0;J<C;++J){let ie=q+J*$;if(ie>=0&&ie<f)for(let ue=0;ue<N;++ue){let le=te+ue*R;if(le>=0&&le<m){let me=w.locToIndex([G,ie,le,ne],l,w.computeStrides(r.shape)),Ce=w.locToIndex([J,ue,ne],p,w.computeStrides(s.shape)),Te=u[me]+d[Ce];Te>re&&(re=Te)}}}let se=w.locToIndex([G,j,K,ne],P,w.computeStrides(O));T[se]=re}}}return{dataId:c.write(w.toTypedArray(T,r.dtype),O,r.dtype),shape:O,dtype:r.dtype}}},mj={kernelName:Kp,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:c}=n,u=t,l=w.toNestedArray(r.shape,u.data.get(r.dataId).values),d=w.toNestedArray(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:k,filterWidth:C,dilationHeight:N,dilationWidth:$,outShape:R}=_.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",c);w.assert(a.rank===R.length,()=>`Error in ${Kp}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let O=w.toNestedArray(R,u.data.get(a.dataId).values),D=w.makeZerosNestedTypedArray(s.shape,s.dtype);for(let T=0;T<p;++T)for(let L=0;L<g;++L){let G=L*v-y.top;for(let j=0;j<b;++j){let q=j*x-y.left;for(let K=0;K<m;++K){let te=Number.MIN_SAFE_INTEGER,ne=0,re=0;for(let se=0;se<k;++se){let J=G+se*N;if(J>=0&&J<h)for(let ie=0;ie<C;++ie){let ue=q+ie*$;if(ue>=0&&ue<f){let le=l[T][J][ue][K]+d[se][ie][K];le>te&&(te=le,ne=se,re=ie)}}}D[ne][re][K]+=O[T][L][j][K]}}}return{dataId:u.write(w.toTypedArray(D,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},gj={kernelName:qp,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:c}=n,u=t,l=w.toNestedArray(r.shape,u.data.get(r.dataId).values),d=w.toNestedArray(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:k,filterWidth:C,dilationHeight:N,dilationWidth:$,outShape:R}=_.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",c);w.assert(a.rank===R.length,()=>`Error in ${qp}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let O=w.toNestedArray(R,u.data.get(a.dataId).values),D=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let T=0;T<p;++T)for(let L=0;L<g;++L){let G=L*v-y.top;for(let j=0;j<b;++j){let q=j*x-y.left;for(let K=0;K<m;++K){let te=Number.MIN_SAFE_INTEGER,ne=G<0?0:G,re=q<0?0:q;for(let se=0;se<k;++se){let J=G+se*N;if(J>=0&&J<h)for(let ie=0;ie<C;++ie){let ue=q+ie*$;if(ue>=0&&ue<f){let le=l[T][J][ue][K]+d[se][ie][K];le>te&&(te=le,ne=J,re=ue)}}}D[T][ne][re][K]+=O[T][L][j][K]}}}return{dataId:u.write(w.toTypedArray(D,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function Dd(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;ke(s,"sum");let i;s.dtype==="bool"?i=wa({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):i=ds({inputs:{x:s},backend:n});let c=i.shape.length,u=w.parseAxisParam(a,i.shape),l=_.getAxesPermutation(u,c),d=u,p=i;l!=null&&(p=hr({inputs:{x:i},backend:n,attrs:{perm:l}}),d=_.getInnerMostAxes(d.length,c)),_.assertAxesAreInnerMostDims("sum",d,p.shape.length);let[h,f]=_.computeOutAndReduceShapes(p.shape,d),m=_.upcastType(p.dtype,"int32"),g=em(n,h,m),b=w.sizeFromShape(f),y=n.data.get(g.dataId).values,v=n.data.get(p.dataId).values;for(let x=0;x<y.length;++x){let k=x*b,C=0;for(let N=0;N<b;++N)C+=v[k+N];y[x]=C}if(o){let x=_.expandShapeToKeepDim(g.shape,u),k=g;g=yt({inputs:{x:g},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(k)}return n.disposeIntermediateTensorInfo(i),l!=null&&n.disposeIntermediateTensorInfo(p),g}var bj={kernelName:_o,backendName:"cpu",kernelFunc:Dd};function yj(e){let{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:c}=_.decodeEinsumEquation(s,a.length);_.checkEinsumDimSizes(o.length,c,a);let{path:u,steps:l}=_.getEinsumComputePath(i,c),d=l.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of l[m]){let{permutationIndices:b,expandDims:y}=_.getEinsumPermutation(h,c[g]),v;_.isIdentityPermutation(b)?v=a[g]:(v=hr({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=yt({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),p===null?p=v:(p=tm({inputs:{a:v,b:p},backend:n}),f.push(p))}m<d-1&&(u[m]>=0&&(p=Dd({inputs:{x:p},backend:n,attrs:{axis:u[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var vj={kernelName:Xp,backendName:"cpu",kernelFunc:yj};function xj(e){let{inputs:t,backend:n}=e,{dy:r,y:s}=t;ke([r,s],"eluGrad");let a=new Float32Array(w.sizeFromShape(s.shape)),o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let c=0;c<o.length;++c){let u=o[c];u>=1?a[c]=i[c]:a[c]=i[c]*(u+1)}return n.makeTensorInfo(s.shape,"float32",a)}var wj={kernelName:Yp,backendName:"cpu",kernelFunc:xj},kj=_.ERF_P,Ij=_.ERF_A1,Sj=_.ERF_A2,Cj=_.ERF_A3,Tj=_.ERF_A4,Nj=_.ERF_A5,_j=ot(uc,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+kj*n);return t*(1-((((Nj*r+Tj)*r+Cj)*r+Sj)*r+Ij)*r*Math.exp(-n*n))}),Ej={kernelName:uc,backendName:"cpu",kernelFunc:_j};function rm(e){let{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,o=s.shape.length,i=s.shape.slice(),c=a;return a<0&&(w.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+a+1),i.splice(c,0,1),yt({inputs:{x:s},backend:n,attrs:{shape:i}})}var Aj={kernelName:dc,backendName:"cpu",kernelFunc:rm},Dj=Bt((e,t)=>e/t),kw=en(Ya,Dj),Iw={kernelName:Ya,backendName:"cpu",kernelFunc:kw};function JT(e,t,n){let r=e.shape,s=r[0],a=r[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,u=[s,a],l=w.sizeFromShape(u),d=w.getTypedArrayFromDType("float32",l),p=w.getTypedArrayFromDType("float32",l);for(let g=0;g<s;g++){let b=di({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),y=di({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,a]}}),v=tr({inputs:{real:b,imag:y},backend:n}),{real:x,imag:k}=$j(v,t,n),C=_.mergeRealAndImagArrays(x,k);for(let N=0;N<a;N++){let $=_.getComplexWithIndex(C,N);d[g*a+N]=$.real,p[g*a+N]=$.imag}n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(v)}let h=n.makeTensorInfo(u,"float32",d),f=n.makeTensorInfo(u,"float32",p),m=tr({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function $j(e,t,n){let r=w.sizeFromShape(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(Fj(r)){let i=Sw(a,o,r,t,n),c=[e.shape[0],e.shape[1]];if(t){let u=n.makeTensorInfo(c,"float32",i.real),l=n.makeTensorInfo(c,"float32",i.imag),d=n.makeTensorInfo([],"float32",w.createScalarValue(r,"float32")),p=ds({inputs:{x:d},backend:n}),h=Iw.kernelFunc({inputs:{a:u,b:d},backend:n}),f=Iw.kernelFunc({inputs:{a:l,b:p},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=_.mergeRealAndImagArrays(a,o),c=Rj(i,r,t);return _.splitRealAndImagArrays(c)}}function Fj(e){return(e&e-1)==0}function Sw(e,t,n,r,s){if(n===1)return{real:e,imag:t};let a=_.mergeRealAndImagArrays(e,t),o=n/2,i=_.complexWithEvenIndex(a),c=i.real,u=i.imag,l=[c.length],d=s.makeTensorInfo(l,"float32",c),p=s.makeTensorInfo(l,"float32",u),h=tr({inputs:{real:d,imag:p},backend:s}),f=_.complexWithOddIndex(a),m=f.real,g=f.imag,b=[m.length],y=s.makeTensorInfo(b,"float32",m),v=s.makeTensorInfo(b,"float32",g),x=tr({inputs:{real:y,imag:v},backend:s}),k=Sw(c,u,o,r,s),C=k.real,N=k.imag,$=[C.length],R=s.makeTensorInfo($,"float32",C),O=s.makeTensorInfo($,"float32",N),D=tr({inputs:{real:R,imag:O},backend:s}),P=Sw(m,g,o,r,s),T=P.real,L=P.imag,G=[T.length],j=s.makeTensorInfo(G,"float32",T),q=s.makeTensorInfo(G,"float32",L),K=tr({inputs:{real:j,imag:q},backend:s}),te=_.exponents(n,r),ne=[te.real.length],re=s.makeTensorInfo(ne,"float32",te.real),se=s.makeTensorInfo(ne,"float32",te.imag),J=tr({inputs:{real:re,imag:se},backend:s}),ie=tm({inputs:{a:J,b:K},backend:s}),ue=Ed({inputs:{a:D,b:ie},backend:s}),le=vw({inputs:{a:D,b:ie},backend:s}),me=li({inputs:{input:ue},backend:s}),Ce=li({inputs:{input:le},backend:s}),Te=Su({inputs:{input:ue},backend:s}),_e=Su({inputs:{input:le},backend:s}),Me=Cu({inputs:[me,Ce],backend:s,attrs:{axis:0}}),Ae=Cu({inputs:[Te,_e],backend:s,attrs:{axis:0}}),lt=s.data.get(Me.dataId).values,nt=s.data.get(Ae.dataId).values;return s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(re),s.disposeIntermediateTensorInfo(se),s.disposeIntermediateTensorInfo(J),s.disposeIntermediateTensorInfo(ie),s.disposeIntermediateTensorInfo(ue),s.disposeIntermediateTensorInfo(le),s.disposeIntermediateTensorInfo(me),s.disposeIntermediateTensorInfo(Te),s.disposeIntermediateTensorInfo(Ce),s.disposeIntermediateTensorInfo(_e),s.disposeIntermediateTensorInfo(Me),s.disposeIntermediateTensorInfo(Ae),{real:lt,imag:nt}}function Rj(e,t,n){let r=new Float32Array(t*2);for(let s=0;s<t;s++){let a=0,o=0;for(let i=0;i<t;i++){let c=_.exponent(s*i,t,n),u=_.getComplexWithIndex(e,i);a+=u.real*c.real-u.imag*c.imag,o+=u.real*c.imag+u.imag*c.real}n&&(a/=t,o/=t),_.assignToTypedArray(r,a,o,s)}return r}function Pj(e){let{inputs:t,backend:n}=e,{input:r}=t,s=w.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],o=s/a,i=yt({inputs:{x:r},backend:n,attrs:{shape:[o,a]}}),c=JT(i,!1,n),u=yt({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),u}var Oj={kernelName:Zp,backendName:"cpu",kernelFunc:Pj};function Cw(e){let{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,o=a||w.inferDtype(s),i=w.getArrayFromDType(o,w.sizeFromShape(r));return Lj(i,s,o),t.makeTensorInfo(r,o,i)}var Mj={kernelName:Cl,backendName:"cpu",kernelFunc:Cw};function Lj(e,t,n){e.fill(t)}var Bj={kernelName:hc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,s=n,a=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[o,i,c,u]=r.shape,l=s.data.get(r.dataId).values;for(let p=0;p<o;p++){let h=p*c*i*u;for(let f=0;f<i;f++){let m=f*(c*u);for(let g=0;g<c;g++){let b=g*u;for(let y=0;y<u;y++){let v=Math.round(c-g-1),x=h+m+b+y,k=l[x];if(v>=0&&v<c){let C=v*u,N=h+m+C+y;k=l[N]}a[x]=k}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},zj=Bt((e,t)=>Math.floor(e/t)),Wj=en(eo,zj,null,"int32"),Vj={kernelName:eo,backendName:"cpu",kernelFunc:Wj};function Uj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=YT({inputs:{x:s,filter:a},backend:n,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=Ed({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=xw(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var Gj={kernelName:Oo,backendName:"cpu",kernelFunc:Uj};function Hj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=ZT({inputs:{x:s,filter:a},backend:n,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=Ed({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=xw(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var jj={kernelName:Mo,backendName:"cpu",kernelFunc:Hj};function qj(e){let{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=w.sizeFromShape(r.shape),o=s.shape,i=o[o.length-1],[c,u,l,d]=_.prepareAndValidate(r,s);if(u===0)return n.makeTensorInfo(c,r.dtype,[]);let p=n.data.get(s.dataId).values,h=n.bufferSync(r),f=fT(p,h,r.dtype,u,i,l,d,r.shape,a);return n.makeTensorInfo(c,r.dtype,f.values)}var Kj={kernelName:mc,backendName:"cpu",kernelFunc:qj};function Xj(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r;ke([s,a],"gatherV2");let c=i;i==null&&(c=0);let u=w.sizeFromShape(a.shape),l=w.parseAxisParam(o,s.shape)[0],d=_.segment_util.collectGatherOpShapeInfo(s,a,l,c),p=yt({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=yt({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,u/d.batchSize]}}),f=[d.batchSize,d.outerSize,u/d.batchSize,d.sliceSize],m=n.bufferSync(h),g=n.bufferSync(p),b=mT(g,m,f);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}var Yj={kernelName:fc,backendName:"cpu",kernelFunc:Xj};function Zj(e){let{inputs:t,backend:n}=e,{input:r}=t,s=w.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],o=s/a,i=yt({inputs:{x:r},backend:n,attrs:{shape:[o,a]}}),c=JT(i,!0,n),u=yt({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),u}var Jj={kernelName:Jp,backendName:"cpu",kernelFunc:Zj},Qj=ot(bc,e=>Number.isFinite(e)?1:0,"bool"),eq={kernelName:bc,backendName:"cpu",kernelFunc:Qj},tq=ot(yc,e=>Math.abs(e)===1/0?1:0,"bool"),nq={kernelName:yc,backendName:"cpu",kernelFunc:tq},rq=ot(vc,e=>Number.isNaN(e)?1:0,"bool"),sq={kernelName:vc,backendName:"cpu",kernelFunc:rq};function aq(e){let{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=xT(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}var oq={kernelName:eh,backendName:"cpu",kernelFunc:aq},iq=ot(kc,e=>Math.log1p(e)),cq={kernelName:kc,backendName:"cpu",kernelFunc:iq},uq=Bt((e,t)=>e&&t),lq=en(Ic,uq,null,"bool"),dq={kernelName:Ic,backendName:"cpu",kernelFunc:lq},pq=ot(Tl,e=>e?0:1,"bool"),hq={kernelName:Tl,backendName:"cpu",kernelFunc:pq},fq=Bt((e,t)=>e||t),mq=en(Nl,fq,null,"bool"),gq={kernelName:Nl,backendName:"cpu",kernelFunc:mq};function bq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:c}=r;ke(s,"LRN");let u=s.shape[3],l=u-1,d=n.data.get(s.dataId).values,p=w.sizeFromShape(s.shape),h=new Float32Array(p);function f(m){let g=m%u,b=m-g+Math.max(0,g-a),y=m-g+Math.min(g+a,l),v=0;for(;b<=y;b++){let x=d[b];v+=x*x}return v}for(let m=0;m<p;m++){let g=f(m),b=d[m]*Math.pow(o+i*g,-c);h[m]=b}return n.makeTensorInfo(s.shape,s.dtype,h)}var yq={kernelName:_l,backendName:"cpu",kernelFunc:bq};function vq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:c,alpha:u,beta:l}=r;ke(o,"LRNGrad");let d=w.sizeFromShape(o.shape),p=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),b=d;for(let y=0;y<b;y++){let v=y%p,x=y-v+Math.max(0,v-i),k=y-v+Math.min(p,v+i+1),C=0;for(let N=x;N<k;N++)C+=Math.pow(f[N],2);C=u*C+c;for(let N=x;N<k;N++){let $=-2*u*l*f[N]*m[y]/C;y===N&&($+=Math.pow(C,-l)),$*=h[y],g[N]+=$}}return n.makeTensorInfo(o.shape,s.dtype,g)}var xq={kernelName:th,backendName:"cpu",kernelFunc:vq};function QT(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=n,c=s.shape,u=c.length,l=w.parseAxisParam(a,c),d=l,p=_.getAxesPermutation(d,u),h=i.data.get(s.dataId).values;if(p!=null){let x=new Array(u);for(let k=0;k<x.length;k++)x[k]=c[p[k]];h=gw(h,c,s.dtype,p,x),d=_.getInnerMostAxes(d.length,u),c=x}ke(s,"max"),_.assertAxesAreInnerMostDims("max",d,u);let[f,m]=_.computeOutAndReduceShapes(c,d),g=w.sizeFromShape(m),b=kT(h,g,f,s.dtype),y=i.write(b,f,s.dtype),v=f;return o&&(v=_.expandShapeToKeepDim(f,l)),{dataId:y,shape:v,dtype:s.dtype}}var wq={kernelName:oo,backendName:"cpu",kernelFunc:QT};function kq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ke(s,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:c}=r,u=1;w.assert(_.eitherStridesOrDilationsAreOne(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let l=_.computePool2DInfo(s.shape,a,o,u,i,c),d;if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))d=ds({inputs:{x:s},backend:n});else{let p=n.data.get(s.dataId).values,h=w.computeStrides(s.shape),f=ww(p,s.shape,s.dtype,h,l,"max");d=n.makeTensorInfo(l.outShape,s.dtype,f.values)}return d}var Iq={kernelName:co,backendName:"cpu",kernelFunc:kq};function Sq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:c,dataFormat:u}=r;ke(s,"maxPool3d");let l=_.computePool3DInfo(s.shape,a,o,1,i,c,u),d=n.data.get(s.dataId).values,p=XT(d,s.shape,s.dtype,w.computeStrides(s.shape),l,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}var Cq={kernelName:El,backendName:"cpu",kernelFunc:Sq};function Tq(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=r;ke([s,a],"maxPool3DGrad");let l=_.computePool3DInfo(a.shape,o,i,1,c,u),d=n.bufferSync(a),p=m5(d,l),h=l.strideDepth,f=l.strideHeight,m=l.strideWidth,g=l.dilationDepth,b=l.dilationHeight,y=l.dilationWidth,v=l.effectiveFilterDepth,x=l.effectiveFilterHeight,k=l.effectiveFilterWidth,C=v-1-l.padInfo.front,N=k-1-l.padInfo.left,$=x-1-l.padInfo.top,R=ze(a.shape,"float32"),O=n.bufferSync(s);for(let D=0;D<l.batchSize;++D)for(let P=0;P<l.inChannels;++P)for(let T=0;T<l.inDepth;++T)for(let L=0;L<l.inHeight;++L)for(let G=0;G<l.inWidth;++G){let j=T-C,q=L-$,K=G-N,te=0;for(let ne=0;ne<v;ne+=g){let re=(j+ne)/h;if(!(re<0||re>=l.outDepth||Math.floor(re)!==re))for(let se=0;se<x;se+=b){let J=(q+se)/f;if(!(J<0||J>=l.outHeight||Math.floor(J)!==J))for(let ie=0;ie<k;ie+=y){let ue=(K+ie)/m;if(ue<0||ue>=l.outWidth||Math.floor(ue)!==ue)continue;let le=v*x*k-1-p.get(D,re,J,ue,P),me=ne*x*k+se*k+ie,Ce=le===me?1:0;if(Ce===0)continue;te+=O.get(D,re,J,ue,P)*Ce}}}R.set(te,D,T,L,G,P)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var Nq={kernelName:rh,backendName:"cpu",kernelFunc:Tq};function _q(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;ke([a,o],"maxPoolGrad");let{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=r,p=_.computePool2DInfo(i.shape,c,u,1,l,d),h=n.data.get(i.dataId).values,f=ze(p.outShape,i.dtype,KT(h,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,b=p.dilationHeight,y=p.dilationWidth,v=p.effectiveFilterHeight,x=p.effectiveFilterWidth,k=x-1-p.padInfo.left,C=v-1-p.padInfo.top,N=ze(i.shape,"float32"),$=n.data.get(s.dataId).values,R=ze(s.shape,"float32",$);for(let O=0;O<p.batchSize;++O)for(let D=0;D<p.inChannels;++D)for(let P=0;P<p.inHeight;++P)for(let T=0;T<p.inWidth;++T){let L=P-C,G=T-k,j=0;for(let q=0;q<v;q+=b){let K=(L+q)/m;if(!(K<0||K>=p.outHeight||Math.floor(K)!==K))for(let te=0;te<x;te+=y){let ne=(G+te)/g;if(ne<0||ne>=p.outWidth||Math.floor(ne)!==ne)continue;let re=v*x-1-f.get(O,K,ne,D),se=q*x+te,J=re===se?1:0;if(J===0)continue;j+=R.get(O,K,ne,D)*J}}N.set(j,O,P,T,D)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}var Eq={kernelName:nh,backendName:"cpu",kernelFunc:_q};function Aq(e,t,n,r,s){let a=w.computeStrides(t),o=ww(e,t,n,a,s,"max"),i=KT(e,t,n,s,!0,r);return[o.values,i.values]}var Dq={kernelName:sh,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,c=n;ke(r,"MaxPoolWithArgmax");let u=c.data.get(r.dataId).values,l=_.computePool2DInfo(r.shape,s,a,[1,1],o),[d,p]=Aq(u,r.shape,r.dtype,i,l),h=c.write(d,l.outShape,r.dtype),f=c.write(p,l.outShape,r.dtype);return[{dataId:h,shape:l.outShape,dtype:r.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};function $q(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=w.parseAxisParam(a,s.shape),u=_.computeOutAndReduceShapes(s.shape,i)[1],l=w.sizeFromShape(u),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(p);let h=wa({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(h);let f=kw({inputs:{a:h,b:p},backend:n});d.push(f);let m=Dd({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var Fq={kernelName:uo,backendName:"cpu",kernelFunc:$q};function Rq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;ke(s,"min");let i=w.parseAxisParam(a,s.shape),c=i,u=_.getAxesPermutation(c,s.shape.length),l=s;u!=null&&(l=hr({inputs:{x:s},backend:n,attrs:{perm:u}}),c=_.getInnerMostAxes(c.length,s.shape.length)),_.assertAxesAreInnerMostDims("min",c,l.shape.length);let[d,p]=_.computeOutAndReduceShapes(l.shape,c),h=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let k=m[y+x];(Number.isNaN(k)||k<v)&&(v=k)}f[b]=v}u!=null&&n.disposeIntermediateTensorInfo(l);let g=n.makeTensorInfo(d,l.dtype,f);if(o){let b=_.expandShapeToKeepDim(d,i),y=yt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var Pq={kernelName:lo,backendName:"cpu",kernelFunc:Rq};function Oq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:o}=r;ke(s,"mirrorPad");let i=a.map((v,x)=>v[0]+s.shape[x]+v[1]),c=a.map(v=>v[0]),u=a.map((v,x)=>v[0]+s.shape[x]),l=o==="reflect"?0:1,d=n.data.get(s.dataId).values,p=s.shape.length,h=w.computeStrides(s.shape),f=w.sizeFromShape(i),m=i.length,g=w.computeStrides(i),b=w.getTypedArrayFromDType(s.dtype,f);for(let v=0;v<f;v++){let x=w.indexToLoc(v,m,g);for(let C=0;C<m;C++)x[C]<c[C]?x[C]=c[C]*2-x[C]-l:x[C]>=u[C]&&(x[C]=(u[C]-1)*2-x[C]+l);x=x.map((C,N)=>C-c[N]);let k=w.locToIndex(x,p,h);b[v]=d[k]}return{dataId:n.write(b,i,s.dtype),shape:i,dtype:s.dtype}}var Mq={kernelName:ho,backendName:"cpu",kernelFunc:Oq},Lq=Bt((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),Bq=en(Sc,Lq),zq={kernelName:Sc,backendName:"cpu",kernelFunc:Bq},Wq=Ra(Y0());function e2(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=s.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let c=w.parseAxisParam([i],s.shape),u=QT({inputs:{x:s},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),l=_.expandShapeToKeepDim(u.shape,c),d=yt({inputs:{x:u},backend:n,attrs:{shape:l}}),p=vw({inputs:{a:s,b:d},backend:n}),h=dT({inputs:{x:p},backend:n}),f=Dd({inputs:{x:h},backend:n,attrs:{axis:c,keepDims:!1}}),m=yt({inputs:{x:f},backend:n,attrs:{shape:l}}),g=kw({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var Vq={kernelName:Eo,backendName:"cpu",kernelFunc:e2};function Uq(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r;ke(s,"multinomial");let c=i?s:e2({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=c.shape[0],l=c.shape[1],d=n.data.get(c.dataId).values,p=[u,a],h=w.makeZerosTypedArray(w.sizeFromShape(p),"int32");for(let f=0;f<u;++f){let m=f*l,g=new Float32Array(l-1);g[0]=d[m];for(let v=1;v<g.length;++v)g[v]=g[v-1]+d[m+v];let b=Wq.alea(o.toString()),y=f*a;for(let v=0;v<a;++v){let x=b();h[y+v]=g.length;for(let k=0;k<g.length;k++)if(x<g[k]){h[y+v]=k;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(p,"int32",h)}var Gq={kernelName:ah,backendName:"cpu",kernelFunc:Uq},Hq=as.nonMaxSuppressionV3Impl;function jq(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=r;ke(s,"NonMaxSuppression");let u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,{selectedIndices:d}=Hq(u,l,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var qq={kernelName:Nc,backendName:"cpu",kernelFunc:jq},Kq=as.nonMaxSuppressionV4Impl;function Xq(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:u}=r;ke(s,"NonMaxSuppressionPadded");let l=n.data.get(s.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:h}=Kq(l,d,o,i,c,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var Yq={kernelName:_c,backendName:"cpu",kernelFunc:Xq},Zq=as.nonMaxSuppressionV5Impl;function Jq(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=r;ke(s,"NonMaxSuppressionWithScore");let l=n.data.get(s.dataId).values,d=n.data.get(a.dataId).values,p=o,h=i,f=c,m=u,{selectedIndices:g,selectedScores:b}=Zq(l,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var Qq={kernelName:Ec,backendName:"cpu",kernelFunc:Jq};function e8(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r;ke(s,"oneHot");let c=w.sizeFromShape(s.shape),u=new Float32Array(c*a);u.fill(i);let l=n.data.get(s.dataId).values;for(let d=0;d<c;++d)l[d]>=0&&l[d]<a&&(u[d*a+l[d]]=o);return n.makeTensorInfo([...s.shape,a],"int32",u)}var t8={kernelName:mo,backendName:"cpu",kernelFunc:e8};function sm(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){let s=li({inputs:{input:r},backend:n}),a=sm({inputs:{x:s},backend:n}),o=Su({inputs:{input:r},backend:n}),i=sm({inputs:{x:o},backend:n}),c=tr({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}else return Cw({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var n8={kernelName:Kc,backendName:"cpu",kernelFunc:sm};function t2(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){let s=li({inputs:{input:r},backend:n}),a=t2({inputs:{x:s},backend:n}),o=Su({inputs:{input:r},backend:n}),i=sm({inputs:{x:o},backend:n}),c=tr({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}else return Cw({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var r8={kernelName:Ac,backendName:"cpu",kernelFunc:t2};function n2(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(t.length===1)return rm({inputs:{input:t[0]},backend:n,attrs:{dim:s}});let a=t[0].shape,o=t[0].dtype;t.forEach(l=>{w.assertShapesMatch(a,l.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],c=t.map(l=>{let d=rm({inputs:{input:l},backend:n,attrs:{dim:s}});return i.push(d),d}),u=Cu({inputs:c,backend:n,attrs:{axis:s}});return i.forEach(l=>n.disposeIntermediateTensorInfo(l)),u}var s8={kernelName:Dc,backendName:"cpu",kernelFunc:n2};function a8(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;ke(s,"pad");let i=a.map((y,v)=>y[0]+s.shape[v]+y[1]),c=a.map(y=>y[0]),u=n.data.get(s.dataId).values,l=w.sizeFromShape(s.shape),d=s.shape.length,p=w.computeStrides(s.shape),h=w.sizeFromShape(i),f=i.length,m=w.computeStrides(i),g=w.getTypedArrayFromDType(s.dtype,h);o!==0&&g.fill(o);for(let y=0;y<l;y++){let x=w.indexToLoc(y,d,p).map((C,N)=>C+c[N]),k=w.locToIndex(x,f,m);g[k]=u[y]}return{dataId:n.write(g,i,s.dtype),shape:i,dtype:s.dtype}}var r2={kernelName:go,backendName:"cpu",kernelFunc:a8},o8=Bt((e,t)=>Math.pow(e,t)),i8=en(bo,o8),c8={kernelName:bo,backendName:"cpu",kernelFunc:i8};function u8(e){let{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:o}=n,i=bw(r,s,o,a);return t.makeTensorInfo([i.length],a,i)}var l8={kernelName:Al,backendName:"cpu",kernelFunc:u8},d8=ot(Fc,e=>1/e),p8={kernelName:Fc,backendName:"cpu",kernelFunc:d8};function h8(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;ke(s,"resizeBilinear");let c=w.computeStrides(s.shape),[u,l]=i,[d,p,h,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(w.sizeFromShape([d,u,l,f])),b=[a&&u>1?p-1:p,a&&l>1?h-1:h],y=[a&&u>1?u-1:u,a&&l>1?l-1:l],v=0,x=b[0]/y[0],k=b[1]/y[1];for(let C=0;C<d;C++)for(let N=0;N<u;N++){let $;o?$=x*(N+.5)-.5:$=x*N;let R=Math.max(0,Math.floor($)),O=$-R,D=Math.min(p-1,Math.ceil($)),P=C*c[0]+R*c[1],T=C*c[0]+D*c[1];for(let L=0;L<l;L++){let G;o?G=k*(L+.5)-.5:G=k*L;let j=Math.max(0,Math.floor(G)),q=G-j,K=Math.min(h-1,Math.ceil(G)),te=P+j*c[2],ne=T+j*c[2],re=P+K*c[2],se=T+K*c[2];for(let J=0;J<f;J++){let ie=m[te+J],ue=m[ne+J],le=m[re+J],me=m[se+J],Ce=ie+(le-ie)*q,Te=ue+(me-ue)*q,_e=Ce+(Te-Ce)*O;g[v++]=_e}}}return n.makeTensorInfo([d,u,l,f],"float32",g)}var f8={kernelName:xo,backendName:"cpu",kernelFunc:h8};function m8(e){let{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;ke([a,s],"resizeBilinearGrad");let i=w.computeStrides(s.shape),[c,u,l,d]=s.shape,[,p,h]=a.shape,f=new Float32Array(c*u*l*d),m=[o&&p>1?u-1:u,o&&h>1?l-1:l],g=[o&&p>1?p-1:p,o&&h>1?h-1:h],b=m[0]/g[0],y=m[1]/g[1],v=n.data.get(a.dataId).values,x=0;for(let k=0;k<c;k++){let C=k*i[0];for(let N=0;N<p;N++){let $=N*b,R=Math.floor($),O=Math.min(Math.ceil($),u-1),D=C+R*i[1],P=C+O*i[1],T=$-R,L=1-T;for(let G=0;G<h;G++){let j=G*y,q=Math.floor(j),K=Math.min(Math.ceil(j),l-1),te=j-q,ne=1-te,re=D+q*i[2],se=D+K*i[2],J=P+q*i[2],ie=P+K*i[2],ue=L*ne,le=L*te,me=T*ne,Ce=T*te;for(let Te=0;Te<d;Te++){let _e=v[x++];f[re+Te]+=_e*ue,f[se+Te]+=_e*le,f[J+Te]+=_e*me,f[ie+Te]+=_e*Ce}}}}return n.makeTensorInfo([c,l,u,d],"float32",f)}var g8={kernelName:ch,backendName:"cpu",kernelFunc:m8};function b8(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;ke(s,"resizeNearestNeighbor");let c=w.computeStrides(s.shape),[u,l]=i,[d,p,h,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(d*u*l*f),b=[a&&u>1?p-1:p,a&&l>1?h-1:h],y=[a&&u>1?u-1:u,a&&l>1?l-1:l],v=b[0]/y[0],x=b[1]/y[1],k=0;for(let C=0;C<d;C++){let N=C*c[0];for(let $=0;$<u;$++){let R=o?v*($+.5):v*$,O=Math.min(p-1,a?Math.round(R):Math.floor(R));o&&(O=Math.max(0,O));let D=N+O*c[1];for(let P=0;P<l;P++){let T=o?x*(P+.5):x*P,L=Math.min(h-1,a?Math.round(T):Math.floor(T));o&&(L=Math.max(0,L));let G=D+L*c[2];for(let j=0;j<f;j++){let q=m[G+j];g[k++]=q}}}}return n.makeTensorInfo([d,u,l,f],s.dtype,g)}var y8={kernelName:Dl,backendName:"cpu",kernelFunc:b8};function v8(e){let{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;ke([a,s],"resizeNearestNeighborGrad");let i=w.computeStrides(s.shape),c=w.computeStrides(a.shape),[u,l,d,p]=s.shape,[,h,f]=a.shape,m=new Float32Array(u*l*d*p),g=n.data.get(a.dataId).values,b=[o&&h>1?l-1:l,o&&f>1?d-1:d],y=[o&&h>1?h-1:h,o&&f>1?f-1:f],v=b[0]/y[0],x=b[1]/y[1],k=1/v,C=1/x,N=Math.ceil(k)*2+2,$=Math.ceil(C)*2+2;for(let R=0;R<u;R++){let O=R*i[0];for(let D=0;D<l;D++){let P=O+D*i[1],T=Math.floor(D*k),L=Math.floor(T-N/2);for(let G=0;G<d;G++){let j=P+G*i[2],q=Math.floor(G*C),K=Math.floor(q-$/2);for(let te=0;te<p;te++){let ne=0;for(let re=0;re<N;re++){let se=re+L;if(se<0||se>=h)continue;let J=O+se*c[1],ie=se*v,ue=Math.min(l-1,o?Math.round(ie):Math.floor(ie));if(D===ue)for(let le=0;le<$;le++){let me=le+K;if(me<0||me>=f)continue;let Ce=J+me*c[2],Te=me*x,_e=Math.min(d-1,o?Math.round(Te):Math.floor(Te));G===_e&&(ne+=g[Ce+te])}}m[j+te]=ne}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}var x8={kernelName:ih,backendName:"cpu",kernelFunc:v8};function w8(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;ke(s,"reverse");let o=s.shape.length,i=w.parseAxisParam(a,s.shape);if(o===0)return ds({inputs:{x:s},backend:n});let c=new Wt(s.shape,s.dtype),u=n.bufferSync(s);for(let l=0;l<c.size;l++){let d=c.indexToLoc(l),p=d.slice();i.forEach(h=>p[h]=s.shape[h]-1-p[h]),c.set(u.get(...p),...d)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}var k8={kernelName:ko,backendName:"cpu",kernelFunc:w8},I8={kernelName:Xc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,c=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[u,l,d,p]=r.shape,[h,f]=_.getImageCenter(o,l,d),m=255,g=Math.sin(s),b=Math.cos(s),y=i.data.get(r.dataId).values;for(let x=0;x<u;x++){let k=x*d*l*p;for(let C=0;C<l;C++){let N=C*(d*p);for(let $=0;$<d;$++){let R=$*p;for(let O=0;O<p;O++){let D=[u,C,$,O],P=D[2],T=D[1],L=(P-h)*b-(T-f)*g,G=(P-h)*g+(T-f)*b;L=Math.round(L+h),G=Math.round(G+f);let j=a;if(typeof a!="number"&&(O===3?j=m:j=a[O]),L>=0&&L<d&&G>=0&&G<l){let K=G*(d*p),te=L*p,ne=k+K+te+O;j=y[ne]}let q=k+N+R+O;c[q]=j}}}}return{dataId:i.write(c,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},S8=ot(Io,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),C8={kernelName:Io,backendName:"cpu",kernelFunc:S8};function s2(e,t,n,r,s,a,o,i,c,u){let l=[r/s,s],d=e.values,p=t.values;if(r===0)return ze(n,t.dtype);let h=ze(l,t.dtype);h.values.fill(c);for(let f=0;f<a;f++){let m=[],g=0;for(let b=0;b<o;b++){let y=d[f*o+b];m.push(y),g+=y*i[b]}if(g<0||g>=r/s)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let b=0;b<s;b++)u?h.values[g*s+b]+=p[f*s+b]:h.values[g*s+b]=t.rank===0?p[0]:p[f*s+b]}return h}function T8(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=_.calculateShapes(a,s,o),p=!0,h=n.bufferSync(s),f=n.bufferSync(a),m=s2(h,f,o,d,u,c,i,l,0,p);return n.makeTensorInfo(o,m.dtype,m.values)}var N8={kernelName:Pc,backendName:"cpu",kernelFunc:T8};function _8(e){let{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;ke([r,s,a],"select");let o=r.shape.length,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,l=kr(s.dtype,a.dtype),d=w.makeZerosTypedArray(w.sizeFromShape(s.shape),l),p=0,h=o===0||o>1||s.shape.length===1?1:w.sizeFromShape(s.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<h;m++)i[f]===1?d[p++]=c[f]:d[p++]=u[f];return n.makeTensorInfo(s.shape,l,d)}var E8={kernelName:Oc,backendName:"cpu",kernelFunc:_8},A8=_.SELU_SCALEALPHA,D8=_.SELU_SCALE,$8=ot(Mc,e=>e>=0?D8*e:A8*(Math.exp(e)-1)),F8={kernelName:Mc,backendName:"cpu",kernelFunc:$8},R8=ot(zc,e=>e<0?-1:e>0?1:0),P8={kernelName:zc,backendName:"cpu",kernelFunc:R8},O8=ot(Co,e=>Math.sin(e)),M8={kernelName:Co,backendName:"cpu",kernelFunc:O8},L8=ot(Bc,e=>Math.sinh(e)),B8={kernelName:Bc,backendName:"cpu",kernelFunc:L8},z8=11920928955078125e-23,a2=Math.log(z8)+2,W8=ot(Wc,e=>{let t=e>-a2,n=e<a2,r=Math.exp(e),s;return n?s=r:t?s=e:s=Math.log(1+r),s}),V8={kernelName:Wc,backendName:"cpu",kernelFunc:W8};function U8(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;ke([s],"spaceToBatchND");let i=w.sizeFromShape(a),c=[[0,0]];c.push(...o);for(let C=1+a.length;C<s.shape.length;++C)c.push([0,0]);let u=r2.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),l=_.getReshaped(u.shape,a,i,!1),d=_.getPermuted(l.length,a.length,!1),p=_.getReshapedPermuted(u.shape,a,i,!1),m=yt({inputs:{x:u},backend:n,attrs:{shape:l}}),y=hr({inputs:{x:m},backend:n,attrs:{perm:d}}),k=yt({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),k}var G8={kernelName:Vc,backendName:"cpu",kernelFunc:U8};function H8(e){let{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${s.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[d,p,h,f,m]=AT(i,r.shape,r.dtype,c,s.dtype,u,l);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],s.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var j8={kernelName:uh,backendName:"cpu",kernelFunc:H8};function q8(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,c=Array.from(n.data.get(a.dataId).values),[u,l,d]=DT(i,r.shape,r.dtype,o,c);return[n.makeTensorInfo(l,r.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var K8={kernelName:lh,backendName:"cpu",kernelFunc:q8};function X8(e){let{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);let o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,[u,l]=yw(o,r.shape,r.dtype,i,c,!0);return n.makeTensorInfo(l,r.dtype,u)}var Y8={kernelName:dh,backendName:"cpu",kernelFunc:X8};function Z8(e){let{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);let o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,[u,l]=yw(o,r.shape,r.dtype,i,c);return n.makeTensorInfo(l,r.dtype,u)}var J8={kernelName:ph,backendName:"cpu",kernelFunc:Z8};function Q8(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=_.calculateShapes(a,s,i),h=!1,f=n.bufferSync(s),m=n.bufferSync(a),g=n.data.get(o.dataId).values[0],b=s2(f,m,i,p,l,u,c,d,g,h);return n.makeTensorInfo(i,b.dtype,b.values)}var eK={kernelName:hh,backendName:"cpu",kernelFunc:Q8};function tK(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=w.parseAxisParam(o,s.shape)[0],c=_.prepareSplitSize(s,a,i),u=new Array(s.shape.length).fill(0),l=s.shape.slice();return c.map(d=>{let p=[...l];p[i]=d;let h=di({inputs:{x:s},backend:n,attrs:{begin:u,size:p}});return u[i]+=d,h})}var nK={kernelName:Uc,backendName:"cpu",kernelFunc:tK},rK={kernelName:$l,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;ke(n,"square");let s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let i=0;i<s.length;++i){let c=s[i];a[i]=c*c}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},sK=ot(ta,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),aK={kernelName:ta,backendName:"cpu",kernelFunc:sK};function oK(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:p}=r;ke(s,"stridedSlice");let{nonStrided:h,$begin:f,$strides:m,size:g,newShape:b,outShape:y}=vn.sliceInfo(s.shape,a,o,i,c,u,l,d,p),v=yt({inputs:{x:s},backend:n,attrs:{shape:b}}),x;if(h){let C=di({inputs:{x:v},backend:n,attrs:{begin:f,size:g}});x=yt({inputs:{x:C},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(C)}else if(y.some(C=>C===0))x=n.makeTensorInfo(y,s.dtype,[]);else{let C=n.bufferSync(v),N=FT(y,C,m,f);x=n.makeTensorInfo(N.shape,N.dtype,N.values)}let k=yt({inputs:{x},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(x),k}var iK={kernelName:Gc,backendName:"cpu",kernelFunc:oK};function cK(e){let{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:u}=r,{data:l,dataSplits:d}=t,p=n.data.get(l.dataId).values,h=n.data.get(d.dataId).values,[f,m]=RT(p,h,s,a,o,i,c,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var uK={kernelName:fh,backendName:"cpu",kernelFunc:cK};function lK(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values[0],[u,l,d]=PT(i,c,s),p=l.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var dK={kernelName:mh,backendName:"cpu",kernelFunc:lK};function pK(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=OT(o,s);return n.makeTensorInfo(a.shape,"int32",i)}var hK={kernelName:gh,backendName:"cpu",kernelFunc:pK},fK=ot($o,e=>Math.tan(e)),mK={kernelName:$o,backendName:"cpu",kernelFunc:fK},gK=ot(Fo,e=>Math.tanh(e)),bK={kernelName:Fo,backendName:"cpu",kernelFunc:gK};function yK(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;ke(s,"tile");let o=LT(n.bufferSync(s),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var vK={kernelName:ea,backendName:"cpu",kernelFunc:yK};function xK(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r;ke(s,"topk");let i=n.data.get(s.dataId).values,[c,u]=zT(i,s.shape,s.dtype,a,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var wK={kernelName:Hc,backendName:"cpu",kernelFunc:xK};function kK(e){let{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:u}=n,[l,d,p,h]=s.shape,[f,m]=u!=null?u:[d,p],g=[l,f,m,h],b=w.computeStrides(s.shape),y=b[0],v=b[1],x=b[2],k=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(g));k.fill(c);let C=r.data.get(s.dataId).values,N=r.data.get(a.dataId).values;for(let R=0;R<l;++R){let O=a.shape[0]===1?N:N.subarray(R*8,R*8+8);for(let D=0;D<f;++D)for(let P=0;P<m;++P)for(let T=0;T<h;++T){let L,G=O[6]*P+O[7]*D+1;if(G===0)continue;let j=(O[0]*P+O[1]*D+O[2])/G,q=(O[3]*P+O[4]*D+O[5])/G,K=o2(j,p,i),te=o2(q,d,i);switch(o){case"nearest":L=_K(C,d,p,y,v,x,R,te,K,T,c);break;case"bilinear":L=EK(C,d,p,y,v,x,R,te,K,T,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let ne=R*y+D*v+P*x+T;k[ne]=L}return r.makeTensorInfo(g,s.dtype,k)}return{dataId:r.write(k,g,s.dtype),shape:s.shape,dtype:s.dtype}}var IK={kernelName:jc,backendName:"cpu",kernelFunc:kK};function o2(e,t,n){switch(n){case"reflect":return SK(e,t);case"wrap":return CK(e,t);case"nearest":return NK(e,t);case"constant":default:return TK(e,t)}}function SK(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=2*t;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-t?n+r:-n-1}else if(n>t-1)if(t<=1)n=0;else{let r=2*t;n-=r*Math.trunc(n/r),n>=t&&(n=r-n-1)}return w.clamp(0,n,t-1)}function CK(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=t-1;n+=t*(Math.trunc(-n/r)+1)}else if(n>t-1)if(t<=1)n=0;else{let r=t-1;n-=t*Math.trunc(n/r)}return w.clamp(0,n,t-1)}function TK(e,t){return e}function NK(e,t){return w.clamp(0,e,t-1)}function $d(e,t,n,r,s,a,o,i,c,u,l){let d=o*r+i*s+c*a+u;return 0<=i&&i<t&&0<=c&&c<n?e[d]:l}function _K(e,t,n,r,s,a,o,i,c,u,l){let d=Math.round(i),p=Math.round(c);return $d(e,t,n,r,s,a,o,d,p,u,l)}function EK(e,t,n,r,s,a,o,i,c,u,l){let d=Math.floor(i),p=Math.floor(c),h=d+1,f=p+1,m=(f-c)*$d(e,t,n,r,s,a,o,d,p,u,l)+(c-p)*$d(e,t,n,r,s,a,o,d,f,u,l),g=(f-c)*$d(e,t,n,r,s,a,o,h,p,u,l)+(c-p)*$d(e,t,n,r,s,a,o,h,f,u,l);return(h-i)*m+(i-d)*g}function AK(e){let{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;ke(a,"unique");let o=r.data.get(a.dataId).values,{outputValues:i,outputShape:c,indices:u}=WT(o,s,a.shape,a.dtype);return[r.makeTensorInfo(c,a.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}var DK={kernelName:bh,backendName:"cpu",kernelFunc:AK};function $K(e){let{inputs:t,backend:n,attrs:r}=e,{value:s}=t,{axis:a}=r;a<0&&(a+=s.shape.length);let o=s.shape.length,i=s.shape[a],c=new Array(o-1),u=0;for(let h=0;h<o;h++)h!==a&&(c[u++]=s.shape[h]);let l=new Array(o).fill(0),d=s.shape.slice();d[a]=1;let p=new Array(i);for(let h=0;h<p.length;h++){l[a]=h;let f=di({inputs:{x:s},backend:n,attrs:{begin:l,size:d}});p[h]=yt({inputs:{x:f},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(f)}return p}var FK={kernelName:qc,backendName:"cpu",kernelFunc:$K};function RK(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r;ke(s,"unsortedSegmentSum");let i=s.shape.length,c=a.shape.length,u=[],l=[],d=i-c,p=a;for(let f=0;f<d;++f){let m=rm({inputs:{input:p},backend:n,attrs:{dim:f+1}});p=m,l.push(m)}for(let f=0;f<o;++f){let m=w.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),b=uT({inputs:{a:g,b:p},backend:n}),y=wa({inputs:{x:b},backend:n,attrs:{dtype:"float32"}}),v=tm({inputs:{a:y,b:s},backend:n}),x=Dd({inputs:{x:v},backend:n,attrs:{axis:0,keepDims:!1}});u.push(x),l.push(g),l.push(b),l.push(y),l.push(v),l.push(x)}let h=n2({inputs:u,backend:n,attrs:{axis:0}});return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var PK={kernelName:Fl,backendName:"cpu",kernelFunc:RK},OK=[U6,OH,H6,q6,VH,X6,Z6,Q6,t5,r5,a5,i5,u5,p5,f5,b5,v5,w5,I5,W6,C5,N5,E5,D5,zH,GH,F5,MH,P5,M5,z5,V5,L5,j5,K5,G5,Y5,J5,ej,nj,sj,oj,ij,uj,dj,hj,fj,gj,mj,Iw,vj,R6,wj,HH,Ej,jH,Aj,KH,Oj,Mj,Bj,YH,Vj,Gj,jj,Kj,Yj,JH,e6,LH,Jj,O5,eq,nq,sq,P6,n6,s6,oq,o6,cq,dq,hq,gq,yq,xq,c6,Iq,Cq,Nq,Eq,Dq,wq,Fq,Pq,l6,Mq,zq,Gq,p6,f6,qq,Yq,Qq,g6,t8,r8,s8,r2,c8,M6,v6,l8,BH,p8,L6,B6,z6,f8,g8,y8,x8,k8,I8,C8,w6,N8,E8,F8,I6,P8,M8,B8,S6,Vq,V8,G8,j8,K8,Y8,J8,eK,nK,N6,rK,E6,aK,iK,uK,dK,hK,F6,bj,mK,bK,vK,wK,b6,IK,DK,FK,PK,n8];for(let e of OK)Pl(e);var i2={};Re(i2,{assertNotComplex:()=>Nu,bindCanvasToFramebuffer:()=>KK,bindColorTextureToFramebuffer:()=>im,bindTextureToProgramUniformSampler:()=>I2,bindTextureUnit:()=>x2,bindVertexBufferToProgramAttribute:()=>_w,callAndCheck:()=>xe,canBeRepresented:()=>u2,createFragmentShader:()=>p2,createFramebuffer:()=>v2,createProgram:()=>h2,createStaticIndexBuffer:()=>g2,createStaticVertexBuffer:()=>m2,createTexture:()=>b2,createVertexShader:()=>d2,getBatchDim:()=>hi,getExtensionOrThrow:()=>Pd,getFramebufferErrorMessage:()=>S2,getMaxTexturesInShader:()=>_2,getNumChannels:()=>jK,getProgramUniformLocation:()=>k2,getProgramUniformLocationOrThrow:()=>w2,getRowsCols:()=>fi,getShapeAs3D:()=>cm,getTextureShapeFromLogicalShape:()=>T2,getWebGLDisjointQueryTimerVersion:()=>E2,getWebGLErrorMessage:()=>l2,getWebGLMaxTextureSize:()=>N2,hasExtension:()=>mr,isCapableOfRenderingToFloatTexture:()=>A2,isDownloadFloatTextureEnabled:()=>D2,isReshapeFree:()=>Md,isWebGLFenceEnabled:()=>$2,isWebGLVersionEnabled:()=>Aw,linkProgram:()=>f2,resetMaxTextureSize:()=>XK,resetMaxTexturesInShader:()=>YK,unbindColorTextureFromFramebuffer:()=>Ew,unbindTextureUnit:()=>qK,validateFramebuffer:()=>Od,validateProgram:()=>om,validateTextureSize:()=>y2});var pi={},Tw={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function c2(e,t){pi[e]=t}function ps(e){if(!(e in pi)){let n=LK(e);if(n!==null)pi[e]=n;else return console.log("Could not get context for WebGL version",e),null}let t=pi[e];return t.isContextLost()?(delete pi[e],ps(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),pi[e])}function MK(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function LK(e){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=MK(e);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete pi[e]},!1),e===1?t.getContext("webgl",Tw)||t.getContext("experimental-webgl",Tw):t.getContext("webgl2",Tw)}var Fd;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(Fd||(Fd={}));var fr;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(fr||(fr={}));var on;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(on||(on={}));function Rd(e,t){return[t,e]}function BK(e,t){return e*t}function am(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function Tu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function zK(e,t){let[n,r]=Tu(e,t);return n*r*4}function Nw(e,t){let n=e,r,s,a,o,i,c,u,l,d,p;return Q().getNumber("WEBGL_VERSION")===2?(r=n.R32F,s=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,u=4,l=1,d=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,s=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,u=4,l=4,d=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT),c=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:u,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:p}}function xe(e,t){let n=t();return Q().getBool("DEBUG")&&WK(e),n}function WK(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+l2(e,t))}var VK=596e-10,UK=65504;function u2(e){return!!(Q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||VK<Math.abs(e)&&Math.abs(e)<UK)}function l2(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Pd(e,t){return Ps(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function d2(e,t){let n=Ps(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(xe(e,()=>e.shaderSource(n,t)),xe(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function p2(e,t){let n=Ps(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(xe(e,()=>e.shaderSource(n,t)),xe(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw HK(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var GK=/ERROR: [0-9]+:([0-9]+):/g;function HK(e,t){let n=GK.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+n[1],s=e.split(`
`),a=s.length.toString().length+2,o=s.map((d,p)=>w.rightPad((p+1).toString(),a)+d),i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);let c=o.slice(0,r-1),u=o.slice(r-1,r),l=o.slice(r);console.log(c.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function h2(e){return Ps(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function f2(e,t){if(xe(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function om(e,t){if(xe(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function m2(e,t){let n=Ps(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return xe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),xe(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function g2(e,t){let n=Ps(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return xe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),xe(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function jK(){return Q().getNumber("WEBGL_VERSION")===2?1:4}function b2(e){return Ps(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function y2(e,t){let n=Q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let r=`[${e}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n){let r=`[${e}x${t}]`,s=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function v2(e){return Ps(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function _w(e,t,n,r,s,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(xe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),xe(e,()=>e.vertexAttribPointer(i,s,e.FLOAT,!1,a,o)),xe(e,()=>e.enableVertexAttribArray(i)),!0)}function x2(e,t,n){C2(e,n),xe(e,()=>e.activeTexture(e.TEXTURE0+n)),xe(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function qK(e,t){C2(e,t),xe(e,()=>e.activeTexture(e.TEXTURE0+t)),xe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function w2(e,t,n){return Ps(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function k2(e,t,n){return e.getUniformLocation(t,n)}function I2(e,t,n,r){xe(e,()=>x2(e,t,r)),xe(e,()=>e.uniform1i(n,r))}function KK(e){xe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),xe(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),xe(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function im(e,t,n){xe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),xe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Ew(e,t){xe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),xe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Od(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+S2(e,t))}function S2(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Ps(e,t,n){let r=xe(e,()=>t());if(r==null)throw new Error(n);return r}function C2(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let s=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${s}.`)}}function hi(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function fi(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function cm(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[hi(e),...fi(e)]),t}function T2(e,t=!1){let n=Q().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((s,a)=>a>=e.length-2?w.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let r=w.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let s=hi(e),a=2,o=2;return e.length&&([a,o]=fi(e)),r=s*(a/2)*(o/2),w.sizeToSquarishShape(r).map(i=>i*2)}return w.sizeToSquarishShape(r)}function um(e){return e%2==0}function Md(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||um(n)&&um(r)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&um(e[0])&&um(t[0])}var lm,dm;function N2(e){if(lm==null){let t=ps(e);lm=t.getParameter(t.MAX_TEXTURE_SIZE)}return lm}function XK(){lm=null}function YK(){dm=null}function _2(e){if(dm==null){let t=ps(e);dm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,dm)}function E2(e){if(e===0)return 0;let t,n=ps(e);return mr(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:mr(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function mr(e,t){return e.getExtension(t)!=null}function Aw(e){try{if(ps(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function A2(e){if(e===0)return!1;let t=ps(e);if(e===1){if(!mr(t,"OES_texture_float"))return!1}else if(!mr(t,"EXT_color_buffer_float"))return!1;return Dw(t)}function D2(e){if(e===0)return!1;let t=ps(e);if(e===1){if(!mr(t,"OES_texture_float")||!mr(t,"WEBGL_color_buffer_float"))return!1}else{if(mr(t,"EXT_color_buffer_float"))return Dw(t);let r="EXT_color_buffer_half_float";if(mr(t,r)){let s=t.getExtension(r);return ZK(t,s)}return!1}return Dw(t)}function Dw(e){let t=Nw(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,s,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function ZK(e,t){let n=Nw(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let s=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}function $2(e){return e!==2?!1:ps(e).fenceSync!=null}function Nu(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Ne=Q();Ne.registerFlag("HAS_WEBGL",()=>Ne.getNumber("WEBGL_VERSION")>0);Ne.registerFlag("WEBGL_VERSION",()=>Aw(2)?2:Aw(1)?1:0);Ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ne.get("WEBGL_VERSION")===2);Ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ne.registerFlag("WEBGL_PACK",()=>Ne.getBool("HAS_WEBGL"));Ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_CLIP",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_REDUCE",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_CONV_IM2COL",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>N2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>_2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Ne.getNumber("WEBGL_VERSION");return e===0?0:E2(e)});Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ul.isMobile());Ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>A2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ne.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>D2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>$2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Ul.isMobile()&&Ne.getBool("IS_CHROME")?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function In(){let e,t,n,r,s,a,o,i,c,u;return Q().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,c="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:c,defineRound:u}}function mi(e,t,n="index"){let r=w.computeStrides(t);return r.map((s,a)=>{let o=`int ${e[a]} = ${n} / ${s}`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${s}`:`index -= ${e[a]} * ${s}`;return`${o}; ${i};`}).join("")}function pm(e,t,n="index"){let r=w.computeStrides(t);return r.map((s,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function JK(e,t){let n=e.length,r=e.map(a=>`${t}[${a}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}function QK(e,t,n="index"){let r=e.map((a,o)=>o),s=JK(r,t);return s.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${s[o]}`,c=o===s.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${s[o]}`:`index -= ${e[o]} * ${s[o]}`;return`${i}; ${c};`}).join("")}function $w(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Fw(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var F2=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:R2}=_;function eX(e,t,n){let r=[];if(e.forEach(h=>{let f=w.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Rw(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:r.push(`uniform int ${h.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{r.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let s=r.join(`
`),a=e.map(h=>tX(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=In(),c=sX(i),u,l,d=iX(i);return t.isPacked?(u=nX(t.logicalShape,o,n.enableShapeUniforms),l=oX(i)):(u=rX(t.logicalShape,o,n.enableShapeUniforms),l=aX(i)),n.packedInputs&&(d+=dX),[d,c,l,s,u,a,n.userCode].join(`
`)}function _u(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return IX(e,t);case 1:return CX(e,t);case 2:return NX(e,t);case 3:return EX(e,t);case 4:return DX(e,t);case 5:return $X(e);case 6:return FX(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function P2(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return kX(e);case 1:return SX(e,t);case 2:return TX(e,t);case 3:return _X(e,t);default:return AX(e,t)}}function tX(e,t,n=!1,r){let s="";n?s+=P2(e,r):s+=_u(e,r);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?s+=RX(e,t):s+=PX(e,t)),s}function nX(e,t,n){switch(e.length){case 0:return O2();case 1:return pX(e,t,n);case 2:return xX(e,t,n);case 3:return fX(e,t,n);default:return gX(e,t,n)}}function rX(e,t,n){switch(e.length){case 0:return O2();case 1:return hX(e,t,n);case 2:return wX(e,t,n);case 3:return mX(e,t,n);case 4:return bX(e,t,n);case 5:return yX(e,t);case 6:return vX(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function sX(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function aX(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function oX(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function iX(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${cX}
    ${uX}
    ${lX}
  `}var cX=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,uX=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,lX=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,dX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function O2(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function pX(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function hX(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function fX(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function mX(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${pm(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let r=mi(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function gX(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2),o=a,i="",c="b, r, c";for(let u=2;u<e.length-1;u++)o*=e[e.length-u-1],i=`
      int b${u} = index / ${o};
      index -= b${u} * ${o};
    `+i,c=`b${u}, `+c;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${e.length}(${c});
    }
  `}function bX(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${pm(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let r=mi(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function yX(e,t){let n=mi(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function vX(e,t){let n=mi(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function xX(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;let s=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function wX(e,t,n){return w.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function gi(e){return`offset${e}`}function kX(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=In();return`
    vec4 ${n}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function IX(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[s,a]=e.shapeInfo.texShape;if(s===1&&a===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=gi(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,c]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${i}, ${c}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function SX(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=In();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function CX(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Eu(e)}
      }
    `;let s=e.shapeInfo.texShape,a=s[0],o=s[1];if(o===1&&a===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=gi(n);return o===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function TX(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],c=In();if(a!=null&&w.arraysEqual(n,a))return t?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${c.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${c.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${c.texture2D}(${r}, uv);
    }
  `;let u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=Math.ceil(n[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);
      return ${c.texture2D}(${r}, uv);
    }
  `}function NX(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(a!=null&&w.arraysEqual(n,a)){if(t)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let p=a[0],h=a[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:o,keptDims:i}=w.squeezeShape(n),c=o;if(c.length<n.length){let p=Au(e,c),h=["row","col"];return`
      ${_u(p,t)}
      float ${s}(int row, int col) {
        return ${s}(${Du(h,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Eu(e)}
      }
    `;let u=a[0],l=a[1],d=gi(r);return l===1?t?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${r}, uv);
    }
  `:u===1?t?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${l}, index);
    return sampleTexture(${r}, uv);
  }
`}function _X(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let p=n.slice(1),h=[1,2],f=Au(e,p),m=["b","row","col"];return`
        ${P2(f,t)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${Du(m,h)});
        }
      `}let i=In();if(t)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `;let c=o[0],u=o[1],l=Math.ceil(n[2]/2),d=l*Math.ceil(n[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${u}, ${d}, ${l}, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `}function EX(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:c}=w.squeezeShape(n),u=i;if(u.length<n.length){let m=Au(e,u),g=["row","col","depth"];return`
        ${_u(m,t)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${Du(g,c)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${Eu(e)}
      }
    `;let l=e.shapeInfo.texShape,d=l[0],p=l[1],h=e.shapeInfo.flatOffset;if(p===a&&h==null)return t?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(p===o&&h==null)return t?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;let f=gi(r);return t?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${r}, uv);
      }
  `}function AX(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=In();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=c[0],l=c[1],d=Math.ceil(a[o-1]/2),p=d*Math.ceil(a[o-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<o-1;m++)h=`int b${m}, `+h,p*=a[o-m-1],f=`b${m} * ${p} + `+f;return`
    vec4 ${r}(${h}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${u});
      return ${s.texture2D}(${n}, uv);
    }
  `}function DX(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:c,keptDims:u}=w.squeezeShape(n);if(c.length<n.length){let y=Au(e,c),v=["row","col","depth","depth2"];return`
      ${_u(y,t)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${Du(v,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${Eu(e)}
      }
    `;let l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(h===i&&l==null)return t?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(h===a&&l==null)return t?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;let b=gi(r);return t?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${p}, ${h}, index + ${b});
      return sampleTexture(${r}, uv);
    }
  `}function $X(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,o=t[2]*a,i=t[1]*o,{newShape:c,keptDims:u}=w.squeezeShape(t);if(c.length<t.length){let m=Au(e,c),g=["row","col","depth","depth2","depth3"];return`
      ${_u(m)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Du(g,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${s})) +
          depth3;
        ${Eu(e)}
      }
    `;let l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===s&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=gi(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${s} + depth3 + ${f};
      vec2 uv = uvFromFlat(${p}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function FX(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=w.squeezeShape(t);if(s.length<t.length){let g=Au(e,s),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${_u(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Du(b,a)});
      }
    `}let o=t[5],i=t[4]*o,c=t[3]*i,u=t[2]*c,l=t[1]*u;if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${u}, ${c}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${Eu(e)}
      }
    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===l&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${c}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=gi(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${u} + depth * ${c} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Eu(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function RX(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=R2(e.shapeInfo.logicalShape,t.logicalShape),c=ht(o),u=o-a,l,d=["x","y","z","w","u","v"];a===0?l="":o<2&&i.length>=1?l="coords = 0;":l=i.map(y=>`coords.${d[y+u]} = 0;`).join(`
`);let p="";o<2&&a>0?p="coords":p=e.shapeInfo.logicalShape.map((y,v)=>`coords.${d[v+u]}`).join(", ");let h="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,b=w.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!b)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!b)o===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){let y=a-2,v=a-1;i.indexOf(y)>-1&&i.indexOf(v)>-1?h="return vec4(outputValue.x);":i.indexOf(y)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(v)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${c} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${r}(${p});
      ${h}
    }
  `}function PX(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===c&&e.shapeInfo.flatOffset==null&&w.arraysEqual(o,a))return`
      float ${s}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let u=ht(c),l=R2(e.shapeInfo.logicalShape,t.logicalShape),d=c-i,p,h=["x","y","z","w","u","v"];i===0?p="":c<2&&l.length>=1?p="coords = 0;":p=l.map(m=>`coords.${h[m+d]} = 0;`).join(`
`);let f="";return c<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+d]}`).join(", "),`
    float ${s}() {
      ${u} coords = getOutputCoords();
      ${p}
      return get${r}(${f});
    }
  `}function ht(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Rw(e,t,n){let{newShape:r,keptDims:s}=w.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):r,c=!e&&a>1&&!w.arraysEqual(t,n)&&r.length<a||o;return{useSqueezeShape:c,uniformShape:c?i:t,keptDims:s}}function Au(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Du(e,t){return t.map(n=>e[n]).join(", ")}function OX(e,t,n,r){let s=n.map((v,x)=>{let k={logicalShape:v.shape,texShape:v.isUniform?null:v.texData.texShape,isUniform:v.isUniform,isPacked:v.isUniform?!1:v.texData.isPacked,flatOffset:null};return v.texData!=null&&v.texData.slice!=null&&v.texData.slice.flatOffset>0&&(k.flatOffset=v.texData.slice.flatOffset),{name:t.variableNames[x],shapeInfo:k}}),a=s.map(v=>v.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=eX(s,o,t),c=e.createProgram(i),u=null,l=e.getUniformLocation(c,"NAN",!1);Q().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(c,"INFINITY",!1));let d=!1,p={},h={},f={};for(let v=0;v<t.variableNames.length;v++){let x=t.variableNames[v];p[x]=e.getUniformLocation(c,x,d),p[`offset${x}`]=e.getUniformLocation(c,`offset${x}`,d),t.enableShapeUniforms&&(h[`${x}Shape`]=e.getUniformLocation(c,`${x}Shape`,d),f[`${x}TexShape`]=e.getUniformLocation(c,`${x}TexShape`,d))}let m,g,b;t.enableShapeUniforms&&(m=e.getUniformLocation(c,"outShape",d),b=e.getUniformLocation(c,"outShapeStrides",d),g=e.getUniformLocation(c,"outTexShape",d));let y=[];return t.customUniforms&&t.customUniforms.forEach((v,x)=>{y[x]=e.getUniformLocation(c,v.name,d)}),{program:t,source:i,webGLProgram:c,uniformLocations:p,customUniformLocations:y,inShapeInfos:a,outShapeInfo:o,infLoc:u,nanLoc:l,inShapesLocations:h,inTexShapesLocations:f,outShapeLocation:m,outShapeStridesLocation:b,outTexShapeLocation:g}}function M2(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,r)=>{let s=n.logicalShape,a=t[r],o=a.shape;if(!w.arraysEqual(s,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,c=a.isUniform?null:a.texData.texShape;if(!w.arraysEqual(i,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${c} must match`)})}function MX(e,t,n,r,s){t.program.enableShapeUniforms||(M2(t.inShapeInfos,n),M2([t.outShapeInfo],[r]));let a=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a,o[0],o[1]):e.setOutputMatrixTexture(a,o[0],o[1]),e.setProgram(t.webGLProgram),Q().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((c,u)=>{let l=t.program.variableNames[u],d=t.uniformLocations[l],p=t.uniformLocations[`offset${l}`],h=t.inShapesLocations[`${l}Shape`],f=t.inTexShapesLocations[`${l}TexShape`];if(h){let{uniformShape:m}=Rw(t.program.packedInputs,c.shape,c.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,c.texData.texShape[0],c.texData.texShape[1]),d!=null){if(c.isUniform){if(w.sizeFromShape(c.shape)<2)e.gl.uniform1f(d,c.uniformValues[0]);else{let m=c.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}return}c.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,c.texData.slice.flatOffset),e.setInputMatrixTexture(c.texData.texture,d,u)}});let i=t.outShapeLocation;if(i)switch(r.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){let c=w.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(c));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(c));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(c));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach((c,u)=>{let l=t.customUniformLocations[u],d=s[u];if(c.type==="float")e.gl.uniform1fv(l,d);else if(c.type==="vec2")e.gl.uniform2fv(l,d);else if(c.type==="vec3")e.gl.uniform3fv(l,d);else if(c.type==="vec4")e.gl.uniform4fv(l,d);else if(c.type==="int")e.gl.uniform1iv(l,d);else if(c.type==="ivec2")e.gl.uniform2iv(l,d);else if(c.type==="ivec3")e.gl.uniform3iv(l,d);else if(c.type==="ivec4")e.gl.uniform4iv(l,d);else throw Error(`uniform type ${c.type} is not supported yet.`)}),e.executeProgram()}function LX(e,t,n){let r="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let c=o.texData.texShape,{useSqueezeShape:u,uniformShape:l,keptDims:d}=Rw(e.packedInputs,o.shape,c),p="",h="",f="";if(l.length===1&&e.packedInputs){let k=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];p=`${k[0]>1}_${k[1]>1}`}else if(l.length===2&&!e.packedInputs)h=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!e.packedInputs){let k=w.computeStrides(l);f=`${k[0]===c[1]}_${k[k.length-1]===c[1]}`}let m=o.shape.length,g=l.length===2&&w.arraysEqual(o.shape,c),b=w.sizeFromShape(o.shape)===1,y=_.getBroadcastDims(o.shape,n.shape),v=!e.packedInputs&&m===n.shape.length&&w.arraysEqual(c,n.texData.texShape),x=e.packedInputs||l.length>2?"":`${c[0]>1}_${c[1]>1}`;r+=`${m}_${v}_${u?d:""}_${l.length}_${b}_${y}_${g}_${p}_${h}_${f}_${x}_${i}`}else{let c=o.isUniform?"uniform":o.texData.texShape;r+=`${o.shape}_${c}_${i}`}});let s=e.userCode,a=e.constructor.name;return a+="_"+r+"_"+s+`${Q().getNumber("WEBGL_VERSION")}`,a}function gr(e){return Q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var BX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Fd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=In();this.outputShape=e,this.enableShapeUniforms=gr(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?pm(["r","c","d"],e):mi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},zX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Fd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=In();this.outputShape=e,this.enableShapeUniforms=gr(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?pm(["r","c","d"],e):mi(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},WX=class{constructor(e){this.variableNames=["A"],this.outTexUsage=fr.DOWNLOAD;let t=In();this.outputShape=e,this.userCode=`
      ${F2}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},VX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=fr.DOWNLOAD;let t=In();this.outputShape=e,this.userCode=`
      ${F2}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},UX=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=In();this.outputShape=e,this.enableShapeUniforms=gr(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Fw():$w(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${r}, 0., 0., 0.);
      }
    `}},GX=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=In();this.outputShape=e,this.enableShapeUniforms=gr(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;r+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Fw():$w(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${n.output} = ${s};
        }
    `}},L2={};Re(L2,{bindVertexProgramAttributeStreams:()=>q2,createBufferFromOutputTexture:()=>Y2,createFloat16MatrixTexture:()=>U2,createFloat16PackedMatrixTexture:()=>j2,createFloat32MatrixTexture:()=>V2,createIndexBuffer:()=>W2,createPackedMatrixTexture:()=>H2,createUnsignedBytesMatrixTexture:()=>G2,createVertexBuffer:()=>z2,createVertexShader:()=>B2,downloadByteEncodedFloatMatrixFromOutputTexture:()=>J2,downloadFloat32MatrixFromBuffer:()=>Z2,downloadMatrixFromPackedOutputTexture:()=>eN,downloadPackedMatrixFromBuffer:()=>Q2,getInternalFormatForFloat16MatrixTexture:()=>Ow,getInternalFormatForFloat16PackedMatrixTexture:()=>Bw,getInternalFormatForFloat32MatrixTexture:()=>Pw,getInternalFormatForPackedMatrixTexture:()=>Lw,getInternalFormatForUnsignedBytesMatrixTexture:()=>Mw,uploadDenseMatrixToTexture:()=>K2,uploadPixelDataToTexture:()=>X2});function B2(e){let t=In(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return d2(e,n)}function z2(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return m2(e,t)}function W2(e){let t=new Uint16Array([0,1,2,2,1,3]);return g2(e,t)}function Ld(e,t,n,r,s,a){y2(t,n);let o=b2(e),i=e.TEXTURE_2D;return xe(e,()=>e.bindTexture(i,o)),xe(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),xe(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),xe(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),xe(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),xe(e,()=>e.texImage2D(i,0,r,t,n,0,s,a,null)),xe(e,()=>e.bindTexture(e.TEXTURE_2D,null)),o}function Pw(e){return e.internalFormatFloat}function V2(e,t,n,r){let[s,a]=Rd(t,n);return Ld(e,s,a,Pw(r),r.textureFormatFloat,e.FLOAT)}function Ow(e){return e.internalFormatHalfFloat}function U2(e,t,n,r){let[s,a]=Rd(t,n);return Ld(e,s,a,Ow(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Mw(e){return e.downloadTextureFormat}function G2(e,t,n,r){let[s,a]=Rd(t,n);return Ld(e,s,a,Mw(r),e.RGBA,e.UNSIGNED_BYTE)}function Lw(e){return e.internalFormatPackedFloat}function H2(e,t,n,r){let[s,a]=Tu(t,n);return Ld(e,s,a,Lw(r),e.RGBA,e.FLOAT)}function Bw(e){return e.internalFormatPackedHalfFloat}function j2(e,t,n,r){let[s,a]=Tu(t,n);return Ld(e,s,a,Bw(r),e.RGBA,r.textureTypeHalfFloat)}function q2(e,t,n){let r=0,s=3*4,a=3*4+2*4;return xe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),_w(e,t,"clipSpacePos",n,3,a,r)&&_w(e,t,"uv",n,2,a,s)}function K2(e,t,n,r,s,a){xe(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,c;s instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,c=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,c=a.internalFormatPackedFloat),o.set(s),xe(e,()=>e.texImage2D(e.TEXTURE_2D,0,c,n,r,0,e.RGBA,i,o)),xe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function X2(e,t,n){xe(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?xe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):xe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),xe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Y2(e,t,n,r){let s=e.createBuffer();xe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s));let i=4*4*t*n;return xe(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),xe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),xe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),s}function Z2(e,t,n){let r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function J2(e,t,n,r){let[s,a]=Rd(t,n),o=4,i=new Uint8Array(BK(t*n,o));return xe(e,()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function Q2(e,t,n,r,s,a,o,i){let c=e,u=new Float32Array(zK(a,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,u),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),u}function eN(e,t,n){let r=new Float32Array(t*n*4);return xe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}var tN=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Q().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,c2(t,e)):this.gl=ps(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(Q().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Pd(this.gl,s),mr(this.gl,a))this.textureHalfFloatExtension=Pd(this.gl,a);else if(Q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),mr(this.gl,r))this.colorBufferHalfFloatExtension=Pd(this.gl,r);else if(Q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",mr(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(mr(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=z2(this.gl),this.indexBuffer=W2(this.gl),this.framebuffer=v2(this.gl),this.textureConfig=Nw(this.gl,this.textureHalfFloatExtension)}get debug(){return Q().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;xe(e,()=>e.finish()),xe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),xe(e,()=>e.deleteFramebuffer(this.framebuffer)),xe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),xe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),xe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),V2(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),U2(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),G2(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),X2(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),K2(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),j2(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),H2(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Ew(this.gl,this.framebuffer),this.outputTexture=null),xe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>J2(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return Q2(this.gl,e,t,n,r,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Z2(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=Y2(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Q().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=r.clientWaitSync(s,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},t=s}else Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>eN(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=p2(t,e);this.vertexShader==null&&(this.vertexShader=B2(t));let r=h2(t);return xe(t,()=>t.attachShader(r,this.vertexShader)),xe(t,()=>t.attachShader(r,n)),f2(t,r),this.debug&&om(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=q2(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&xe(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&om(this.gl,this.program),xe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?w2(this.gl,e,t):k2(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),xe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),I2(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,s]=Tu(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&om(this.gl,this.program),Od(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),xe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),xe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Pd(this.gl,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(r.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),r=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=HX(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),im(this.gl,e,this.framebuffer),this.debug&&Od(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(im(this.gl,this.outputTexture,this.framebuffer),this.debug&&Od(this.gl)):Ew(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;im(r,e,this.framebuffer),this.debug&&Od(r),this.outputTexture=e,xe(r,()=>r.viewport(0,0,t,n)),xe(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),xe(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function HX(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:jX,bincountImpl:nN,bincountReduceImpl:qX,ceilImpl:KX,concatImpl:XX,equalImpl:YX,expImpl:ZX,expm1Impl:JX,floorImpl:QX,gatherNdImpl:e7,gatherV2Impl:t7,greaterImpl:n7,greaterEqualImpl:r7,lessImpl:s7,lessEqualImpl:a7,linSpaceImpl:o7,logImpl:i7,maxImpl:c7,maximumImpl:u7,minimumImpl:l7,multiplyImpl:d7,negImpl:p7,notEqualImpl:h7,prodImpl:f7,rangeImpl:m7,rsqrtImpl:g7,sigmoidImpl:b7,simpleAbsImpl:rN,sliceImpl:y7,sparseFillEmptyRowsImpl:v7,sparseReshapeImpl:x7,sparseSegmentReductionImpl:sN,sqrtImpl:w7,stridedSliceImpl:k7,stringNGramsImpl:I7,stringSplitImpl:S7,stringToHashBucketFastImpl:C7,subImpl:T7,tileImpl:N7,topKImpl:_7,transposeImpl:zw,uniqueImpl:E7}=rT;function aN(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function Sn(e,t){return t===1?[e]:aN(e,t)}function A7(e,t){if(e===1)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var D7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=Sn("rc",t),r=ht(t),s=F7(t,e,n),a=R7(t,e[e.length-1],e[e.length-2],n),o=P7(e,n);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${o}));
          }
        }
      `}}};function $7(e,t){let n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let o=2;o<e;o++)a=`${t[t.length-1-o]},`+a;n.push(a)}return n}function F7(e,t,n){if(e===1)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}function R7(e,t,n,r){if(e===1)return"";let s=r.slice(-2);return`
    int r = ${s[0]};
    int c = ${s[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${t};
    bool rEdge = rp1 >= ${n};
  `}function P7(e,t){let n=e.length,r=$7(n,t);return n===1?`getA(rc),
            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${r[0]}),
          cEdge ? 0. : getA(${r[1]}),
          rEdge ? 0. : getA(${r[2]}),
          rEdge || cEdge ? 0. : getA(${r[3]})`}var oN=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=gr(this.outputShape.length);let n="";for(let r=0;r<4;r++){let s="thisRC = rc;";r%2==1&&(s+="thisRC.z += 1;"),r>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${O7(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Fw():$w(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function O7(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?QK(["r","c","d"],"inputShape"):mi(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var M7=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=cN(t,n),s=uN(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=iN(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[s].shift();return this.usedTextures[s].push(i),i}let o;return r===on.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===on.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===on.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===on.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===on.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,r){if(this.freeTextures==null)return;let s=cN(n,r),a=uN(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);let o=iN(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=Q().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let c=this.usedTextures[a],u=c.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function L7(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}function iN(e,t,n,r,s){let a=B7(t,r),o;if(s){let[c,u]=Tu(e[0],e[1]);o=c*u}else{let[c,u]=Rd(e[0],e[1]);o=c*u}let i=L7(n,a);return o*i}function B7(e,t){switch(e){case on.PACKED_2X2_FLOAT32:return Lw(t);case on.PACKED_2X2_FLOAT16:return Bw(t);case on.UNPACKED_FLOAT32:return Pw(t);case on.UNPACKED_FLOAT16:return Ow(t);case on.PACKED_4X1_UNSIGNED_BYTE:return Mw(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function z7(e){return Q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?on.PACKED_2X2_FLOAT32:on.UNPACKED_FLOAT32:e?on.PACKED_2X2_FLOAT16:on.UNPACKED_FLOAT16}function cN(e,t){if(e===fr.UPLOAD)return on.PACKED_2X2_FLOAT32;if(e===fr.RENDER||e==null)return z7(t);if(e===fr.DOWNLOAD||e===fr.PIXELS)return on.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function uN(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Ia=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=gr(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Hr="if (isnan(x)) return x;",W7="return x;",lN="return abs(x);",V7="return (x >= 0.0) ? x : (exp(x) - 1.0);",U7=Hr+`
  return (x < 0.0) ? 0.0 : x;
`,G7=Hr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,hm="return x;",H7="return 1.0 / (1.0 + exp(-1.0 * x));",j7="return x;",q7=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,K7=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,X7=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Y7="return 1.0 / (1.0 + exp(-1.0 * x));",$u=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=gr(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},Z7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=Sn("rc",t),r=ht(t),s=A7(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},J7=as.whereImpl,Q7=1e-7,e9=1e-4,fm={};function t9(e){return e in fm||(fm[e]={}),fm[e]}var n9=Q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),r9=600;function s9(){return Q().global.screen==null?1024:Q().global.screen.height*Q().global.screen.width*window.devicePixelRatio*r9/1024/1024}var mm=class extends bl{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=ps(Q().getNumber("WEBGL_VERSION"));this.binaryCache=t9(Q().getNumber("WEBGL_VERSION")),this.gpgpu=new tN(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new M7(this.gpgpu),this.numMBBeforeWarning=s9(),this.texData=new Dp(this,Cs())}nextDataId(){return mm.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Q().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:fr.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,r,s){if(Q().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:fr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:o,isPacked:i}=t;if(a!=null){let d;i?d=new $u(o,hm):d=new Ia(o,hm);let p=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:r}],r),h=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return n;let c=this.activeTimers!=null,u;c&&(u=w.now());let l;if(r==="complex64"){let d=this.readSync(s.real.dataId),p=this.readSync(s.imag.dataId);l=_.mergeRealAndImagArrays(d,p)}else l=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=w.now()-u),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(s!=null){let h;i?h=new $u(r,hm):h=new Ia(r,hm);let f=this.runWebGLProgram(h,[{dataId:e,shape:r,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(!Q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Q().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(a!=="complex64"&&Q().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);let h=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(h.texture,...am(r))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let l;if(a==="complex64"){let h=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=h[0],m=h[1];l=_.mergeRealAndImagArrays(f,m)}else if(c==null)l=this.getValuesFromTexture(e);else{let h=w.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,h)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){let h=this.gpgpu.gl;xe(h,()=>h.deleteBuffer(c))}let d=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Cs().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(r=>w.decodeString(r))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!u2(n))throw Q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=w.sizeFromShape(t);if(Q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),p=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(p.texture,...am(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(d),h}let a=Q().getBool("WEBGL_PACK")&&r===!0,o=a?cm(t):t,i=a?new VX(o):new WX(o),c=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),u=this.texData.get(c.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),l}timerAvailable(){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],r=!1;this.programTimersStack==null?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=w.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=w.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,r&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(s);o.kernelMs=w.sum(i),o.getExtraProfileInfo=()=>i.map((c,u)=>({name:a[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=n9){return Q().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&w.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){_.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return J7(e.shape,t)}packedUnaryOp(e,t,n){let r=new $u(e.shape,t),s=this.compileAndRun(r,[e],n);return Cs().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let r=rN(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,lN,e.dtype);let t=new Ia(e.shape,lN),n=this.compileAndRun(t,[e]);return Cs().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let s=n.map(a=>w.encodeString(a));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:r}=this.makeTensorInfo(e,t,n);return Cs().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){let t=new Z7(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new D7(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[hi(e.shape),...fi(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[hi(t),...fi(t)],a=new oN(s,n),o=!0,i=[n],c=this.runWebGLProgram(a,[r],e.dtype,i,o);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=cm(r),o,i=am(a);n?o=new zX(a):o=new BX(a);let c=!0,u=[i],l=this.runWebGLProgram(o,[{shape:a,dtype:s,dataId:e}],s,u,c);return{dtype:s,shape:r,dataId:l.dataId}}runWebGLProgram(e,t,n,r,s=!1){let a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Fd.DENSE){let m=am(e.outputShape);o.texShape=m.map(g=>g*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),w.sizeFromShape(a.shape)===0)return o.values=w.getTypedArrayFromDType(a.dtype,0),a;let i=[],c=t.map(m=>{if(m.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(m.dataId);if(g.texture==null){if(!e.packedInputs&&w.sizeFromShape(m.shape)<=Q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:m.shape,texData:null,isUniform:!0,uniformValues:g.values};e.packedInputs&&(g.isPacked=!0,g.shape=m.shape)}else if(!!g.isPacked!=!!e.packedInputs)m=g.isPacked?this.unpackTensor(m):this.packTensor(m),i.push(m),g=this.texData.get(m.dataId);else if(g.isPacked&&!Md(g.shape,m.shape)){let b=m,y=m.shape;m.shape=g.shape,m=this.packedReshape(m,y),i.push(m),g=this.texData.get(m.dataId),b.shape=y}return this.uploadToGPU(m.dataId),{shape:m.shape,texData:g,isUniform:!1}});this.uploadToGPU(a.dataId);let u={shape:a.shape,texData:o,isUniform:!1},l=LX(e,c,u),d=this.getAndSaveBinary(l,()=>OX(this.gpgpu,e,c,u)),p=this.activeTimers!=null,h;p&&(h=this.startTimer()),MX(this.gpgpu,d,c,u,r),i.forEach(m=>this.disposeIntermediateTensorInfo(m)),p&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let f=Q().get("WEBGL_FLUSH_THRESHOLD");if(f>0){let m=w.now();m-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=m)}if(!Q().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&s===!1){let m=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),m}return a}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=M(()=>{if(!Q().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Q().getBool("DEBUG");Q().set("DEBUG",!1);let t=this.abs(Ie(1e-8)).dataSync()[0];if(Q().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Q7:e9}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let c=this.activeTimers!=null,u;c&&(u=w.now());let l=t.texShape;if(l==null&&(l=T2(n,i),t.texShape=l),s!=null){let d=cm(n),p,h=l[1],f=l[0],m=s instanceof Uint8Array;i?([h,f]=Tu(l[0],l[1]),p=new GX(d,m)):p=new UX(d,m);let g=this.makeTensorInfo([f,h],r);m?this.texData.get(g.dataId).usage=fr.PIXELS:this.texData.get(g.dataId).usage=fr.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),h,f,s);let b=[[f,h]],y=!0,v=this.runWebGLProgram(p,[g],r,b,y),x=this.texData.get(v.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(g),this.texData.delete(v.dataId),t.values=null,c&&(this.uploadWaitMs+=w.now()-u)}else{let d=this.acquireTexture(l,o,r,i);t.texture=d}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),t!=null&&(n.values=a9(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}};mm.nextDataId=0;function a9(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}else throw new Error(`Unknown dtype ${t}`)}var o9="3.9.0";function dN(){Q().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ul.isBrowser()&&Dh("webgl",()=>new mm,2);var i9={forceHalfFloat:dN},pN=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Fu=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=_.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=gr(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},gm=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,Bd=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=_.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=gr(s);let a="";if(r)if(s===0||w.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${ht(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=Sn("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${i[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${i[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function nr(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var c9={kernelName:ro,backendName:"webgl",kernelFunc:nr};function Sa(e){let{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(a.dataId),i=nr({inputs:{x:r},backend:n}),c=nr({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:c},a}var u9={kernelName:Bp,backendName:"webgl",kernelFunc:Sa},hN="return (a < 0.) ? b * a : a;",fN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function l9(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,o=n.makeTensorInfo([],"float32",w.createScalarValue(a,"float32")),i=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Bd(fN,s.shape,o.shape):new Fu(hN,s.shape,o.shape),c=n.runWebGLProgram(i,[s,o],s.dtype);return n.disposeIntermediateTensorInfo(o),c}var d9={kernelName:so,backendName:"webgl",kernelFunc:l9},mN="return (a < 0.) ? b * a : a;",gN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function p9(e){let{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Bd(gN,r.shape,s.shape):new Fu(mN,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}var h9={kernelName:yo,backendName:"webgl",kernelFunc:p9},bN="if (isnan(x)) return x;",f9=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,m9=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Xe({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{let{x:o}=s,i=a,c=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let d=i.texData.get(o.dataId),p=n(d.values,c);return i.makeTensorInfo(o.shape,c,p)}let u=Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,l;return u?l=new $u(o.shape,t):l=new Ia(o.shape,e),i.runWebGLProgram(l,[o],c)}}function cn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:o,backend:i})=>{let{a:c,b:u}=o,l=i;if(r&&c.dtype==="complex64"){let f=l.texData.get(c.dataId),m=l.texData.get(u.dataId),[g,b]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(v=>{let[x,k]=v,C={dataId:x.dataId,dtype:x.dtype,shape:c.shape},N={dataId:k.dataId,dtype:k.dtype,shape:u.shape},$=new Fu(e,c.shape,u.shape);return l.runWebGLProgram($,[C,N],kr(x.dtype,k.dtype))}),y=Sa({inputs:{real:g,imag:b},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(b),y}let d=a||kr(c.dtype,u.dtype);if((c.dtype==="string"||u.dtype==="string"||l.shouldExecuteOnCPU([c,u]))&&s!=null){let f=l.texData.get(c.dataId).values,m=l.texData.get(u.dataId).values,g=c.dtype==="string"?_.fromUint8ToStringArray(f):f,b=c.dtype==="string"?_.fromUint8ToStringArray(m):m,[y,v]=s(c.shape,u.shape,g,b,d),x=l.makeTensorInfo(v,d),k=l.texData.get(x.dataId);return k.values=y,x}let p=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return p?h=new Bd(t,c.shape,u.shape,n):h=new Fu(e,c.shape,u.shape),l.runWebGLProgram(h,[c,u],d)}}function bm(e,t=!1){if(e==="linear")return t?j7:W7;if(e==="relu")return t?K7:U7;if(e==="elu")return t?q7:V7;if(e==="relu6")return t?X7:G7;if(e==="prelu")return t?gN:mN;if(e==="leakyrelu")return t?fN:hN;if(e==="sigmoid")return t?Y7:H7;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var yN=class{constructor(e,t,n,r=!1,s=!1,a=!1,o=null,i=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=gr(this.outputShape.length);let u=r?e[1]:e[2],l=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:c?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let y="rc.x",v="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${l}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${l}; i++) {
          int batchA = ${y};
          int batchB = ${v};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${g}

        setOutput(result);
      }
    `}},vN={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},xN=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=_.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},wN="return a * b;";function Ww(e){let{inputs:t,backend:n}=e,{a:r,b:s}=t,a=_.upcastType(r.dtype,s.dtype);if(r.dtype==="complex64"){let i=n.texData.get(r.dataId),c=n.texData.get(s.dataId),u=new xN(vN.REAL,r.shape,s.shape),l=new xN(vN.IMAG,r.shape,s.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:r.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:s.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:s.shape}],p=n.runWebGLProgram(u,d,"float32"),h=n.runWebGLProgram(l,d,"float32"),f=Sa({inputs:{real:p,imag:h},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([r,s])){let i=n.texData.get(r.dataId),c=n.texData.get(s.dataId),[u,l]=d7(r.shape,s.shape,i.values,c.values,a),d=n.makeTensorInfo(l,a),p=n.texData.get(d.dataId);return p.values=u,d}let o;return Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Bd(wN,r.shape,s.shape):o=new Fu(wN,r.shape,s.shape),n.runWebGLProgram(o,[r,s],a)}var g9={kernelName:fo,backendName:"webgl",kernelFunc:Ww};function b9(e,t,n){let r=[hi(e.shape),...fi(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[hi(t),...fi(t)],o=new oN(a,r),i=!0,c=[r],u=n.runWebGLProgram(o,[s],e.dtype,c,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function be(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=n,i=w.sizeFromShape(s.shape),c=w.inferFromImplicitShape(a,i),u=w.sizeFromShape(c);w.assert(i===u,()=>`The new shape (${c}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let l=o.texData.get(s.dataId);return l.isPacked&&!Md(s.shape,c)&&!(l.texture!==null&&Md(l.shape,c))?b9(s,c,o):(o.incRef(s.dataId),{dataId:s.dataId,shape:c,dtype:s.dtype})}var y9={kernelName:Rc,backendName:"webgl",kernelFunc:be},kN=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o=Math.floor(n/4)*4,i=n%4,c="sumValue += dot(values, ones);";if(t!=null){let l=1/t;c=`sumValue += dot(values * ${w.isInt(l)?l.toPrecision(2):l}, ones);`}let u="";s%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}},v9=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");let u=Math.floor(n/4)*4,l=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let h="";s%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${l===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${l===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${l===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}};function x9(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],r=_.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function bi(e,t,n,r){let s=x9(e.shape),a=e;for(let o=0;o<s.length;o++){let{inSize:i,windowSize:c,outSize:u}=s[o],l,d;n==="mean"?l=o===0?new kN({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:u},i):new kN({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:u}):l=new v9({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:u},n),d=a,a=r.runWebGLProgram(l,[a],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return a}var w9=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let r=ht(this.rank),s=k9(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function k9(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}var I9=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=ht(this.rank),s=aN("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=s[u];let o=`vec2(${a.slice(-2).join()})`,i=`++${s[this.rank-1]} < ${n[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${i}) {
        result[1] = ${c};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${c};
        if(${i}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}};function ym(e,t,n){let r=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new I9(e.shape,t):new w9(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function S9(e,t,n,r){let s=t,a=e.shape.length,o=w.parseAxisParam(s,e.shape),i=o,c=_.getAxesPermutation(i,a),u=c!=null,l=e;u&&(l=ym(e,c,r),i=_.getInnerMostAxes(i.length,a)),_.assertAxesAreInnerMostDims("sum",i,a);let[d,p]=_.computeOutAndReduceShapes(l.shape,i),h=d;n&&(h=_.expandShapeToKeepDim(d,o));let f=w.sizeFromShape(p),g=w.sizeFromShape(e.shape)/f,b=be({inputs:{x:l},attrs:{shape:[g,f]},backend:r}),y=Ch(e.dtype),v=bi(b,y,"sum",r),x=be({inputs:{x:v},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),u&&r.disposeIntermediateTensorInfo(l),x}function vm(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return S9(s,a,o,n)}var C9={kernelName:_o,backendName:"webgl",kernelFunc:vm};function Cn(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,o=n,i=s.shape.length,c=new Array(i);for(let l=0;l<c.length;l++)c[l]=s.shape[a[l]];let u;if(o.shouldExecuteOnCPU([s])){let d=o.texData.get(s.dataId).values,p=zw(d,s.shape,s.dtype,a,c);u=o.makeTensorInfo(c,s.dtype);let h=o.texData.get(u.dataId);h.values=p}else u=ym(s,a,o);return u}var T9={kernelName:Ro,backendName:"webgl",kernelFunc:Cn},IN=1e3;function xm({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}){let u=e.shape.length,l=t.shape.length,d=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[l-1]:t.shape[l-2],h=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=w.sizeFromShape(m),y=w.sizeFromShape(g),v=b===y||b===1||y===1;w.assert(u>=2&&l>=2&&v,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);let k=(b>y?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([h,f]);w.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let C=n?[b,d,h]:[b,h,d],N=r?[y,f,p]:[y,p,f],$=be({inputs:{x:e},backend:s,attrs:{shape:C}}),R=be({inputs:{x:t},backend:s,attrs:{shape:N}}),O=[$,R],D=Math.max(b,y),P=n?$.shape[1]:$.shape[2],T=a!=null,L=o!=null,G=c==="leakyrelu",j=c!=null?bm(c,!0):null,q=T||L||G||j!=null,K;if((h===1||f===1)&&P>IN&&q===!1){let ne=$,re=R;n&&(ne=Cn({inputs:{x:$},backend:s,attrs:{perm:[0,2,1]}}),O.push(ne)),r&&(re=Cn({inputs:{x:R},backend:s,attrs:{perm:[0,2,1]}}),O.push(re));let se=f!==1,J=f===1,ie=ne;se&&(ie=be({inputs:{x:ne},backend:s,attrs:{shape:[D,P,1]}}),O.push(ie));let ue=f===1?2:1,le=re;J&&(le=be({inputs:{x:re},backend:s,attrs:{shape:[D,1,P]}}),O.push(le));let me=Ww({inputs:{a:ie,b:le},backend:s});K=vm({inputs:{x:me},backend:s,attrs:{axis:ue,keepDims:!0}}),O.push(me)}else{let ne=kr(e.dtype,t.dtype),re=new yN(C,N,[D,h,f],n,r,T,j,L,G),se=[$,R];if(a!=null&&se.push(a),L&&se.push(o),G){let J=s.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));se.push(J),O.push(J)}K=s.runWebGLProgram(re,se,ne)}let te=be({inputs:{x:K},backend:s,attrs:{shape:k}});O.push(K);for(let ne of O)s.disposeIntermediateTensorInfo(ne);return te}function N9(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=r;return xm({a:s,b:a,transposeA:c,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}var _9={kernelName:Po,backendName:"webgl",kernelFunc:N9},SN="return abs(x);";function E9(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){let a=n.texData.get(r.dataId),o=rN(a.values);return n.makeTensorInfo(r.shape,r.dtype,o)}let s;return Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new $u(r.shape,SN):s=new Ia(r.shape,SN),n.runWebGLProgram(s,[r],r.dtype)}var A9={kernelName:Xi,backendName:"webgl",kernelFunc:E9},D9=Hr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,$9=Xe({opSnippet:D9}),F9={kernelName:Yi,backendName:"webgl",kernelFunc:$9},R9=Hr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,P9=Xe({opSnippet:R9}),O9={kernelName:Zi,backendName:"webgl",kernelFunc:P9},CN="return a + b;",M9=cn({opSnippet:CN,packedOpSnippet:CN,supportsComplex:!0,cpuKernelImpl:jX}),L9={kernelName:Js,backendName:"webgl",kernelFunc:M9},B9=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let r=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}},z9=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let r=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};function wm(e){let{inputs:t,backend:n}=e,r=t;if(r.length===1)return nr({inputs:{x:r[0]},backend:n});if(r.length>Q().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let c=Math.floor(r.length/2),u=wm({inputs:r.slice(0,c),backend:n}),l=wm({inputs:r.slice(c),backend:n});return wm({inputs:[u,l],backend:n})}let s=r.map(c=>c.dtype).reduce((c,u)=>kr(c,u)),a=r.map(c=>c.shape),i=Q().getBool("WEBGL_PACK")?new z9(r[0].shape,a):new B9(r[0].shape,a);return n.runWebGLProgram(i,r,s)}var W9={kernelName:La,backendName:"webgl",kernelFunc:wm};function V9(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,c=w.parseAxisParam(a,s.shape),u=c,l=_.getAxesPermutation(u,i),d=s;l!=null&&(d=Cn({inputs:{x:s},backend:n,attrs:{perm:l}}),u=_.getInnerMostAxes(u.length,i)),_.assertAxesAreInnerMostDims("all",u,i);let[p,h]=_.computeOutAndReduceShapes(d.shape,u),f=w.sizeFromShape(h),m=be({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=bi(m,m.dtype,"all",n),b;if(o){let y=_.expandShapeToKeepDim(p,c);b=be({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=be({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),l!=null&&n.disposeIntermediateTensorInfo(d),b}var U9={kernelName:Ji,backendName:"webgl",kernelFunc:V9};function G9(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,c=w.parseAxisParam(a,s.shape),u=c,l=_.getAxesPermutation(u,i),d=s;l!=null&&(d=Cn({inputs:{x:s},backend:n,attrs:{perm:l}}),u=_.getInnerMostAxes(u.length,i)),_.assertAxesAreInnerMostDims("any",u,i);let[p,h]=_.computeOutAndReduceShapes(d.shape,u),f=w.sizeFromShape(h),m=be({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=bi(m,m.dtype,"any",n),b;if(o){let y=_.expandShapeToKeepDim(p,c);b=be({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=be({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),l!=null&&n.disposeIntermediateTensorInfo(d),b}var H9={kernelName:Qi,backendName:"webgl",kernelFunc:G9},j9=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},q9=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,c=ht(i),u=Sn("coords",i),l,d;if(a===1){d=i+1;let N=ht(d);l=`
        ${N} sourceLocR = ${N}(${u.join()}, 0);
        ++${u[i-1]};
        ${N} sourceLocG = ${N}(${u.join()}, 0);
        ++${u[i-2]};
        ${N} sourceLocA = ${N}(${u.join()}, 0);
        --${u[i-1]};
        ${N} sourceLocB = ${N}(${u.join()}, 0);
        --${u[i-2]};`}else d=i,l=`
        ${c} sourceLocR = coords;
        ++${u[i-1]};
        ${c} sourceLocG = coords;
        ++${u[i-2]};
        ${c} sourceLocA = coords;
        --${u[i-1]};
        ${c} sourceLocB = coords;
        --${u[i-2]};`;let p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map(N=>"int "+N),m=Sn("sourceLocR",d-1).concat("inIdx.r"),g=Sn("sourceLocG",d-1).concat("inIdx.g"),b=Sn("sourceLocB",d-1).concat("inIdx.b"),y=Sn("sourceLocA",d-1).concat("inIdx.a"),v=n==="max"?"greaterThan":"lessThan",x=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,C=r?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${u[i-2]} < ${o[i-2]-1};
        ${l}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${x}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function TN(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];r!=null&&(s=r.shape[0],a=r.shape[1]);let o=_.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:s,outSize:Math.ceil(a/o)},c=new j9(i,n,r==null),u=[t];r!=null&&u.push(r);let l=e.runWebGLProgram(c,u,"int32");if(l.shape[1]===1)return l;let d=TN(e,t,n,l);return e.disposeIntermediateTensorInfo(l),d}function NN(e,t,n,r=null){let s=r!=null?r.shape:t.shape,a=s[s.length-1],o=_.computeOptimalWindowSize(a),i=new q9(s,o,n,r==null),c=r==null?[t]:[t,r],u=e.runWebGLProgram(i,c,"int32");if(u.shape.length===t.shape.length){let l=NN(e,t,n,u);return e.disposeIntermediateTensorInfo(u),l}return u}function _N(e,t,n,r){let s=[n];if(_.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Q().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,c=t;i&&(c=e.unpackTensor(t),a.push(c));let[u,l]=_.computeOutAndReduceShapes(c.shape,s),d=w.sizeFromShape(l),p=be({inputs:{x:c},backend:e,attrs:{shape:[-1,d]}});a.push(p);let h=TN(e,p,r);a.push(h);let f=be({inputs:{x:h},backend:e,attrs:{shape:u}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return NN(e,t,r)}function K9(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r,o=w.parseAxisParam(a,s.shape),i=_.getAxesPermutation(o,s.shape.length),c=s,u=[];i!=null&&(c=Cn({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(c),o=_.getInnerMostAxes(o.length,c.shape.length)),_.assertAxesAreInnerMostDims("argMax",[o[0]],c.shape.length);let l=_N(n,c,o[0],"max");return u.forEach(d=>n.disposeIntermediateTensorInfo(d)),l}var X9={kernelName:Ba,backendName:"webgl",kernelFunc:K9};function Y9(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r,o=w.parseAxisParam(a,s.shape),i=_.getAxesPermutation(o,s.shape.length),c=s,u=[];i!=null&&(c=Cn({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(c),o=_.getInnerMostAxes(o.length,c.shape.length)),_.assertAxesAreInnerMostDims("argMin",[o[0]],c.shape.length);let l=_N(n,c,o[0],"min");return u.forEach(d=>n.disposeIntermediateTensorInfo(d)),l}var Z9={kernelName:xl,backendName:"webgl",kernelFunc:Y9},J9=Hr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Q9=Xe({opSnippet:J9}),eY={kernelName:ec,backendName:"webgl",kernelFunc:Q9},tY=Hr+"return log(x + sqrt(x * x + 1.0));",nY=Xe({opSnippet:tY}),rY={kernelName:tc,backendName:"webgl",kernelFunc:nY},sY=Hr+`
  return atan(x);
`,aY=Xe({opSnippet:sY}),oY={kernelName:nc,backendName:"webgl",kernelFunc:aY},iY=f9+`
  return atan(a, b);
`,cY=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+m9+`
  return result;
`,uY=cn({opSnippet:iY,packedOpSnippet:cY}),lY={kernelName:sc,backendName:"webgl",kernelFunc:uY},dY=Hr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,pY=Xe({opSnippet:dY}),hY={kernelName:rc,backendName:"webgl",kernelFunc:pY},zd=class{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,b="0.0";if(f||(b="-1.0 / 1e-20"),n){let N=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${p}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${l};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${N} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?s?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let y="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / count");let x=Math.floor(a/4)*4,k=a%4,C=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${y}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${p}, ${h});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${l};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${x}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${x};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${v});
      }
    `}},Vw=class{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;let y=t==="avg",v="0.0";if(y||(v="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${c});
        const ivec3 pads = ivec3(${m}, ${g}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${l}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");let C=Math.floor(a/4)*4,N=a%4,$=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${c});
      const ivec3 pads = ivec3(${m}, ${g}, ${b});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${$}
            }

            int xC = xCCorner + ${C};
            if (${N===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${$}
            } else if (${N===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${$}
            } else if (${N===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${$}
            }
          }
          setOutput(${k});
        }
      }
    `}};function fY(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Nu(s,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:c}=r,u=1;w.assert(_.eitherStridesOrDilationsAreOne(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let l=_.computePool2DInfo(s.shape,a,o,u,i,c);if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))return nr({inputs:{x:s},backend:n});let d=new zd(l,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}var mY={kernelName:za,backendName:"webgl",kernelFunc:fY};function gY(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:c,dataFormat:u}=r,l=[1,1,1],d=_.computePool3DInfo(s.shape,a,o,l,i,c,u),p=new Vw(d,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}var bY={kernelName:wl,backendName:"webgl",kernelFunc:gY},yY=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=i-1-e.padInfo.top,l=c-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${l});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},vY=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function xY(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=r,d=[1,1,1],p=_.computePool3DInfo(o.shape,i,c,d,u,l),h=new vY(p);return n.runWebGLProgram(h,[s],o.dtype)}var wY={kernelName:Mp,backendName:"webgl",kernelFunc:xY};function kY(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;Nu([s,a],"avgPoolGrad");let{filterSize:i,strides:c,pad:u}=r,l=_.computePool2DInfo(o.shape,i,c,1,u),d=new yY(l);return n.runWebGLProgram(d,[s],o.dtype)}var IY={kernelName:Op,backendName:"webgl",kernelFunc:kY};function SY(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;return xm({a:s,b:a,transposeA:o,transposeB:i,backend:n})}var CY={kernelName:Wa,backendName:"webgl",kernelFunc:SY},TY=class{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],_.assertAndGetBroadcastShape(e,t),_.assertAndGetBroadcastShape(e,n);let o="0.0";r!=null&&(_.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";s!=null&&(_.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},NY=class{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],_.assertAndGetBroadcastShape(e,t),_.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";r!=null&&(_.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";s!=null&&(_.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},_Y=({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:s,variance:a,offset:o,scale:i}=e;w.assert(s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(o==null||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=n;c==null&&(c=.001);let u=[r,s,a],l=null;o!=null&&(l=o.shape,u.push(o));let d=null;i!=null&&(d=i.shape,u.push(i));let p=Q().getBool("WEBGL_PACK_NORMALIZATION")?new NY(r.shape,s.shape,a.shape,l,d,c):new TY(r.shape,s.shape,a.shape,l,d,c);return t.runWebGLProgram(p,u,u[0].dtype)},EY={kernelName:to,backendName:"webgl",kernelFunc:_Y},AY=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ht(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=DY(this.rank),r,s=e.map((a,o)=>`sourceLoc.${Uw[o]} = start[${o}] + coords.${Uw[o]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${n}));
      }
    `}},Uw=["x","y","z","w","u","v"];function DY(e){if(e===1)return"sourceLoc";if(e<=6)return Uw.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var $Y=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=ht(this.rank),n=Sn("coords",this.rank),r=Sn("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,l)=>`start[${l}]`).join()});`:e.map((u,l)=>`${r[l]} = ${n[l]} + start[${l}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function FY(e,t,n,r){let s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),o=r.texData.get(a.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=vn.computeFlatOffset(t,w.computeStrides(e.shape));s.slice&&(i+=s.slice.flatOffset),o.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||e.dataId};let c=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,c+1),a}function Ru(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r,[i,c]=vn.parseSliceParams(s,a,o);if(vn.assertParamsValid(s,i,c),w.sizeFromShape(c)===0)return n.makeTensorInfo(c,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||s.dtype==="string"){let d=n.texData.get(s.dataId),p=y7(d.values,i,c,s.shape,s.dtype);return n.makeTensorInfo(c,s.dtype,p)}let{isPacked:u}=n.texData.get(s.dataId),l=vn.isSliceContinous(s.shape,i,c);if(u||!l){let d=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $Y(c):new AY(c),p=[i];return n.runWebGLProgram(d,[s],s.dtype,p)}return n.uploadToGPU(s.dataId),FY(s,i,c,n)}var RY={kernelName:Lc,backendName:"webgl",kernelFunc:Ru},PY=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;w.assert(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((y,v)=>y*v),c=_.getReshaped(s.shape,a,i),u=_.getPermuted(c.length,a.length),l=_.getReshapedPermuted(s.shape,a,i),d=_.getSliceBeginCoords(o,a.length),p=_.getSliceSize(l,o,a.length),h=[],f=be({inputs:{x:s},backend:n,attrs:{shape:c}}),m=Cn({inputs:{x:f},backend:n,attrs:{perm:u}}),g=be({inputs:{x:m},backend:n,attrs:{shape:l}}),b=Ru({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(y=>n.disposeIntermediateTensorInfo(y)),b},OY={kernelName:ac,backendName:"webgl",kernelFunc:PY};function MY(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.readSync(s.dataId),c=n.readSync(a.dataId),u=nN(i,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}var LY={kernelName:Lp,backendName:"webgl",kernelFunc:MY},BY="return float(a != b);",EN=cn({opSnippet:BY,cpuKernelImpl:h7,dtype:"bool"}),zY={kernelName:Tc,backendName:"webgl",kernelFunc:EN};function Wd(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.texData.get(r.dataId);return nr({inputs:{x:s.complexTensorInfos.real},backend:n})}var WY={kernelName:oh,backendName:"webgl",kernelFunc:Wd},VY="return float(int(x));";function UY(e,t){let n=new Ia(e.shape,VY),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Gw(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if(a==="complex64"){if(s.dtype==="complex64")return nr({inputs:{x:s},backend:n});let o=It(s.shape),i=Gw({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),c=Sa({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),c}if(s.dtype==="complex64"){let o=Wd({inputs:{input:s},backend:n}),i=Gw({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!w.hasEncodingLoss(s.dtype,a)){let o=nr({inputs:{x:s},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return UY(s,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),c=EN({inputs:{a:s,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),c}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}var GY={kernelName:Va,backendName:"webgl",kernelFunc:Gw},AN="return ceil(x);",HY=Xe({opSnippet:AN,packedOpSnippet:AN,cpuKernelImpl:KX}),jY={kernelName:Ua,backendName:"webgl",kernelFunc:HY},qY=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},KY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function XY(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r,i;Q().getBool("WEBGL_PACK_CLIP")?i=new KY(s.shape):i=new qY(s.shape);let c=[[a],[o]];return n.runWebGLProgram(i,[s],s.dtype,c)}var YY={kernelName:Qs,backendName:"webgl",kernelFunc:XY},ZY=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function DN(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function JY(e){let{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new ZY(r.shape),o=[DN(r,s.complexTensorInfos.real),DN(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var QY={kernelName:kl,backendName:"webgl",kernelFunc:JY},eZ=class{constructor(e){this.outputShape=[],this.outputShape=_.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},tZ=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=_.computeOutShape(e,t);let n=this.outputShape,r=n.length,s=ht(r),a=Sn("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let c=o[t],u=o.slice(-2),l=o.join(),d=`if (${c} < ${i[0]}) {
        return getChannel(
            getT0(${l}), vec2(${u.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];d+=`
        if (${c} < ${i[f]}  && ${c} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${km(o,c,m)}),
            vec2(${km(u,c,m)}));
        }`}let p=i.length,h=i[i.length-1];d+=`
        return getChannel(
          getT${p}(${km(o,c,h)}),
          vec2(${km(u,c,h)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${d}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${n[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${n[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${n[r-2]} &&
            ${a[r-1]} < ${n[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function km(e,t,n){let r=e.indexOf(t);return e.map((a,o)=>o===r?`${a} - ${n}`:a).join()}function Im(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.texData.get(r.dataId);return nr({inputs:{x:s.complexTensorInfos.imag},backend:n})}var nZ={kernelName:Qp,backendName:"webgl",kernelFunc:Im};function Pu(e,t,n){let r=e[0].dtype;if(r==="complex64"){let l=e.map(m=>Wd({inputs:{input:m},backend:n})),d=e.map(m=>Im({inputs:{input:m},backend:n})),p=Pu(l,t,n),h=Pu(d,t,n),f=Sa({inputs:{real:p,imag:h},backend:n});return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),d.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}let s=n.shouldExecuteOnCPU(e);if(r==="string"&&(s=!0),s){let l=e.map(b=>{let y=w.sizeFromShape(b.shape.slice(t));return be({inputs:{x:b},backend:n,attrs:{shape:[-1,y]}})}),d=l.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),p=_.computeOutShape(l.map(b=>b.shape),1),h=l[0].shape[0]===1,f=XX(d,p,r,h),m=_.computeOutShape(e.map(b=>b.shape),t),g=n.makeTensorInfo(m,r,f);return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),g}if(e.length>Q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(e.length/2),d=Pu(e.slice(0,l),t,n),p=Pu(e.slice(l),t,n),h=Pu([d,p],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),h}if(Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let l=new tZ(e.map(d=>d.shape),t);return n.runWebGLProgram(l,e,r)}let{tensors2D:a,outShape:o}=rZ(e,t,n),i=new eZ(a.map(l=>l.shape)),c=n.runWebGLProgram(i,a,r);a.forEach(l=>n.disposeIntermediateTensorInfo(l));let u=be({inputs:{x:c},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(c),u}function rZ(e,t,n){let r=_.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>be({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:r}}function $N(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=w.parseAxisParam(s,t[0].shape)[0],o=_.computeOutShape(t.map(u=>u.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(u=>w.sizeFromShape(u.shape)>0);if(i.length===1)return nr({inputs:{x:i[0]},backend:n});let c=i.map(u=>u.shape);return _.assertParamsConsistent(c,a),Pu(i,a,n)}var sZ={kernelName:oc,backendName:"webgl",kernelFunc:$N},FN=class{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,b=m?2:3,y=m?3:1,v="",x="";n&&(r?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:v=`
          float activation(float x) {
            ${n}
          }
        `,x="result = activation(result);");let k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${i}, ${c});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${l};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${x}
        setOutput(result);
      }
    `}},aZ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${l}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},oZ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=gr(this.outputShape.length);let{dataFormat:n}=t,r=In(),s=n==="channelsLast",a=s?0:1,o=s?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,c="";for(let u=0;u<=1;u++)for(let l=0;l<=1;l++)c+=`
          blockIndex = rc.y + ${l};
          pos = rc.x + ${u};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+l}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+l}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${r.output} = result;
      }
    `}};function RN({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let c=e.shape,u=r.texData.get(e.dataId),l=n.inChannels,d=c[0]*c[1]*c[2],p=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,b=[];if(!((d===1||p===1)&&l>IN)&&u.isPacked&&h&&u.texture!=null&&c[2]%2!=0&&w.arraysEqual(u.shape.slice(-3),c.slice(-3))){let x=c[0]*c[1]*(c[2]+1),k={dataId:e.dataId,shape:[1,x,n.inChannels],dtype:e.dtype},C=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,w.assert(Md(u.shape,k.shape),()=>`packed reshape ${u.shape} to ${k.shape} isn't free`);let N=be({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(N);let $=xm({a:k,b:N,backend:r,transposeA:f,transposeB:m,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),R=r.texData.get($.dataId);w.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=C,R.shape=n.outShape,g=nr({inputs:{x:$},backend:r}),g.shape=n.outShape,b.push($)}else{let x=h?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],k=be({inputs:{x:e},backend:r,attrs:{shape:[1,x,n.inChannels]}}),C=be({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),N=xm({a:k,b:C,transposeA:f,transposeB:m,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=be({inputs:{x:N},backend:r,attrs:{shape:n.outShape}}),b.push(k),b.push(C),b.push(N)}for(let x of b)r.disposeIntermediateTensorInfo(x);return g}function PN({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:c,filterHeight:u,inChannels:l,outWidth:d,outHeight:p,dataFormat:h}=n,f=h==="channelsLast",m=c*u*l,g=p*d,b=[m,g],y=!0,v=!1,x=[],k=be({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),C=be({inputs:{x:t},backend:r,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});x.push(k),x.push(C);let N=new oZ(b,n),$=[k.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],R=r.runWebGLProgram(N,[k],"float32",$),O=be({inputs:{x:R},backend:r,attrs:{shape:[1,b[0],b[1]]}});x.push(R),x.push(O);let D=s!=null,P=a!=null,T=i==="leakyrelu",L=i?bm(i,!0):null,G=new yN(O.shape,C.shape,[1,g,n.outChannels],y,v,D,L,P,T),j=[O,C];if(s&&j.push(s),P&&j.push(a),T){let ne=r.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));j.push(ne),x.push(ne)}let q=r.runWebGLProgram(G,j,"float32"),K=f?[1,p,d,n.outChannels]:[1,n.outChannels,p,d],te=be({inputs:{x:q},backend:r,attrs:{shape:K}});x.push(q);for(let ne of x)r.disposeIntermediateTensorInfo(ne);return te}function iZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:c,dilations:u,dimRoundingMode:l}=r,d=_.convertConv2DDataFormat(c),p=_.computeConv2DInfo(s.shape,a.shape,o,u,i,l,!1,d),h;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))h=RN({x:s,filter:a,convInfo:p,backend:n});else if(Q().getBool("WEBGL_CONV_IM2COL")&&s.shape[0]===1)h=PN({x:s,filter:a,convInfo:p,backend:n});else{let m=new FN(p);h=n.runWebGLProgram(m,[s,a],"float32")}let f=be({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}var cZ={kernelName:Ga,backendName:"webgl",kernelFunc:iZ},uZ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},lZ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=a?1:2,u=a?2:3,l=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${l}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},dZ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},pZ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function hZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:u,filterShape:l}=r,d=_.convertConv2DDataFormat(c),p=_.computeConv2DInfo(s.shape,l,o,1,i,u,!1,d),h=new uZ(p);return n.runWebGLProgram(h,[s,a],"float32")}var fZ={kernelName:zp,backendName:"webgl",kernelFunc:hZ};function mZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=r,d=_.convertConv2DDataFormat(u),p=_.computeConv2DInfo(o,a.shape,i,1,c,l,!1,d),h=new lZ(p);return n.runWebGLProgram(h,[s,a],"float32")}var gZ={kernelName:Ha,backendName:"webgl",kernelFunc:mZ};function bZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:c}=r,u=_.computeConv3DInfo(s.shape,a.shape,o,c,i),l=new aZ(u);return n.runWebGLProgram(l,[s,a],"float32")}var yZ={kernelName:Il,backendName:"webgl",kernelFunc:bZ};function vZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:c}=r,u=_.computeConv3DInfo(s.shape,c,o,1,i),l=new dZ(u);return n.runWebGLProgram(l,[s,a],"float32")}var xZ={kernelName:Wp,backendName:"webgl",kernelFunc:vZ};function wZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:c}=r,u=_.computeConv3DInfo(c,a.shape,i,1,o),l=new pZ(u);return n.runWebGLProgram(l,[s,a],"float32")}var kZ={kernelName:Vp,backendName:"webgl",kernelFunc:wZ},IZ=bN+`
  return cos(x);
`,SZ=Xe({opSnippet:IZ}),CZ={kernelName:ja,backendName:"webgl",kernelFunc:SZ},TZ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,NZ=Xe({opSnippet:TZ}),_Z={kernelName:qa,backendName:"webgl",kernelFunc:NZ},EZ=class{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,c]=e,[u]=t,[l,d]=n;this.outputShape=[u,l,d,c];let p=r==="bilinear"?1:0,[h,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,b]=l>1?[`${(o-1)/(l-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[y,v,x]=d>1?[`${(i-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${v};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${x};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},AZ=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:u}=r,l=new EZ(s.shape,a.shape,i,c,u);return n.runWebGLProgram(l,[s,a,o],"float32")},DZ={kernelName:ic,backendName:"webgl",kernelFunc:AZ},ON=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,s=t?"0.0":`getX(${MN(r,"coords")})`,a=e[e.length-1],o="",i="";t?(o=n?`end != ${a-1}`:"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ht(r)} coords = getOutputCoords();
        int end = ${LN(r,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${o}) {
          int idx = ${i};
          ${LN(r,"coords")} = idx;
          val += getX(${MN(r,"coords")});
        }
        setOutput(val);
      }
    `}};function MN(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function LN(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function $Z(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r,c=s.shape.length,u=_.getAxesPermutation([a],c),l=s;u!=null&&(l=Cn({inputs:{x:s},backend:n,attrs:{perm:u}}));let d=_.getInnerMostAxes(1,c)[0];if(d!==c-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);let p=l.shape[d],h=nr({inputs:{x:l},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){let m=new ON(l.shape,!1,i),g=[[f]],b=h;h=n.runWebGLProgram(m,[h],h.dtype,g),n.disposeIntermediateTensorInfo(b)}if(o){let f=new ON(l.shape,o,i),m=h;h=n.runWebGLProgram(f,[h],h.dtype),n.disposeIntermediateTensorInfo(m)}if(u!=null){let f=_.getUndoAxesPermutation(u),m=Cn({inputs:{x:h},backend:n,attrs:{perm:f}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),m}return h}var FZ={kernelName:Ka,backendName:"webgl",kernelFunc:$Z};function RZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(s.shape.length===1){let c=n.readSync(s.dataId),u=n.readSync(a.dataId),l=nN(c,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,l)}else if(s.shape.length===2){let c=n.bufferSync(s),u=n.bufferSync(a),l=qX(c,u,o,i);return n.makeTensorInfo(l.shape,a.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}var PZ={kernelName:Up,backendName:"webgl",kernelFunc:RZ},OZ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function MZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r;w.assert(a>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`);let i=s.shape[0],c=o==="NHWC"?s.shape[1]:s.shape[2],u=o==="NHWC"?s.shape[2]:s.shape[3],l=o==="NHWC"?s.shape[3]:s.shape[1],d=c*a,p=u*a,h=l/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=new OZ(f,a,o);return n.runWebGLProgram(m,[s],s.dtype)}var LZ={kernelName:cc,backendName:"webgl",kernelFunc:MZ},BN=class{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gr(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,c="",u="";n&&(r?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");let l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${l}
        ${u}
        setOutput(result);
      }
    `}},zN=class{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gr(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,d=l,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;for(let g=0;g<u;g++){for(let b=0;b<l;b++)p+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;p+=`
        xR = xRCorner + ${g} * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(d+1)/2;b++){let y=b*2;if(p+=`
          xC = xCCorner + ${y*c};
          `,i===1){if(y<l&&(o%2==1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,c===1&&y>0?p+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<l)){let v=o%2==0?w.nearestLargerEven(c):c;c%2==0&&o%2==1||c%2!=0&&o%2!=1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${v};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,c>1&&(p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                      xTexelC${y} = getX(batch, xR, xCOffset, d1);
                      xTexelC${y}Ready = 1;
                    }
                    `),p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                  `):v===1?p+=`
                    xC${y+1} = xTexelC${y};
                    `:p+=`
                    xCOffset = xC + ${v};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<l&&(o%2==1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<l&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<l&&(p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<l&&(p+=`
            wTexel = getW(${g}, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<l&&(p+=`
              wTexel = getW(${g}, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
        }
      `}let h="",f="";n&&(r?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function BZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:u}=r,l=c;l==null&&(l=[1,1]),w.assert(_.eitherStridesOrDilationsAreOne(o,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);let d=_.computeConv2DInfo(s.shape,a.shape,o,l,i,u,!0),p;Q().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?p=new zN(d):p=new BN(d);let h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[s,a],"float32",h)}var zZ={kernelName:Xa,backendName:"webgl",kernelFunc:BZ},WZ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},VZ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function UZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:u,filterShape:l}=r,d=_.computeConv2DInfo(s.shape,l,o,i,c,u,!0),p=new WZ(d);return n.runWebGLProgram(p,[s,a],"float32")}var GZ={kernelName:Gp,backendName:"webgl",kernelFunc:UZ};function HZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:u,inputShape:l}=r,d=_.computeConv2DInfo(l,a.shape,o,i,c,u,!0),p=new VZ(d);return n.runWebGLProgram(p,[s,a],"float32")}var jZ={kernelName:Hp,backendName:"webgl",kernelFunc:HZ},qZ=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function KZ(e){let{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=w.sizeFromShape(r.shape),o=be({inputs:{x:r},backend:n,attrs:{shape:[a]}}),i=new qZ(a),c=n.runWebGLProgram(i,[o],o.dtype),u=be({inputs:{x:c},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),u}var XZ={kernelName:jp,backendName:"webgl",kernelFunc:KZ},YZ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:u}=e,{top:l,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${l}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function ZZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:c}=r,u=_.computeDilation2DInfo(s.shape,a.shape,o,i,"NHWC",c),l,d=new YZ(u);l=n.runWebGLProgram(d,[s,a],"float32");let p=be({inputs:{x:l},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(l),p}var JZ={kernelName:Sl,backendName:"webgl",kernelFunc:ZZ};function QZ(e){let{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:c}=_.decodeEinsumEquation(s,a.length);_.checkEinsumDimSizes(o.length,c,a);let{path:u,steps:l}=_.getEinsumComputePath(i,c),d=l.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of l[m]){let{permutationIndices:b,expandDims:y}=_.getEinsumPermutation(h,c[g]),v;_.isIdentityPermutation(b)?v=a[g]:(v=Cn({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=be({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),p===null?p=v:(p=Ww({inputs:{a:v,b:p},backend:n}),f.push(p))}m<d-1&&(u[m]>=0&&(p=vm({inputs:{x:p},backend:n,attrs:{axis:u[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var eJ={kernelName:Xp,backendName:"webgl",kernelFunc:QZ},tJ="return (x >= 0.0) ? x : (exp(x) - 1.0);",nJ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,rJ=Xe({opSnippet:tJ,packedOpSnippet:nJ}),sJ={kernelName:Za,backendName:"webgl",kernelFunc:rJ},aJ="return (b >= 1.0) ? a : a * (b + 1.0);",oJ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,iJ=e=>{let{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Bd(oJ,r.shape,s.shape):new Fu(aJ,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)},cJ={kernelName:Yp,backendName:"webgl",kernelFunc:iJ},uJ=`
  return vec4(equal(a, b));
`,lJ="return float(a == b);",dJ=cn({opSnippet:lJ,packedOpSnippet:uJ,dtype:"bool",cpuKernelImpl:YX}),pJ={kernelName:lc,backendName:"webgl",kernelFunc:dJ},hJ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${_.ERF_P};
  float a1 = ${_.ERF_A1};
  float a2 = ${_.ERF_A2};
  float a3 = ${_.ERF_A3};
  float a4 = ${_.ERF_A4};
  float a5 = ${_.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,fJ=Xe({opSnippet:hJ}),mJ={kernelName:uc,backendName:"webgl",kernelFunc:fJ},WN="return exp(x);",VN=Xe({opSnippet:WN,packedOpSnippet:WN,cpuKernelImpl:ZX}),gJ={kernelName:Ja,backendName:"webgl",kernelFunc:VN};function Hw(e){let{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),c=s;return s<0&&(w.assert(-(o+1)<=s,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+s+1),i.splice(c,0,1),be({inputs:{x:a},backend:r,attrs:{shape:i}})}var bJ={kernelName:dc,backendName:"webgl",kernelFunc:Hw},UN="return exp(x) - 1.0;",yJ=Xe({opSnippet:UN,packedOpSnippet:UN,cpuKernelImpl:JX}),vJ={kernelName:pc,backendName:"webgl",kernelFunc:yJ},GN=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function HN(e,t,n){let r=n.texData.get(e.dataId),s=w.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=s/a,i=be({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),c=i.shape,u=new GN("real",c,t),l=new GN("imag",c,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:c},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:c}],p=n.runWebGLProgram(u,d,"float32"),h=n.runWebGLProgram(l,d,"float32"),f=Sa({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);let m=be({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function xJ(e){let{inputs:t,backend:n}=e,{input:r}=t;return HN(r,!1,n)}var wJ={kernelName:Zp,backendName:"webgl",kernelFunc:xJ},kJ=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Vd(e){let{backend:t,attrs:n}=e,{shape:r,value:s}=n,{dtype:a}=n;if(a=a||w.inferDtype(s),a==="string"){let o=w.getArrayFromDType(a,w.sizeFromShape(r));return o.fill(s),t.makeTensorInfo(r,a,o)}else{let o=new kJ(r,s),i=[[s]];return t.runWebGLProgram(o,[],a,i)}}var IJ={kernelName:Cl,backendName:"webgl",kernelFunc:Vd},SJ=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},CJ={kernelName:hc,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,s=new SJ(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},jN="return floor(x);",TJ=Xe({opSnippet:jN,packedOpSnippet:jN,cpuKernelImpl:QX}),NJ={kernelName:Qa,backendName:"webgl",kernelFunc:TJ},_J=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,EJ=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,AJ=cn({opSnippet:_J,packedOpSnippet:EJ,dtype:"int32"}),DJ={kernelName:eo,backendName:"webgl",kernelFunc:AJ},$J=class{constructor(e){this.variableNames=["A"];let t=In(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},FJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=In(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},RJ={kernelName:yh,backendName:"webgl",kernelFunc:PJ},Ou;function PJ(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:s}=t,{numChannels:a}=r,o=typeof HTMLVideoElement!="undefined"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement,[c,u]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],l=[u,c],d=[u,c,a];(i||o)&&(Ou==null&&(Ou=document.createElement("canvas").getContext("2d")),Ou.canvas.width=c,Ou.canvas.height=u,Ou.drawImage(s,0,0,c,u),s=Ou.canvas);let p=n.makeTensorInfo(l,"int32");n.texData.get(p.dataId).usage=fr.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);let h=Q().getBool("WEBGL_PACK")?new FJ(d):new $J(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}function OJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=_.convertConv2DDataFormat(l),g=_.computeConv2DInfo(s.shape,a.shape,c,d,u,p,!1,m),b,y=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=RN({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else if(Q().getBool("WEBGL_CONV_IM2COL")&&s.shape[0]===1)b=PN({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{let x=o!=null,k=i!=null,C=h==="leakyrelu",N=h?bm(h,!1):null,$=new FN(g,x,N,k,C),R=[s,a];if(o&&R.push(o),i&&R.push(i),C){let O=n.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));R.push(O),y.push(O)}b=n.runWebGLProgram($,R,"float32")}let v=be({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach(x=>n.disposeIntermediateTensorInfo(x)),v}var MJ={kernelName:Oo,backendName:"webgl",kernelFunc:OJ};function LJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:c,pad:u,dilations:l,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=r,f=[],m=l;m==null&&(m=[1,1]),w.assert(_.eitherStridesOrDilationsAreOne(c,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${m}'`);let g=_.computeConv2DInfo(s.shape,a.shape,c,m,u,d,!0),b=Q().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=p?bm(p,b):null,v=[s,a],x=o!=null,k=i!=null,C=p==="leakyrelu";if(x&&v.push(o),k&&v.push(i),C){let O=n.makeTensorInfo([],"float32",w.createScalarValue(h,"float32"));v.push(O),f.push(O)}let N;b?N=new zN(g,x,y,k,C):N=new BN(g,x,y,k,C);let $=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=n.runWebGLProgram(N,v,"float32",$);return f.forEach(O=>n.disposeIntermediateTensorInfo(O)),R}var BJ={kernelName:Mo,backendName:"webgl",kernelFunc:LJ},zJ=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let r=ht(t.length),s=ht(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${r} strides = ${r}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function WJ(e){let{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,o=a[a.length-1],i=w.sizeFromShape(r.shape),[c,u,l,d]=_.prepareAndValidate(r,s),p=be({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),h=be({inputs:{x:r},backend:n,attrs:{shape:[w.sizeFromShape(r.shape)/l,l]}});if(n.shouldExecuteOnCPU([r,s])||r.dtype==="string"){let b=n.readSync(s.dataId),y=n.bufferSync(r),v=e7(b,y,r.dtype,u,o,l,d,r.shape,i);return n.makeTensorInfo(c,r.dtype,v.values)}let f=new zJ(o,d,[u,l]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=be({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var VJ={kernelName:mc,backendName:"webgl",kernelFunc:WJ},UJ=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=ht(this.rank),r=GJ(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function GJ(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)s===2?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[s]}`);return r.join()}function qN(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r,c=w.parseAxisParam(o,s.shape)[0],u=_.segment_util.collectGatherOpShapeInfo(s,a,c,i),l=w.sizeFromShape(a.shape),d=[],p=be({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=be({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,l/u.batchSize]}});d.push(p),d.push(h);let f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||s.dtype==="string"){let y=n.bufferSync(h),v=n.bufferSync(p),x=t7(v,y,f);return d.forEach(k=>n.disposeIntermediateTensorInfo(k)),n.makeTensorInfo(u.outputShape,x.dtype,x.values)}let m=new UJ(p.shape,f),g=n.runWebGLProgram(m,[p,h],p.dtype);d.push(g);let b=be({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return d.forEach(y=>n.disposeIntermediateTensorInfo(y)),b}var HJ={kernelName:fc,backendName:"webgl",kernelFunc:qN},jJ="return float(a > b);",qJ=`
  return vec4(greaterThan(a, b));
`,KJ=cn({opSnippet:jJ,packedOpSnippet:qJ,cpuKernelImpl:n7,dtype:"bool"}),XJ={kernelName:gc,backendName:"webgl",kernelFunc:KJ},YJ="return float(a >= b);",ZJ=`
  return vec4(greaterThanEqual(a, b));
`,JJ=cn({opSnippet:YJ,packedOpSnippet:ZJ,dtype:"bool",cpuKernelImpl:r7}),QJ={kernelName:no,backendName:"webgl",kernelFunc:JJ};function eQ(e){let{inputs:t,backend:n}=e,{input:r}=t;return HN(r,!0,n)}var tQ={kernelName:Jp,backendName:"webgl",kernelFunc:eQ},nQ="return float(!isnan(x) && !isinf(x));",rQ=Xe({opSnippet:nQ,dtype:"bool"}),sQ={kernelName:bc,backendName:"webgl",kernelFunc:rQ},aQ="return float(isinf(x));",oQ=Xe({opSnippet:aQ,dtype:"bool"}),iQ={kernelName:yc,backendName:"webgl",kernelFunc:oQ},cQ="return float(isnan(x));",uQ=Xe({opSnippet:cQ,dtype:"bool"}),lQ={kernelName:vc,backendName:"webgl",kernelFunc:uQ},dQ="return float(a < b);",pQ=`
  return vec4(lessThan(a, b));
`,hQ=cn({opSnippet:dQ,packedOpSnippet:pQ,cpuKernelImpl:s7,dtype:"bool"}),fQ={kernelName:xc,backendName:"webgl",kernelFunc:hQ},mQ="return float(a <= b);",gQ=`
  return vec4(lessThanEqual(a, b));
`,bQ=cn({opSnippet:mQ,packedOpSnippet:gQ,cpuKernelImpl:a7,dtype:"bool"}),yQ={kernelName:wc,backendName:"webgl",kernelFunc:bQ};function vQ(e){let{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=o7(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}var xQ={kernelName:eh,backendName:"webgl",kernelFunc:vQ},wQ=`if (x < 0.0) return NAN;
  return log(x);`,kQ=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,IQ=Xe({opSnippet:wQ,packedOpSnippet:kQ,cpuKernelImpl:i7}),SQ={kernelName:ao,backendName:"webgl",kernelFunc:IQ},CQ="return log(1.0 + x);",TQ=Xe({opSnippet:CQ}),NQ={kernelName:kc,backendName:"webgl",kernelFunc:TQ},_Q="return float(a >= 1.0 && b >= 1.0);",EQ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,AQ=cn({opSnippet:_Q,packedOpSnippet:EQ,dtype:"bool"}),DQ={kernelName:Ic,backendName:"webgl",kernelFunc:AQ},$Q="return float(!(x >= 1.0));",FQ=Xe({opSnippet:$Q}),RQ={kernelName:Tl,backendName:"webgl",kernelFunc:FQ},PQ="return float(a >= 1.0 || b >= 1.0);",OQ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,MQ=cn({opSnippet:PQ,packedOpSnippet:OQ,dtype:"bool"}),LQ={kernelName:Nl,backendName:"webgl",kernelFunc:MQ},BQ=class{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,c=`float(${n}) + float(${r}) * sum`;s===.5?i=`inversesqrt(${c})`:s===1?i=`1.0/(${c})`:i=`exp(log(${c}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},zQ=class{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,c=`float(${n}) + float(${r}) * sum`;s===.5?i=`inversesqrt(${c})`:s===1?i=`1.0/(${c})`:i=`exp(log(${c}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},WQ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:c}=r,u=Q().getBool("WEBGL_PACK_NORMALIZATION")?new zQ(s.shape,a,o,i,c):new BQ(s.shape,a,o,i,c);return n.runWebGLProgram(u,[s],s.dtype)},VQ={kernelName:_l,backendName:"webgl",kernelFunc:WQ},UQ=class{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},GQ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:c,alpha:u,beta:l}=r,d=new UQ(s.shape,i,c,u,l);return n.runWebGLProgram(d,[s,a,o],s.dtype)},HQ={kernelName:th,backendName:"webgl",kernelFunc:GQ};function jQ(e,t,n,r){let s=w.sizeFromShape(t),o=w.sizeFromShape(e.shape)/s,i=be({inputs:{x:e},attrs:{shape:[o,s]},backend:r}),c=bi(i,e.dtype,"max",r),u=be({inputs:{x:c},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(c),u}function KN(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=s.shape.length,c=w.parseAxisParam(a,s.shape),u=c,l=_.getAxesPermutation(u,i),d=l!=null,p=n.shouldExecuteOnCPU([s]),h=s;if(d){if(p){let v=n.texData.get(h.dataId).values,x=new Array(i);for(let N=0;N<x.length;N++)x[N]=s.shape[l[N]];let k=zw(v,s.shape,s.dtype,l,x);h=n.makeTensorInfo(x,s.dtype);let C=n.texData.get(h.dataId);C.values=k}else h=ym(s,l,n);u=_.getInnerMostAxes(u.length,i)}_.assertAxesAreInnerMostDims("max",u,i);let[f,m]=_.computeOutAndReduceShapes(h.shape,u),g=f;o&&(g=_.expandShapeToKeepDim(f,c));let b;if(p){let v=n.texData.get(h.dataId).values,x=c7(v,w.sizeFromShape(m),g,s.dtype);b=n.makeTensorInfo(g,s.dtype);let k=n.texData.get(b.dataId);k.values=x}else b=jQ(h,m,g,n);return d&&n.disposeIntermediateTensorInfo(h),b}var qQ={kernelName:oo,backendName:"webgl",kernelFunc:KN},KQ=pN+`
  return max(a, b);
`,XQ=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+gm+`
  return result;
`,YQ=cn({opSnippet:KQ,packedOpSnippet:XQ,cpuKernelImpl:u7}),ZQ={kernelName:io,backendName:"webgl",kernelFunc:YQ};function JQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Nu(s,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:c}=r,u=1;w.assert(_.eitherStridesOrDilationsAreOne(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let l=_.computePool2DInfo(s.shape,a,o,u,i,c);if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))return nr({inputs:{x:s},backend:n});let d=new zd(l,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}var QQ={kernelName:co,backendName:"webgl",kernelFunc:JQ};function eee(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dataFormat:c,dimRoundingMode:u}=r,l=[1,1,1],d=_.computePool3DInfo(s.shape,a,o,l,i,u,c),p=new Vw(d,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}var tee={kernelName:El,backendName:"webgl",kernelFunc:eee},nee=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=s-1-e.padInfo.top,i=a-1-e.padInfo.left,c=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},ree=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.front,d=c-1-e.padInfo.top,p=u-1-e.padInfo.left,h=i*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function see(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=r,d=[1,1,1],p=_.computePool3DInfo(o.shape,i,c,d,u,l),h=new Vw(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new ree(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var aee={kernelName:rh,backendName:"webgl",kernelFunc:see};function oee(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;Nu([a,o],"maxPoolGrad");let{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=r,p=_.computePool2DInfo(i.shape,c,u,1,l,d),h=!0,f=new zd(p,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),g=new nee(p),b=n.runWebGLProgram(g,[s,m],i.dtype);return n.disposeIntermediateTensorInfo(m),b}var iee={kernelName:nh,backendName:"webgl",kernelFunc:oee};function cee(e,t,n,r){let s=new zd(n,"max",!1),a=r.runWebGLProgram(s,[e],"float32");s=new zd(n,"max",!0,!0,t);let o=r.runWebGLProgram(s,[e],"float32");return[a,o]}var uee={kernelName:sh,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,c=n;w.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let u=[1,1];w.assert(_.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=_.computePool2DInfo(r.shape,s,a,u,o),[d,p]=cee(r,i,l,c);return[d,p]}};function lee(e,t,n,r){let s=w.sizeFromShape(t),o=w.sizeFromShape(e.shape)/s,i=be({inputs:{x:e},attrs:{shape:[o,s]},backend:r}),c=bi(i,"float32","mean",r),u=be({inputs:{x:c},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(c),u}var dee={kernelName:uo,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:s,axis:a}=t,o=n,i=r.shape.length,c=w.parseAxisParam(a,r.shape),u=c,l=_.getAxesPermutation(u,i),d=l!=null,p=o.shouldExecuteOnCPU([r]),h=[],f=r;if(d){if(p){let x=o.texData.get(f.dataId).values,k=new Array(i);for(let $=0;$<k.length;$++)k[$]=r.shape[l[$]];let C=zw(x,r.shape,r.dtype,l,k);f=o.makeTensorInfo(k,r.dtype);let N=o.texData.get(f.dataId);N.values=C}else f=ym(r,l,o);h.push(f),u=_.getInnerMostAxes(u.length,i)}_.assertAxesAreInnerMostDims("sum",u,i);let[m,g]=_.computeOutAndReduceShapes(f.shape,u),b=m;s&&(b=_.expandShapeToKeepDim(m,c));let y=lee(f,g,b,o);for(let v of h)o.disposeIntermediateTensorInfo(v);return y}};function pee(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,c=w.parseAxisParam(a,s.shape),u=c,l=_.getAxesPermutation(u,i),d=s;l!=null&&(d=Cn({inputs:{x:s},backend:n,attrs:{perm:l}}),u=_.getInnerMostAxes(u.length,s.shape.length)),_.assertAxesAreInnerMostDims("min",u,i);let[p,h]=_.computeOutAndReduceShapes(d.shape,u),f=w.sizeFromShape(h),m=be({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=bi(m,m.dtype,"min",n),b;if(o){let y=_.expandShapeToKeepDim(p,c);b=be({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=be({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),l!=null&&n.disposeIntermediateTensorInfo(d),b}var hee={kernelName:lo,backendName:"webgl",kernelFunc:pee},fee=pN+`
  return min(a, b);
`,mee=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+gm+`
  return result;
`,gee=cn({opSnippet:fee,packedOpSnippet:mee,cpuKernelImpl:l7}),bee={kernelName:po,backendName:"webgl",kernelFunc:gee},yee=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,l)=>u[0]+e[l]+u[1]);let r=e.length,s=ht(r),a=t.map(u=>u[0]).join(","),o=t.map((u,l)=>u[0]+e[l]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c=n==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${o});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},vee=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let r=e.length,s=ht(r),a=t.map(h=>h[0]).join(","),o=t.map((h,f)=>h[0]+e[f]).join(","),i=Sn("rc",r),c=Sn("source",r),u=`${i[r-1]} < ${this.outputShape[r-1]}`,l=r===1?"source":`vec2(${c.slice(-2).join()})`,d=n==="reflect"?0:1,p="";if(r===1){let h=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${c.join()}), ${l});
        ${i[r-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${c.join()}), ${l});
        }
      `}else{let h=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${c.join()}), ${l});
        ${i[r-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${c.join()}), ${l});
        }
        rc = outputLoc;
        ${i[r-2]} += 1;
        if(${i[r-2]} < ${this.outputShape[r-2]}) {
          ${h}
          result[2] = getChannel(getX(${c.join()}), ${l});
          ${i[r-1]} += 1;
          if(${u}) {
            ${h}
            result[3] = getChannel(getX(${c.join()}), ${l});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${o});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},xee=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:s,mode:a}=n,o=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vee(r.shape,s,a):new yee(r.shape,s,a);return t.runWebGLProgram(o,[r],r.dtype)},wee={kernelName:ho,backendName:"webgl",kernelFunc:xee},kee=`if (b == 0.0) return NAN;
  return mod(a, b);`,Iee=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+gm+`
  return result;
`,See=cn({opSnippet:kee,packedOpSnippet:Iee}),Cee={kernelName:Sc,backendName:"webgl",kernelFunc:See},Tee=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},Nee=`
if (a == b) {
  return 1.0;
};
return a / b;`,_ee=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,XN=cn({opSnippet:Nee,packedOpSnippet:_ee,checkOutOfBounds:!0}),Eee={kernelName:Ya,backendName:"webgl",kernelFunc:XN},YN="return a - b;",ZN=cn({opSnippet:YN,packedOpSnippet:YN,supportsComplex:!0,cpuKernelImpl:T7}),Aee={kernelName:Do,backendName:"webgl",kernelFunc:ZN};function JN(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=w.parseAxisParam([a],s.shape),i=KN({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=_.expandShapeToKeepDim(i.shape,o),u=be({inputs:{x:i},backend:n,attrs:{shape:c}}),l=ZN({inputs:{a:s,b:u},backend:n}),d=VN({inputs:{x:l},backend:n}),p=vm({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=be({inputs:{x:p},backend:n,attrs:{shape:c}}),f=XN({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}var Dee={kernelName:Eo,backendName:"webgl",kernelFunc:JN};function $ee(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r,c=i?s:JN({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=c.shape[0],l=c.shape[1],d=new Tee(u,l,a),p=[[o]],h=n.runWebGLProgram(d,[c],"int32",p);return i||n.disposeIntermediateTensorInfo(c),h}var Fee={kernelName:ah,backendName:"webgl",kernelFunc:$ee},QN="return -x;";function Ree(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let a=n.texData.get(r.dataId),[o,i]=p7(a.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,o)}let s;return Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new $u(r.shape,QN):s=new Ia(r.shape,QN),n.runWebGLProgram(s,[r],r.dtype)}var Pee={kernelName:Cc,backendName:"webgl",kernelFunc:Ree},Oee=as.nonMaxSuppressionV3Impl;function Mee(e){_.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=r,u=n.readSync(s.dataId),l=n.readSync(a.dataId),{selectedIndices:d}=Oee(u,l,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Lee={kernelName:Nc,backendName:"webgl",kernelFunc:Mee},Bee=as.nonMaxSuppressionV4Impl;function zee(e){_.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:u}=r,l=n.readSync(s.dataId),d=n.readSync(a.dataId),{selectedIndices:p,validOutputs:h}=Bee(l,d,o,i,c,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var Wee={kernelName:_c,backendName:"webgl",kernelFunc:zee},Vee=as.nonMaxSuppressionV5Impl;function Uee(e){_.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=r,l=n.readSync(s.dataId),d=n.readSync(a.dataId),p=o,h=i,f=c,m=u,{selectedIndices:g,selectedScores:b}=Vee(l,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var Gee={kernelName:Ec,backendName:"webgl",kernelFunc:Uee},Hee=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${n}),
                      float(index == coords.y)));
      }
    `}},jee=e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r,c=w.sizeFromShape(s.shape),u=new Hee(c,a,o,i),l=be({inputs:{x:s},backend:n,attrs:{shape:[c]}}),d=n.runWebGLProgram(u,[l],s.dtype);n.disposeIntermediateTensorInfo(l);let p=[...s.shape,a],h=be({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),h},qee={kernelName:mo,backendName:"webgl",kernelFunc:jee};function Sm(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="complex64"){let s=Wd({inputs:{input:r},backend:n}),a=Sm({inputs:{x:s},backend:n}),o=Im({inputs:{input:r},backend:n}),i=Sm({inputs:{x:o},backend:n}),c=Sa({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}else return Vd({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}var Kee={kernelName:Kc,backendName:"webgl",kernelFunc:Sm};function e_(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let s=Wd({inputs:{input:r},backend:n}),a=e_({inputs:{x:s},backend:n}),o=Im({inputs:{input:r},backend:n}),i=Sm({inputs:{x:o},backend:n}),c=Sa({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}else return Vd({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var Xee={kernelName:Ac,backendName:"webgl",kernelFunc:e_};function Yee(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(t.length===1)return Hw({inputs:{input:t[0]},backend:n,attrs:{dim:s}});let a=t[0].shape,o=t[0].dtype;t.forEach(l=>{w.assertShapesMatch(a,l.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],c=t.map(l=>{let d=Hw({inputs:{input:l},backend:n,attrs:{dim:s}});return i.push(d),d}),u=$N({inputs:c,backend:n,attrs:{axis:s}});return i.forEach(l=>n.disposeIntermediateTensorInfo(l)),u}var Zee={kernelName:Dc,backendName:"webgl",kernelFunc:Yee},Jee=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);let r=e.length,s=ht(r),a=t.map(c=>c[0]).join(","),o=t.map((c,u)=>c[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${o});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},Qee=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let r=e.length,s=ht(r),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=Sn("rc",r),c=Sn("source",r),u=`${i[r-1]} < ${this.outputShape[r-1]}`,l=r===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${s} rc = outputLoc;`,`${i[r-1]} += 1;
       if(${u}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${i[r-2]} += 1;
       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${i[r-1]} += 1;
         if(${u}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=r===1?2:4;f<m;f++)h+=`
        ${d[f]}
        if (${p}) {
          result[${f}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${f}] = getChannel(getX(${c.join()}), ${l});
        }
      `;h+=r===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${o});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},t_=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;if(w.sizeFromShape(s.shape)===0){let u=a.map((l,d)=>l[0]+s.shape[d]+l[1]);return Vd({backend:n,attrs:{shape:u,value:o,dtype:s.dtype}})}let i=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Qee(s.shape,a,o):new Jee(s.shape,a,o),c=[[o]];return n.runWebGLProgram(i,[s],s.dtype,c)},ete={kernelName:go,backendName:"webgl",kernelFunc:t_},tte=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,nte=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+gm+`
  return result;
`,rte=cn({opSnippet:tte,packedOpSnippet:nte}),ste={kernelName:bo,backendName:"webgl",kernelFunc:rte};function ate(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,c=[],u=w.parseAxisParam(a,s.shape),l=u,d=_.getAxesPermutation(l,i),p=s;d!=null&&(p=Cn({inputs:{x:s},backend:n,attrs:{perm:d}}),l=_.getInnerMostAxes(l.length,i),c.push(p)),_.assertAxesAreInnerMostDims("prod",l,i);let h;if(n.shouldExecuteOnCPU([p])){let f=n.texData.get(p.dataId).values,{outVals:m,outShape:g,outDtype:b}=f7(p.shape,p.dtype,f,l);h=n.makeTensorInfo(g,b,m)}else{let[f,m]=_.computeOutAndReduceShapes(p.shape,l),g=w.sizeFromShape(m),b=be({inputs:{x:p},backend:n,attrs:{shape:[-1,g]}}),y=Ch(s.dtype),v=bi(b,y,"prod",n);h=be({inputs:{x:v},backend:n,attrs:{shape:f}}),c.push(b),c.push(v)}if(o){c.push(h);let f=_.expandShapeToKeepDim(h.shape,u);h=be({inputs:{x:h},backend:n,attrs:{shape:f}})}return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var ote={kernelName:$c,backendName:"webgl",kernelFunc:ate},n_=e=>{let{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=m7(r,s,a,o);return t.makeTensorInfo([i.length],o,i)},ite={kernelName:Al,backendName:"webgl",kernelFunc:n_},cte="return 1.0 / x;",ute=Xe({opSnippet:cte}),lte={kernelName:Fc,backendName:"webgl",kernelFunc:ute},dte=Hr+`
  return (x < 0.0) ? 0.0 : x;
`,pte=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hte=Xe({opSnippet:dte,packedOpSnippet:pte}),fte={kernelName:vo,backendName:"webgl",kernelFunc:hte},mte=Hr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,gte=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,bte=Xe({opSnippet:mte,packedOpSnippet:gte}),yte={kernelName:wo,backendName:"webgl",kernelFunc:bte},vte=class{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];let[a,o,i,c]=e;this.outputShape=[a,t,n,c];let u=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;s?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/l[0]},
          ${u[1]/l[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},xte=class{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,c]=e;this.outputShape=[a,t,n,c];let u=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;s?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/l[0]},
          ${u[1]/l[1]},
          ${u[1]/l[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function wte(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[c,u]=i,l=Q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xte(s.shape,c,u,a,o):new vte(s.shape,c,u,a,o);return n.runWebGLProgram(l,[s],"float32")}var kte={kernelName:xo,backendName:"webgl",kernelFunc:wte},Ite=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],c=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/c[0],l=i[1]/c[1],d=1/u,p=1/l,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${l});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Ste(e){let{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new Ite(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var Cte={kernelName:ch,backendName:"webgl",kernelFunc:Ste},Tte=class{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];let[a,o,i,c]=e;this.outputShape=[a,t,n,c];let u=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0",p;s?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/l[0]},
          ${u[1]/l[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},Nte=class{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,c]=e;this.outputShape=[a,t,n,c];let u=[r&&t>1?o-1:o,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0",p;s?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/l[0]},
          ${u[1]/l[1]},
          ${u[1]/l[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function _te(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[c,u]=i,l=Q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Nte(s.shape,c,u,a,o):new Tte(s.shape,c,u,a,o);return n.runWebGLProgram(l,[s],s.dtype)}var Ete={kernelName:Dl,backendName:"webgl",kernelFunc:_te},Ate=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],c=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/c[0],l=i[1]/c[1],d=1/u,p=1/l,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${l});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Dte(e){let{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new Ate(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var $te={kernelName:ih,backendName:"webgl",kernelFunc:Dte},Fte=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,s=e.map((o,i)=>r(i)).join(","),a=ht(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}},Rte=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=Sn("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=ht(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(r.slice())};
          if(${s}){
            result.g = ${c(r.slice())};
          }
          if(${a}) {
            result.b = ${u(r.slice())};
            if(${s}) {
              result.a = ${l(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(h){return d(h)}function c(h){return h[n-1]="("+h[n-1]+" + 1)",d(h)}function u(h){return h[n-2]="("+h[n-2]+" + 1)",d(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",d(h)}function d(h){let f=e.map((b,y)=>p(y,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function p(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function Pte(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=s.shape.length,i=w.parseAxisParam(a,s.shape);if(o===0)return nr({inputs:{x:s},backend:n});let c=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rte(s.shape,i):new Fte(s.shape,i);return n.runWebGLProgram(c,[s],s.dtype)}var Ote={kernelName:ko,backendName:"webgl",kernelFunc:Pte},Mte=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Lte={kernelName:Xc,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,c=new Mte(r.shape,a),[u,l]=_.getImageCenter(o,r.shape[1],r.shape[2]),d=[[u,l,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(c,[r],r.dtype,d)}},Bte=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,zte=Xe({opSnippet:Bte}),Wte={kernelName:Io,backendName:"webgl",kernelFunc:zte},Vte="return inversesqrt(x);",Ute=Xe({opSnippet:Vte,cpuKernelImpl:g7}),Gte={kernelName:So,backendName:"webgl",kernelFunc:Ute},r_=class{constructor(e,t,n,r,s,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=ht(s.length),c=ht(a.length),u="";n===1?u="i":n===2&&(u="i, j");let l=`getIndices(${u})`,d="";r===1?d="i":r===2&&(d="i, coords[1]");let p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${s});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${l});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Hte(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=_.calculateShapes(a,s,o),p=[d/u,u];if(d===0)return n.makeTensorInfo(o,s.dtype);let h=be({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),f=be({inputs:{x:a},backend:n,attrs:{shape:[c,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new r_(c,i,h.shape.length,f.shape.length,l,p),b=n.runWebGLProgram(g,[f,h,m],f.dtype),y=be({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}var jte={kernelName:Pc,backendName:"webgl",kernelFunc:Hte},qte=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let r,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",r="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],c=[];for(let u=0;u<t.length;u++)c.push(`${o[u]}`),u<e&&i.push(`${o[u]}`);r=i.join(),s=c.join()}let a=ht(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Kte(e){let{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=new qte(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,a],kr(s.dtype,a.dtype))}var Xte={kernelName:Oc,backendName:"webgl",kernelFunc:Kte},Yte=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${_.SELU_SCALEALPHA};
  float scale = ${_.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Zte=Xe({opSnippet:Yte}),Jte={kernelName:Mc,backendName:"webgl",kernelFunc:Zte},s_="return 1.0 / (1.0 + exp(-1.0 * x));",Qte=Xe({opSnippet:s_,packedOpSnippet:s_,cpuKernelImpl:b7}),ene={kernelName:To,backendName:"webgl",kernelFunc:Qte},tne=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,nne=Xe({opSnippet:tne}),rne={kernelName:zc,backendName:"webgl",kernelFunc:nne},sne=bN+`
  return sin(x);
`,ane=Xe({opSnippet:sne}),one={kernelName:Co,backendName:"webgl",kernelFunc:ane},ine=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,cne=Xe({opSnippet:ine}),une={kernelName:Bc,backendName:"webgl",kernelFunc:cne},lne=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,dne=Xe({opSnippet:lne}),pne={kernelName:Wc,backendName:"webgl",kernelFunc:dne},hne=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;w.assert(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((b,y)=>b*y),c=[[0,0]];c.push(...o);for(let b=1+a.length;b<s.shape.length;++b)c.push([0,0]);let u=[],l=t_({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),d=_.getReshaped(l.shape,a,i,!1),p=_.getPermuted(d.length,a.length,!1),h=_.getReshapedPermuted(l.shape,a,i,!1),f=be({inputs:{x:l},backend:n,attrs:{shape:d}}),m=Cn({inputs:{x:f},backend:n,attrs:{perm:p}}),g=be({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(l),u.push(f),u.push(m),u.forEach(b=>n.disposeIntermediateTensorInfo(b)),g},fne={kernelName:Vc,backendName:"webgl",kernelFunc:hne};function mne(e){let{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(r.dataId),c=n.readSync(s.dataId),u=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[d,p,h,f,m]=v7(i,r.shape,r.dtype,c,s.dtype,u,l);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],s.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var gne={kernelName:uh,backendName:"webgl",kernelFunc:mne};function bne(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),c=Array.from(n.readSync(a.dataId)),[u,l,d]=x7(i,r.shape,r.dtype,o,c);return[n.makeTensorInfo(l,r.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var yne={kernelName:lh,backendName:"webgl",kernelFunc:bne};function vne(e){let{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(r.dataId),i=n.readSync(s.dataId),c=n.readSync(a.dataId),[u,l]=sN(o,r.shape,r.dtype,i,c,!0);return n.makeTensorInfo(l,r.dtype,u)}var xne={kernelName:dh,backendName:"webgl",kernelFunc:vne};function wne(e){let{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(r.dataId),i=n.readSync(s.dataId),c=n.readSync(a.dataId),[u,l]=sN(o,r.shape,r.dtype,i,c);return n.makeTensorInfo(l,r.dtype,u)}var kne={kernelName:ph,backendName:"webgl",kernelFunc:wne};function Ine(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:c,numUpdates:u,strides:l,outputSize:d}=_.calculateShapes(a,s,i),p=!1,h=new r_(u,c,s.shape.length,a.shape.length,l,[d,1],p),f=n.runWebGLProgram(h,[a,s,o],a.dtype),m=be({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}var Sne={kernelName:hh,backendName:"webgl",kernelFunc:Ine};function Cne(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=w.parseAxisParam(o,s.shape)[0],c=_.prepareSplitSize(s,a,i),u=s.shape.length,l=new Array(u).fill(0),d=s.shape.slice();return c.map(p=>{let h=[...d];h[i]=p;let f=Ru({inputs:{x:s},backend:n,attrs:{begin:l,size:h}});return l[i]+=p,f})}var Tne={kernelName:Uc,backendName:"webgl",kernelFunc:Cne},a_="return sqrt(x);",Nne=Xe({opSnippet:a_,packedOpSnippet:a_,cpuKernelImpl:w7}),_ne={kernelName:No,backendName:"webgl",kernelFunc:Nne},Ene="return x * x;",Ane=Xe({opSnippet:Ene}),Dne={kernelName:$l,backendName:"webgl",kernelFunc:Ane},o_="return (a - b) * (a - b);",$ne=cn({opSnippet:o_,packedOpSnippet:o_}),Fne={kernelName:Ao,backendName:"webgl",kernelFunc:$ne};function Rne({inputs:e,attrs:t,backend:n}){let{x:r}=e,s=Hr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Ia(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}var Pne={kernelName:ta,backendName:"webgl",kernelFunc:Rne},One=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,s=ht(n.length),a=ht(n.length),o="";if(r===1)o="coords * strides + begin";else{let i=0;o=n.map((c,u)=>(i++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${i-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function Mne(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:p}=r,{nonStrided:h,$begin:f,$strides:m,size:g,newShape:b,outShape:y}=vn.sliceInfo(s.shape,a,o,i,c,u,l,d,p),v=be({inputs:{x:s},backend:n,attrs:{shape:b}}),x;if(h){let C=Ru({inputs:{x:v},backend:n,attrs:{begin:f,size:g}});x=be({inputs:{x:C},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(C)}else if(y.some(C=>C===0))x=n.makeTensorInfo(y,s.dtype,[]);else if(n.shouldExecuteOnCPU([v])){let $=n.texData.get(v.dataId).values,R=ze(v.shape,v.dtype,$),O=k7(y,R,m,f);x=n.makeTensorInfo(y,v.dtype,O.values)}else{let N=new One(f,m,y);x=n.runWebGLProgram(N,[v],v.dtype)}let k=be({inputs:{x},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(x),k}var Lne={kernelName:Gc,backendName:"webgl",kernelFunc:Mne};function Bne(e){let{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:u}=r,{data:l,dataSplits:d}=t,p=n.readSync(l.dataId),h=n.readSync(d.dataId),[f,m]=I7(p,h,s,a,o,i,c,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var zne={kernelName:fh,backendName:"webgl",kernelFunc:Bne};function Wne(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),c=n.readSync(o.dataId)[0],[u,l,d]=S7(i,c,s),p=l.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var Vne={kernelName:mh,backendName:"webgl",kernelFunc:Wne};function Une(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=C7(o,s);return n.makeTensorInfo(a.shape,"int32",i)}var Gne={kernelName:gh,backendName:"webgl",kernelFunc:Une},Hne="return tan(x);",jne=Xe({opSnippet:Hne}),qne={kernelName:$o,backendName:"webgl",kernelFunc:jne},Kne=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Xne=Xe({opSnippet:Kne}),Yne={kernelName:Fo,backendName:"webgl",kernelFunc:Xne},Zne=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let r=ht(this.rank),s=Jne(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Jne(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}function i_(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if(s.dtype==="string"||s.shape.length>5){let c=n.readSync(s.dataId),u=s.dtype==="string"?c.map(p=>w.decodeString(p)):c,l=ze(s.shape,s.dtype,u),d=N7(l,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new Zne(s.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}var Qne={kernelName:ea,backendName:"webgl",kernelFunc:i_},ere=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},tre=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function yi(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function c_(e){let t=1;for(;t<e;)t*=2;return t}function nre(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r,i=Q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=Q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,l=u[u.length-1];if(n.shouldExecuteOnCPU([s])||l<i||a>c){let O=n.readSync(s.dataId),[D,P]=_7(O,u,s.dtype,a,o);return[n.makeTensorInfo(D.shape,D.dtype,D.values),n.makeTensorInfo(P.shape,P.dtype,P.values)]}if(a===0)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(l===1)return[s,Vd({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let d=n.texData.get(s.dataId),p=d!==null&&d.isPacked,h=p?n.unpackTensor(s):s,m=w.sizeFromShape(u)/l,g=be({inputs:{x:h},attrs:{shape:[m,l]},backend:n});p&&yi(n,h);let b=c_(a),y=c_(l),v=null,x=()=>v===null?[g,g]:[g,v],k=(O,D,P)=>{let T=x(),L=new ere(P),j=[[l],[v===null?1:0],[Number.NEGATIVE_INFINITY],[O],[D]],q=v;v=n.runWebGLProgram(L,T,"int32",j),yi(n,q)};for(let O=1;O<b;O*=2){let D=O*2;for(let P=O;P>=1;P/=2)k(D,P,[m,y])}for(let O=y;O>b;O/=2){let D=x(),P=new tre([m,O/2]),L=[[l],[v===null?1:0],[b]],G=v;v=n.runWebGLProgram(P,D,"int32",L),yi(n,G);let j=b/2,q=j*2;for(let K=j;K>=1;K/=2)k(q,K,v.shape)}let C=v;v=Ru({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,a]}}),yi(n,C);let N=qN({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});yi(n,g);let $=u.slice(0,-1);$.push(a),C=v,v=be({inputs:{x:v},attrs:{shape:$},backend:n}),yi(n,C);let R=N;return N=be({inputs:{x:N},attrs:{shape:$},backend:n}),yi(n,R),[N,v]}var rre={kernelName:Hc,backendName:"webgl",kernelFunc:nre},sre=class{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function are(e){let{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:u}=r,[l,d,p,h]=s.shape,[f,m]=u!=null?u:[d,p],g=[l,f,m,h],b=new sre(d,p,o,i,c,g);return n.runWebGLProgram(b,[s,a],"float32")}var ore={kernelName:jc,backendName:"webgl",kernelFunc:are};function ire(e){let{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Nu(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=r.readSync(a.dataId),{outputValues:i,outputShape:c,indices:u}=E7(o,s,a.shape,a.dtype);return[r.makeTensorInfo(c,a.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}var cre={kernelName:bh,backendName:"webgl",kernelFunc:ire};function ure(e){let{inputs:t,backend:n,attrs:r}=e,{value:s}=t,{axis:a}=r;a<0&&(a+=s.shape.length);let o=s,i=o.shape.length,c=s.shape[a],u=new Array(i-1),l=0;for(let m=0;m<i;m++)m!==a&&(u[l++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(c);for(let m=0;m<f.length;m++){p[a]=m;let g=Ru({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),b=be({inputs:{x:g},backend:n,attrs:{shape:u}});f[m]=b,d.push(g)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var lre={kernelName:qc,backendName:"webgl",kernelFunc:ure},dre=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,o=a*Math.ceil(s/n);this.outputShape=[r,o];let i="0.0",c="sumValue",u=Math.floor(n/4)*4,l=n%4,d=`
        sumValue += dot(values, segFilter);
    `,p="";s%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let h="";s%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${l===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}};function pre(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r,i=s.shape.length,c=[],u=0,l=_.getAxesPermutation([u],i),d=s;l!=null&&(d=Cn({inputs:{x:s},backend:n,attrs:{perm:l}}),c.push(d),u=_.getInnerMostAxes(1,i)[0]);let p=_.segment_util.computeOutShape(d.shape,u,o),h=w.sizeFromShape([d.shape[u]]),f=be({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});c.push(f);let m=Ch(s.dtype),g=(x,k,C,N,$)=>{let R=x.shape[0],O=x.shape[1],D=_.segment_util.segOpComputeOptimalWindowSize(O,$),P={windowSize:D,inSize:O,batchSize:R,numSegments:$},T=new dre(P,k),L=n.compileAndRun(T,[x,C],N);if(c.push(L),L.shape[1]===$)return L;let G=n_({backend:n,attrs:{start:0,stop:$,step:1,dtype:"float32"}}),j=i_({inputs:{x:G},backend:n,attrs:{reps:[O/D]}});return c.push(G),c.push(j),g(L,k,j,N,$)},b=g(f,"unsortedSegmentSum",a,m,o),y=be({inputs:{x:b},backend:n,attrs:{shape:p}}),v=y;if(l!=null){c.push(y);let x=_.getUndoAxesPermutation(l);v=Cn({inputs:{x:v},backend:n,attrs:{perm:x}})}return c.forEach(x=>n.disposeIntermediateTensorInfo(x)),v}var hre={kernelName:Fl,backendName:"webgl",kernelFunc:pre},fre=[VQ,HQ,_9,A9,F9,O9,L9,W9,U9,H9,X9,Z9,eY,rY,lY,oY,hY,bY,mY,wY,IY,CY,EY,OY,LY,GY,jY,YY,QY,u9,sZ,fZ,gZ,cZ,xZ,kZ,yZ,CZ,_Z,DZ,FZ,PZ,LZ,GZ,jZ,zZ,XZ,JZ,eJ,sJ,cJ,pJ,mJ,gJ,bJ,vJ,wJ,IJ,CJ,NJ,DJ,RJ,MJ,BJ,VJ,HJ,XJ,QJ,c9,tQ,nZ,sQ,iQ,lQ,d9,fQ,yQ,xQ,NQ,SQ,DQ,RQ,LQ,qQ,tee,QQ,aee,iee,uee,ZQ,dee,hee,bee,wee,Cee,Fee,g9,Pee,Lee,Wee,Gee,zY,qee,Xee,Zee,ete,ste,h9,ote,ite,WY,Eee,lte,yte,fte,y9,kte,Cte,Ete,$te,Ote,Lte,Wte,Gte,jte,Xte,Jte,ene,rne,one,une,RY,Dee,pne,fne,gne,yne,xne,kne,Sne,Tne,_ne,Dne,Fne,Pne,Lne,zne,Vne,Gne,Aee,C9,qne,Yne,Qne,rre,ore,T9,cre,lre,hre,Kee];for(let e of fre)Pl(e);var Bn;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Bn||(Bn={}));var Ud;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(Ud||(Ud={}));var u_;function mre(e){u_=e.wasm.cwrap(Po,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function gre(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t;if(s.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=r,p=n.dataIdMap.get(s.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let $=n.dataIdMap.get(o.dataId);if($.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${$.shape.length}.`);f=$.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=Ud[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);let b=c?s.shape[2]:s.shape[1],y=u?a.shape[1]:a.shape[2],v=s.shape[0],x=n.makeOutput([v,b,y],s.dtype),k=n.dataIdMap.get(x.dataId).id,C=new Uint8Array(new Int32Array(s.shape).buffer),N=new Uint8Array(new Int32Array(a.shape).buffer);return u_(p,C,s.shape.length,h,N,a.shape.length,c,u,g,f,m,d||0,k),x}var bre={kernelName:Po,backendName:"wasm",setupFunc:mre,kernelFunc:gre};function un(e){let t;function n(s){t=s.wasm.cwrap(e,null,["number","number"])}function r(s){let{backend:a,inputs:{x:o}}=s,i=a.dataIdMap.get(o.dataId).id,c=a.makeOutput(o.shape,o.dtype),u=a.dataIdMap.get(c.dataId).id;return w.sizeFromShape(c.shape)===0||t(i,u),c}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:r}}var yre=un(Xi);function Tn(e,t,n){let r;function s(o){r=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:c}=o,{a:u,b:l}=c,d=i.dataIdMap.get(u.dataId).id,p=i.dataIdMap.get(l.dataId).id,h=n!=null?n:u.dtype,f=_.assertAndGetBroadcastShape(u.shape,l.shape),m=i.makeOutput(f,h);if(w.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(u.shape).buffer),b=new Uint8Array(new Int32Array(l.shape).buffer),y=i.dataIdMap.get(m.dataId).id,v=()=>r(d,g,u.shape.length,p,b,l.shape.length,Bn[u.dtype],y);if(t&&u.dtype==="float32")return v(),m;let x=_.getBroadcastDims(u.shape,f),k=_.getBroadcastDims(l.shape,f),C=x.every(($,R)=>$===R),N=k.every(($,R)=>$===R);if(C&&N)return v(),m;throw new Error(`Broadcasting along outer dims is not yet supported for ${u.dtype} ${e}.`)}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:a}}var vre=!0,xre=Tn(Js,vre),l_;function wre(e){l_=e.wasm.cwrap(La,null,["array","number","number","number"])}function kre(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(r.shape)===0)return r;let s=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(s).buffer),o=n.dataIdMap.get(r.dataId).id;return l_(a,s.length,Bn[r.dtype],o),r}var Ire={kernelName:La,backendName:"wasm",setupFunc:wre,kernelFunc:kre};function Cm(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(s),r}var Sre={kernelName:ro,backendName:"wasm",kernelFunc:Cm},d_;function Cre(e){d_=e.wasm.cwrap(Ro,null,["number","array","number","number","number","array","number"])}function Mu(e){let{inputs:t,backend:n,attrs:r}=e,[s,a]=Nre(t.x.shape,r.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=Tre(t.x.shape,r.perm),c={dataId:t.x.dataId,shape:s,dtype:t.x.dtype};if(o){let f=Cm({inputs:t,backend:n});return f.shape=i,f}let u=n.makeOutput(i,c.dtype),l=n.dataIdMap.get(c.dataId).id,d=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(c.shape).buffer);return d_(l,h,c.shape.length,Bn[c.dtype],d,p,a.length),u}function Tre(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}function Nre(e,t){let n=[],r=[];for(let s=0;s<e.length;++s)e[s]!==1&&n.push(e[s]),e[t[s]]!==1&&r.push(t[s]);for(let s=0;s<r.length;++s){let a=-1;for(let o=0;o<r.length;++o)r[o]>=s&&(a===-1||r[a]>r[o])&&(a=o);r[a]=s}return[n,r]}var _re={kernelName:Ro,backendName:"wasm",kernelFunc:Mu,setupFunc:Cre};function Ca(e,t,n){let r=e.shape,s=e.shape.length,a=w.parseAxisParam(t,r),o=a,i=_.getAxesPermutation(o,s),c=null,u=!1;if(i!=null){let l=new Array(s);for(let h=0;h<l.length;h++)l[h]=r[i[h]];o=_.getInnerMostAxes(o.length,s),c=Mu({inputs:{x:e},attrs:{perm:i},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(c.dataId).id!==d&&(u=!0)}return{transposed:c,originalAxes:a,axes:o,inputWasTransposed:u}}var p_;function Ere(e){p_=e.wasm.cwrap(Ji,null,["number, number, number"])}function Are(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,c=t.dataIdMap.get(o.dataId).id,u=o,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t);if(h){let v=t.dataIdMap.get(l.dataId).id;u=l,c=v}let f=u.shape.length;_.assertAxesAreInnerMostDims("all",d,f);let[m,g]=_.computeOutAndReduceShapes(u.shape,d),b=w.sizeFromShape(g),y=t.makeOutput(m,o.dtype);if(w.sizeFromShape(u.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;p_(c,b,v)}if(h&&t.disposeData(l.dataId),a){let v=_.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var Dre={kernelName:Ji,backendName:"wasm",setupFunc:Ere,kernelFunc:Are},h_;function $re(e){h_=e.wasm.cwrap(Qi,null,["number, number, number"])}function Fre(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,c=t.dataIdMap.get(o.dataId).id,u=o,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t);if(h){let v=t.dataIdMap.get(l.dataId).id;u=l,c=v}let f=u.shape.length;_.assertAxesAreInnerMostDims("any",d,f);let[m,g]=_.computeOutAndReduceShapes(u.shape,d),b=w.sizeFromShape(g),y=t.makeOutput(m,o.dtype);if(w.sizeFromShape(u.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;h_(c,b,v)}if(h&&t.disposeData(l.dataId),a){let v=_.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var Rre={kernelName:Qi,backendName:"wasm",setupFunc:$re,kernelFunc:Fre},f_;function Pre(e){f_=e.wasm.cwrap(Ba,null,["number","number","number","number","number"])}function Ore(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s}=r,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,c=a,{transposed:u,axes:l,inputWasTransposed:d}=Ca(a,s,t);if(d){let b=t.dataIdMap.get(u.dataId).id;b!==o&&(c=u,i=b)}let p=c.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=w.sizeFromShape(h.shape),g=c.shape[l[0]];return f_(i,Bn[c.dtype],m,g,f),d&&t.disposeData(u.dataId),h}var Mre={kernelName:Ba,backendName:"wasm",kernelFunc:Ore,setupFunc:Pre},m_;function Lre(e){m_=e.wasm.cwrap(za,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Bre(e){let{inputs:t,attrs:n,backend:r}=e,s=t.x,a=r.dataIdMap.get(s.dataId).id,{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=n,l=_.computePool2DInfo(s.shape,o,i,1,c,u),d=l.filterHeight,p=l.filterWidth,h=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,b=l.strideHeight,y=l.strideWidth,v=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);let x=r.makeOutput(l.outShape,"float32"),k=r.dataIdMap.get(x.dataId).id;return m_(a,s.shape[0],s.shape[1],s.shape[2],d,p,h,f,m,g,b,y,v,k),x}var zre={kernelName:za,backendName:"wasm",setupFunc:Lre,kernelFunc:Bre};function zn(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:s}=n,a=w.sizeFromShape(r.shape),o=w.inferFromImplicitShape(s,a);return w.assert(a===w.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}}var Wre={kernelName:Rc,backendName:"wasm",kernelFunc:zn},g_;function Vre(e){g_=e.wasm.cwrap(Wa,null,["number","array","number","number","array","number","number","number","number"])}function Ure(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;if(s.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let c=s.shape.length,u=a.shape.length,l=o?s.shape[c-2]:s.shape[c-1],d=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[c-1]:s.shape[c-2],h=i?a.shape[u-2]:a.shape[u-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),b=w.sizeFromShape(m),y=g===b||g===1||b===1;w.assert(c>=2&&u>=2&&y,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`);let x=(g>b?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,h]);w.assert(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let k=o?[g,l,p]:[g,p,l],C=i?[b,h,d]:[b,d,h],N=zn({inputs:{x:s},backend:n,attrs:{shape:k}}),$=zn({inputs:{x:a},backend:n,attrs:{shape:C}}),R=n.dataIdMap.get(N.dataId).id,O=n.dataIdMap.get($.dataId).id,D=o?N.shape[2]:N.shape[1],P=i?$.shape[1]:$.shape[2],T=Math.max(g,b),L=n.makeOutput([T,D,P],N.dtype),G=n.dataIdMap.get(L.dataId).id,j=new Uint8Array(new Int32Array(N.shape).buffer),q=new Uint8Array(new Int32Array($.shape).buffer);return g_(R,j,N.shape.length,O,q,$.shape.length,o,i,G),n.disposeData(N.dataId),n.disposeData($.dataId),L.shape=x,L}var Gre={kernelName:Wa,backendName:"wasm",setupFunc:Vre,kernelFunc:Ure};function Gd(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:s}=e,[a,o]=vn.parseSliceParams(t,n,r),i=vn.isSliceContinous(t.shape,a,o),c=s.readSync(t.dataId),u=s.makeOutput(o,t.dtype),l=w.computeStrides(t.shape),d=s.dataIdMap.get(u.dataId);if(i){let f=vn.computeFlatOffset(a,l);return t.dtype==="string"?d.stringBytes=c.slice(f,f+w.sizeFromShape(o)):s.typedArrayFromHeap(u).set(c.subarray(f,f+w.sizeFromShape(o))),u}if(t.dtype==="string"){let f=nm(c,a,o,t.shape,t.dtype);return d.stringBytes=f,u}let p=s.typedArrayFromHeap(u),h=t.shape.length;if(h===2)Hre(c,l[0],p,a,o);else if(h===3)jre(c,l[0],l[1],p,a,o);else if(h===4)qre(c,l[0],l[1],l[2],p,a,o);else{let f=nm(c,a,o,t.shape,t.dtype);p.set(f)}return u}function Hre(e,t,n,r,s){let a=0,o=r[0],i=r[1],c=o+s[0];for(let u=o;u<c;u++){let l=u*t+i;n.set(e.subarray(l,l+s[1]),a),a+=s[1]}}function jre(e,t,n,r,s,a){let o=0,i=s[0],c=s[1],u=s[2],l=i+a[0],d=c+a[1];for(let p=i;p<l;p++)for(let h=c;h<d;h++){let f=p*t+h*n+u;r.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function qre(e,t,n,r,s,a,o){let i=0,c=a[0],u=a[1],l=a[2],d=c+o[0],p=u+o[1],h=l+o[2],f=a[3];for(let m=c;m<d;m++)for(let g=u;g<p;g++)for(let b=l;b<h;b++){let y=m*t+g*n+b*r+f;s.set(e.subarray(y,y+o[3]),i),i+=o[3]}}var Kre={kernelName:Lc,backendName:"wasm",kernelFunc:Gd};function Xre(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r,i=a.reduce((b,y)=>b*y),c=_.getReshaped(s.shape,a,i),u=_.getPermuted(c.length,a.length),l=_.getReshapedPermuted(s.shape,a,i),d=_.getSliceBeginCoords(o,a.length),p=_.getSliceSize(l,o,a.length),h=zn({inputs:{x:s},backend:n,attrs:{shape:c}}),f=Mu({inputs:{x:h},backend:n,attrs:{perm:u}}),m=zn({inputs:{x:f},backend:n,attrs:{shape:l}}),g=Gd({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var Yre={kernelName:ac,backendName:"wasm",kernelFunc:Xre};function Tm(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,s=r.makeOutput(t.shape,n),a=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(s).set(a),s}var Zre={kernelName:Va,backendName:"wasm",kernelFunc:Tm},Jre=un(Ua),b_;function Qre(e){b_=e.wasm.cwrap(Qs,null,["number","number","number","number"])}function ese(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r,i=n.dataIdMap.get(s.dataId).id,c=n.makeOutput(s.shape,s.dtype),u=n.dataIdMap.get(c.dataId).id;return b_(i,a,o,u),c}var tse={kernelName:Qs,backendName:"wasm",setupFunc:Qre,kernelFunc:ese};function y_(e){let{inputs:t,backend:n}=e,r=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],s=_.computeOutShape(t.map(h=>h.shape),r),a=t.filter(h=>w.sizeFromShape(h.shape)>0);if(a.length===1)return Cm({inputs:{x:a[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(w.sizeFromShape(s)===0)return o;let i=a.map(h=>h.shape);if(_.assertParamsConsistent(i,r),a[0].dtype==="string"){let h=a.map(v=>{let x=w.sizeFromShape(v.shape.slice(r));return zn({inputs:{x:v},backend:n,attrs:{shape:[-1,x]}})}),f=h.map(v=>({vals:n.readSync(v.dataId),shape:v.shape}));s=_.computeOutShape(h.map(v=>v.shape),1);let m=h[0].shape[0]===1,g=fw(f,s,t[0].dtype,m),b=_.computeOutShape(a.map(v=>v.shape),r);o.shape=b;let y=n.dataIdMap.get(o.dataId);return y.stringBytes=_.fromStringArrayToUint8(g),h.forEach(v=>n.disposeData(v.dataId)),o}let c=w.sizeFromShape(a[0].shape.slice(0,r)),u=0,l=a.map(h=>{let f=w.sizeFromShape(h.shape.slice(r));return u+=f,f}),d=a.map(h=>n.typedArrayFromHeap(h)),p=n.typedArrayFromHeap(o);for(let h=0;h<c;h++){let f=h*u;for(let m=0;m<d.length;m++){let g=l[m],b=h*g,y=d[m].subarray(b,b+g);p.set(y,f),f+=g}}return o}var nse={kernelName:oc,backendName:"wasm",kernelFunc:y_},v_;function rse(e){v_=e.wasm.cwrap(Ga,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function sse(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a}=t,o=r.dataIdMap.get(s.dataId).id,i=r.dataIdMap.get(a.dataId).id,{strides:c,dilations:u,pad:l,dimRoundingMode:d,dataFormat:p}=n,h=_.convertConv2DDataFormat(p),f=_.computeConv2DInfo(s.shape,a.shape,c,u,l,d,!1,h),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,y=f.padInfo.right,v=f.padInfo.bottom,x=f.padInfo.left,k=f.dilationHeight,C=f.dilationWidth,N=f.strideHeight,$=f.strideWidth,R=f.inChannels,O=f.outChannels,D=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let P=r.makeOutput(f.outShape,"float32"),T=r.dataIdMap.get(P.dataId).id;return v_(o,s.shape[0],s.shape[1],s.shape[2],i,m,g,b,y,v,x,D,k,C,N,$,R,O,T),P}var ase={kernelName:Ga,backendName:"wasm",setupFunc:rse,kernelFunc:sse},x_;function ose(e){x_=e.wasm.cwrap(Ha,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ise(e){let{backend:t,inputs:n,attrs:r}=e,{dy:s,filter:a}=n,{strides:o,pad:i,dataFormat:c,dimRoundingMode:u,inputShape:l}=r,d=1,p=_.convertConv2DDataFormat(c),h=_.computeConv2DInfo(l,a.shape,o,d,i,u,!1,p),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:b,inHeight:y,inWidth:v,outChannels:x,outHeight:k,outWidth:C,strideHeight:N,strideWidth:$}=h,R=m-1-h.padInfo.top,O=g-1-h.padInfo.left,D=h.dataFormat==="channelsLast",P=w.computeStrides(h.inShape),T=w.computeStrides(s.shape),[L,G,j]=w.computeStrides(a.shape),q=P[0],K=D?P[1]:P[2],te=D?P[2]:1,ne=D?1:P[1],re=T[0],se=D?T[1]:T[2],J=D?T[2]:1,ie=D?1:T[1],ue=t.makeOutput(h.inShape,"float32"),le=t.dataIdMap.get(ue.dataId).id,me=t.dataIdMap.get(s.dataId).id,Ce=t.dataIdMap.get(a.dataId).id;return x_(me,Ce,f,m,g,y,v,b,k,C,x,N,$,R,O,L,G,j,q,K,te,ne,re,se,J,ie,le),ue}var cse={kernelName:Ha,backendName:"wasm",setupFunc:ose,kernelFunc:ise},use=un(ja),lse=un(qa),jw;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(jw||(jw={}));var w_;function dse(e){w_=e.wasm.cwrap(ic,null,["number","number","number","number","array","number","number","number","number","number"])}function pse(e){let{backend:t,inputs:n,attrs:r}=e,{method:s,extrapolationValue:a,cropSize:o}=r,{image:i,boxes:c,boxInd:u}=n,l=c.shape[0],[d,p]=o,h=[l,d,p,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=Tm({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,b=t.dataIdMap.get(c.dataId).id,y=t.dataIdMap.get(u.dataId).id,v=t.makeOutput(h,"float32"),x=t.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return w_(g,b,y,l,k,d,p,jw[s],a,x),m!=null&&t.disposeData(m.dataId),v}var hse={kernelName:ic,backendName:"wasm",setupFunc:dse,kernelFunc:pse},k_;function fse(e){k_=e.wasm.cwrap(Ka,null,["number","number","number","number","number","number"])}function mse(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r,c=s.shape.length;w.assert(s.dtype==="float32"||s.dtype==="int32",()=>`cumsum does not support ${s.dtype} tensors in the WASM backend`);let u=_.getAxesPermutation([a],c),l=s;u!==null&&(l=Mu({inputs:{x:s},attrs:{perm:u},backend:n}));let d=_.getInnerMostAxes(1,c)[0];_.assertAxesAreInnerMostDims("cumsum",[d],c);let p=n.makeOutput(l.shape,l.dtype),h=l.shape[d],f=n.dataIdMap.get(l.dataId).id,m=n.dataIdMap.get(p.dataId).id;k_(f,o?1:0,i?1:0,h,m,Bn[s.dtype]);let g=p;if(u!==null){let b=_.getUndoAxesPermutation(u);g=Mu({inputs:{x:p},attrs:{perm:b},backend:n}),n.disposeData(l.dataId),n.disposeData(p.dataId)}return g}var gse={kernelName:Ka,backendName:"wasm",setupFunc:fse,kernelFunc:mse},I_;function bse(e){I_=e.wasm.cwrap(cc,null,["number","number","number","array","number","array","array","number","number"])}function yse(e){let{backend:t,inputs:n,attrs:r}=e,{x:s}=n,{blockSize:a,dataFormat:o}=r;w.assert(a>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`);let i=s.shape[0],c=o==="NHWC"?s.shape[1]:s.shape[2],u=o==="NHWC"?s.shape[2]:s.shape[3],l=o==="NHWC"?s.shape[3]:s.shape[1],d=c*a,p=u*a,h=l/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=t.makeOutput(f,"float32"),b=t.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(s.shape)).buffer),v=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),k=t.dataIdMap.get(m.dataId).id;return I_(b,a,o==="NHWC"?1:0,y,s.shape.length-1,v,x,f.length,k),m}var vse={kernelName:cc,backendName:"wasm",setupFunc:bse,kernelFunc:yse},S_;function xse(e){S_=e.wasm.cwrap(Xa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wse(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a}=t,o=r.dataIdMap.get(s.dataId).id,i=r.dataIdMap.get(a.dataId).id,{strides:c,dilations:u,pad:l,dimRoundingMode:d}=n,p=u==null?[1,1]:u,h=_.computeConv2DInfo(s.shape,a.shape,c,p,l,d,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,b=h.padInfo.right,y=h.padInfo.bottom,v=h.padInfo.left,x=h.dilationHeight,k=h.dilationWidth,C=h.strideHeight,N=h.strideWidth,$=h.inChannels,R=h.outChannels,O=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let D=r.makeOutput(h.outShape,"float32"),P=r.dataIdMap.get(D.dataId).id;return S_(o,s.shape[0],s.shape[1],s.shape[2],i,f,m,g,b,y,v,O,x,k,C,N,$,R,P),D}var kse={kernelName:Xa,backendName:"wasm",setupFunc:xse,kernelFunc:wse},Ise=un(Za),Sse=!1,Cse=Tn(lc,Sse,"bool"),Tse=un(Ja);function qw(e){let{inputs:t,attrs:n,backend:r}=e,{input:s}=t,{dim:a}=n,o=s.shape.length,i=s.shape.slice(),c=a;return a<0&&(w.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+a+1),i.splice(c,0,1),zn({inputs:{x:s},backend:r,attrs:{shape:i}})}var Nse={kernelName:dc,backendName:"wasm",kernelFunc:qw};function C_(e){let{attrs:{shape:t,value:n,dtype:r},backend:s}=e,a=s.makeOutput(t,r);return s.typedArrayFromHeap(a).fill(n),a}var _se={kernelName:Cl,backendName:"wasm",kernelFunc:C_},T_;function Ese(e){T_=e.wasm.cwrap(hc,null,["number","number","number","number","number","number"])}function Ase(e){let{inputs:t,backend:n}=e,{image:r}=t,s=n.makeOutput(r.shape,r.dtype),a=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,[i,c,u,l]=r.shape;return T_(a,i,c,u,l,o),s}var Dse={kernelName:hc,backendName:"wasm",kernelFunc:Ase,setupFunc:Ese},$se=un(Qa),Fse=!1,Rse=Tn(eo,Fse),N_;function Pse(e){N_=e.wasm.cwrap(to,null,["number","number","number","number","number","number","number"])}function Ose(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:s}=r,{x:a,mean:o,variance:i,offset:c,scale:u}=n,l=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=c!=null?t.dataIdMap.get(c.dataId).id:0,f=u!=null?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return N_(l,d,p,h,f,s,g),m}var Mse={kernelName:to,backendName:"wasm",setupFunc:Pse,kernelFunc:Ose},__;function Lse(e){__=e.wasm.cwrap(Oo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Bse(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:c,pad:u,dilations:l,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=_.computeConv2DInfo(s.shape,a.shape,c,l,u,p),g=Ud[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let b=r.dataIdMap.get(s.dataId).id,y=r.dataIdMap.get(a.dataId).id,v=m.outChannels,x=0;if(o!=null){let J=r.dataIdMap.get(o.dataId);if(J.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==v)throw new Error(`FusedConv2D bias shape (${J.shape}) does not match the number of output channels (${v})`);x=J.id}let k=m.filterHeight,C=m.filterWidth,N=m.padInfo.top,$=m.padInfo.right,R=m.padInfo.bottom,O=m.padInfo.left,D=m.dilationHeight,P=m.dilationWidth,T=m.strideHeight,L=m.strideWidth,G=m.inChannels,j=m.padInfo.type==="SAME"?1:0,q=m.batchSize,K=m.inHeight,te=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let ne=r.makeOutput(m.outShape,"float32"),re=r.dataIdMap.get(ne.dataId).id,se=i==null?0:r.dataIdMap.get(i.dataId).id;return __(b,q,K,te,y,k,C,x,N,$,R,O,j,D,P,T,L,G,v,g,se,f||0,re),ne}var zse={kernelName:Oo,backendName:"wasm",setupFunc:Lse,kernelFunc:Bse},E_;function Wse(e){E_=e.wasm.cwrap(Mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vse(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:c,pad:u,dilations:l,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=_.computeConv2DInfo(s.shape,a.shape,c,l,u,p,!0),g=Ud[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=r.dataIdMap.get(s.dataId).id,y=r.dataIdMap.get(a.dataId).id,v=m.outChannels,x=0;if(o!=null){let J=r.dataIdMap.get(o.dataId);if(J.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==v)throw new Error(`FusedDepthwiseConv2D bias shape (${J.shape}) does not match the number of output channels (${v})`);x=J.id}let k=m.filterHeight,C=m.filterWidth,N=m.padInfo.top,$=m.padInfo.right,R=m.padInfo.bottom,O=m.padInfo.left,D=m.dilationHeight,P=m.dilationWidth,T=m.strideHeight,L=m.strideWidth,G=m.inChannels,j=m.padInfo.type==="SAME"?1:0,q=m.batchSize,K=m.inHeight,te=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let ne=r.makeOutput(m.outShape,"float32"),re=r.dataIdMap.get(ne.dataId).id,se=i==null?0:r.dataIdMap.get(i.dataId).id;return E_(b,q,K,te,y,k,C,x,N,$,R,O,j,D,P,T,L,G,v,g,se,f||0,re),ne}var Use={kernelName:Mo,backendName:"wasm",setupFunc:Wse,kernelFunc:Vse},A_;function Gse(e){A_=e.wasm.cwrap(mc,null,["number","number","number","number","number","number","array","number"])}function Hse(e){let{backend:t,inputs:n}=e,{params:r,indices:s}=n,[a,o,i,c]=iy.prepareAndValidate(r,s),u=t.makeOutput(a,r.dtype);if(o===0)return u;let l=s.shape,d=l[l.length-1],h=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=new Uint8Array(new Int32Array(c).buffer),b=t.dataIdMap.get(u.dataId).id;return A_(h,Bn[r.dtype],m,o,d,i,g,b),u}var jse={kernelName:mc,backendName:"wasm",setupFunc:Gse,kernelFunc:Hse},D_;function qse(e){D_=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Kse(e){let{backend:t,inputs:n,attrs:r}=e,{x:s,indices:a}=n,{axis:o,batchDims:i}=r,c=w.parseAxisParam(o,s.shape)[0],u=_.segment_util.collectGatherOpShapeInfo(s,a,c,i),l=zn({inputs:{x:s},attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]},backend:t}),d=w.sizeFromShape(a.shape),p=zn({inputs:{x:a},attrs:{shape:[u.batchSize,d/u.batchSize]},backend:t}),h=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize],f=t.makeOutput(h,s.dtype);if(w.sizeFromShape(s.shape)===0)return f;let m=l.shape.length-1,b=t.dataIdMap.get(l.dataId).id,v=t.dataIdMap.get(p.dataId).id,x=t.dataIdMap.get(f.dataId).id,k=new Uint8Array(new Int32Array(w.computeStrides(l.shape)).buffer),C=new Uint8Array(new Int32Array(w.computeStrides(h)).buffer);return D_(b,Bn[s.dtype],k,m,v,u.batchSize,C,x),t.disposeData(l.dataId),t.disposeData(p.dataId),f.shape=u.outputShape,f}var Xse={kernelName:fc,backendName:"wasm",setupFunc:qse,kernelFunc:Kse},Yse=!1,Zse=Tn(gc,Yse,"bool"),Jse=!1,Qse=Tn(no,Jse,"bool"),$_;function eae(e){$_=e.wasm.cwrap(so,null,["number","number","number"])}function tae(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,s=r.dataIdMap.get(t.dataId).id,a=r.makeOutput(t.shape,t.dtype);if(w.sizeFromShape(t.shape)!==0){let o=r.dataIdMap.get(a.dataId).id;$_(s,n,o)}return a}var nae={kernelName:so,backendName:"wasm",setupFunc:eae,kernelFunc:tae},rae=!1,sae=Tn(xc,rae,"bool"),aae=!1,oae=Tn(wc,aae,"bool"),iae=un(ao),cae=!1,uae=Tn(Ic,cae,"bool"),F_;function lae(e){F_=e.wasm.cwrap(oo,null,["number, number, number"])}function dae(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:s,keepDims:a}=r,{x:o}=n,c=t.dataIdMap.get(o.dataId).id,u=o,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t);if(h){let v=t.dataIdMap.get(l.dataId).id;u=l,c=v}let f=u.shape.length;_.assertAxesAreInnerMostDims("max",d,f);let[m,g]=_.computeOutAndReduceShapes(u.shape,d),b=w.sizeFromShape(g),y=t.makeOutput(m,o.dtype);if(w.sizeFromShape(u.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;F_(c,b,v)}if(h&&t.disposeData(l.dataId),a){let v=_.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var pae={kernelName:oo,backendName:"wasm",setupFunc:lae,kernelFunc:dae},hae=!1,fae=Tn(io,hae),R_;function mae(e){R_=e.wasm.cwrap(co,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function gae(e){let{inputs:t,attrs:n,backend:r}=e,s=t.x,a=r.dataIdMap.get(s.dataId).id,{filterSize:o,strides:i,pad:c,dimRoundingMode:u}=n,l=_.computePool2DInfo(s.shape,o,i,1,c,u),d=l.filterHeight,p=l.filterWidth,h=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,b=l.dilationHeight,y=l.dilationWidth,v=l.strideHeight,x=l.strideWidth,k=l.inChannels,C=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);let N=r.makeOutput(l.outShape,"float32"),$=r.dataIdMap.get(N.dataId).id;return R_(a,s.shape[0],s.shape[1],s.shape[2],d,p,h,f,m,g,b,y,v,x,k,C,$),N}var bae={kernelName:co,backendName:"wasm",setupFunc:mae,kernelFunc:gae},P_;function yae(e){P_=e.wasm.cwrap(uo,null,["number, number, number"])}function vae(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,c=i,u=o,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t),f=d;if(h){let x=t.dataIdMap.get(l.dataId).id;x!==i&&(u=l,c=x,f=_.getInnerMostAxes(f.length,u.shape.length))}_.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=_.computeOutAndReduceShapes(u.shape,f),b=w.sizeFromShape(g),y=u;u.dtype!=="float32"&&(y=Tm({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),c=t.dataIdMap.get(y.dataId).id);let v=t.makeOutput(m,"float32");if(w.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(v.dataId).id;P_(c,b,x)}if(h&&t.disposeData(l.dataId),a){let x=_.expandShapeToKeepDim(v.shape,p);v.shape=x}return u.dtype!=="float32"&&t.disposeData(y.dataId),v}var xae={kernelName:uo,backendName:"wasm",setupFunc:yae,kernelFunc:vae},O_;function wae(e){O_=e.wasm.cwrap(lo,null,["number, number, number"])}function kae(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,c=i,u=o,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t);if(h){let v=t.dataIdMap.get(l.dataId).id;v!==i&&(u=l,c=v)}let f=u.shape.length;_.assertAxesAreInnerMostDims("min",d,f);let[m,g]=_.computeOutAndReduceShapes(u.shape,d),b=w.sizeFromShape(g),y=t.makeOutput(m,u.dtype);if(w.sizeFromShape(u.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;O_(c,b,v)}if(h&&t.disposeData(l.dataId),a){let v=_.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var Iae={kernelName:lo,backendName:"wasm",setupFunc:wae,kernelFunc:kae},Sae=!1,Cae=Tn(po,Sae),Kw;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(Kw||(Kw={}));var M_;function Tae(e){M_=e.wasm.cwrap(ho,null,["number","array","number","number","array","array","number","number"])}function Nae(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:s}}=e,a=r.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),l=r.map(f=>f[0]),d=r.map(f=>f[1]),p=new Uint8Array(new Int32Array(l).buffer),h=new Uint8Array(new Int32Array(d).buffer);return M_(o,u,t.shape.length,Bn[t.dtype],p,h,Kw[s],c),i}var _ae={kernelName:ho,backendName:"wasm",kernelFunc:Nae,setupFunc:Tae},Eae=!0,Aae=Tn(fo,Eae),Dae=un(Cc);function Xw(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],s=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:s,pSelectedScores:a,pValidOutputs:o}}var L_;function $ae(e){L_=e.wasm.cwrap(Nc,"number",["number","number","number","number","number"])}function Fae(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:s,maxOutputSize:a,scoreThreshold:o}=r,{boxes:i,scores:c}=n,u=t.dataIdMap.get(i.dataId).id,l=t.dataIdMap.get(c.dataId).id,d=L_(u,l,a,s,o),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=Xw(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}var Rae={kernelName:Nc,backendName:"wasm",setupFunc:$ae,kernelFunc:Fae},B_;function Pae(e){B_=e.wasm.cwrap(_c,"number",["number","number","number","number","number","bool"])}function Oae(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:s,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=r,{boxes:c,scores:u}=n,l=t.dataIdMap.get(c.dataId).id,d=t.dataIdMap.get(u.dataId).id,p=B_(l,d,a,s,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Xw(t,p);t.wasm._free(m);let b=t.makeOutput([f],"int32",h),y=t.makeOutput([],"int32",g);return[b,y]}var Mae={kernelName:_c,backendName:"wasm",setupFunc:Pae,kernelFunc:Oae},z_;function Lae(e){z_=e.wasm.cwrap(Ec,"number",["number","number","number","number","number","number"])}function Bae(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:s,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=r,{boxes:c,scores:u}=n,l=t.dataIdMap.get(c.dataId).id,d=t.dataIdMap.get(u.dataId).id,p=z_(l,d,a,s,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Xw(t,p);t.wasm._free(g);let b=t.makeOutput([f],"int32",h),y=t.makeOutput([f],"float32",m);return[b,y]}var zae={kernelName:Ec,backendName:"wasm",setupFunc:Lae,kernelFunc:Bae},Wae=!1,Vae=Tn(Tc,Wae,"bool"),W_;function Uae(e){W_=e.wasm.cwrap(mo,null,["number","number","number","number","number"])}function Gae(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r,c=n.makeOutput([...s.shape,a],"int32"),u=n.dataIdMap.get(c.dataId).id,d=n.dataIdMap.get(s.dataId).id;return W_(d,a,o,i,u),c}var Hae={kernelName:mo,backendName:"wasm",setupFunc:Uae,kernelFunc:Gae};function jae(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}var qae={kernelName:Ac,backendName:"wasm",kernelFunc:jae};function Kae(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(t.length===1)return qw({inputs:{input:t[0]},backend:n,attrs:{dim:s}});let a=t[0].shape,o=t[0].dtype;t.forEach(l=>{w.assertShapesMatch(a,l.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],c=t.map(l=>{let d=qw({inputs:{input:l},backend:n,attrs:{dim:s}});return i.push(d),d}),u=y_({inputs:c,backend:n,attrs:{axis:s}});return i.forEach(l=>n.disposeData(l.dataId)),u}var Xae={kernelName:Dc,backendName:"wasm",kernelFunc:Kae},V_;function Yae(e){V_=e.wasm.cwrap(go,null,["number","array","number","number","array","array","number","number"])}function Zae(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:s}}=e,a=r.map((m,g)=>m[0]+t.shape[g]+m[1]);if(w.sizeFromShape(t.shape)===0)return C_({backend:n,attrs:{shape:a,value:s,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),u=n.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map(m=>m[0]),p=r.map(m=>m[1]),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return V_(o,l,t.shape.length,Bn[t.dtype],h,f,s,u),i}var U_={kernelName:go,backendName:"wasm",kernelFunc:Zae,setupFunc:Yae},Jae=!1,Qae=Tn(bo,Jae),G_;function eoe(e){G_=e.wasm.cwrap(yo,null,["number","number","number"])}function toe(e){let{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,i=n.makeOutput(r.shape,"float32"),c=n.dataIdMap.get(i.dataId).id;return G_(a,o,c),i}var noe={kernelName:yo,backendName:"wasm",setupFunc:eoe,kernelFunc:toe},H_;function roe(e){H_=e.wasm.cwrap($c,null,["number","number","number","number"])}function soe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,c=i,u=o,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t),f=d;if(h){let v=t.dataIdMap.get(l.dataId).id;v!==i&&(u=l,c=v,f=_.getInnerMostAxes(f.length,u.shape.length))}_.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=_.computeOutAndReduceShapes(u.shape,f),b=w.sizeFromShape(g),y=t.makeOutput(m,u.dtype);if(w.sizeFromShape(u.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;H_(c,b,Bn[y.dtype],v)}if(h&&t.disposeData(l.dataId),a){let v=_.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var aoe={kernelName:$c,backendName:"wasm",setupFunc:roe,kernelFunc:soe},ooe=e=>{let{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=bw(r,s,a,o),c=t.makeOutput([i.length],o);return t.typedArrayFromHeap(c).set(i),c},ioe={kernelName:Al,backendName:"wasm",kernelFunc:ooe},coe=!0,uoe=Tn(Ya,coe),loe=un(vo),doe=un(wo),j_;function poe(e){j_=e.wasm.cwrap(xo,null,["number","number","number","number","number","number","number","number","number","number"])}function hoe(e){let{backend:t,inputs:n,attrs:r}=e,{images:s}=n,{alignCorners:a,halfPixelCenters:o,size:i}=r,[c,u]=i,[l,d,p,h]=s.shape,f=[l,c,u,h],m=t.dataIdMap.get(s.dataId),g;m.dtype!=="float32"&&(g=Tm({backend:t,inputs:{x:s},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let b=m.id,y=t.makeOutput(f,"float32");if(w.sizeFromShape(s.shape)===0)return y;let v=t.dataIdMap.get(y.dataId).id;return j_(b,l,d,p,h,c,u,a?1:0,o?1:0,v),g!=null&&t.disposeData(g.dataId),y}var foe={kernelName:xo,backendName:"wasm",setupFunc:poe,kernelFunc:hoe},q_;function moe(e){q_=e.wasm.cwrap(ko,null,["number","array","number","array","number","number"])}function goe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=w.parseAxisParam(a,s.shape);if(s.shape.length===0)return Cm({inputs:{x:s},backend:n});let i=n.makeOutput(s.shape,s.dtype),c=n.dataIdMap.get(s.dataId).id,u=n.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(o).buffer),d=new Uint8Array(new Int32Array(s.shape).buffer);q_(c,l,o.length,d,s.shape.length,u);let p=zn({inputs:{x:i},attrs:{shape:s.shape},backend:n});return n.disposeData(i.dataId),p}var boe={kernelName:ko,backendName:"wasm",kernelFunc:goe,setupFunc:moe},K_;function yoe(e){K_=e.wasm.cwrap(Xc,null,["number","number","number","number","number","number","number","number","array","number","number"])}function voe(e){let{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{radians:a,fillValue:o,center:i}=r,c=n.makeOutput(s.shape,s.dtype),u=n.dataIdMap.get(s.dataId).id,l=n.dataIdMap.get(c.dataId).id,[d,p,h,f]=s.shape,[m,g]=_.getImageCenter(i,p,h),b=o===0,y=255,v=typeof o=="number"?[o,o,o,b?0:y]:[...o,y],x=new Uint8Array(new Int32Array(v).buffer);return K_(u,d,p,h,f,a,m,g,x,v.length,l),c}var xoe={kernelName:Xc,backendName:"wasm",kernelFunc:voe,setupFunc:yoe},woe=un(Io),koe=un(So),X_;function Ioe(e){X_=e.wasm.cwrap(Pc,null,["number","number","number","number","number","number","array","number","number"])}function Soe(e){let{backend:t,inputs:n,attrs:r}=e,{indices:s,updates:a}=n,{shape:o}=r,i=t.makeOutput(o,a.dtype);if(w.sizeFromShape(o)===0)return i;let{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=cy.calculateShapes(a,s,o),f=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(a.dataId).id,b=new Uint8Array(new Int32Array(d).buffer),y=t.dataIdMap.get(i.dataId).id;return X_(f,g,Bn[a.dtype],c,u,l,b,p,y),i}var Coe={kernelName:Pc,backendName:"wasm",setupFunc:Ioe,kernelFunc:Soe},Y_;function Toe(e){Y_=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Noe(e){let{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(s.shape,s.dtype),l=n.dataIdMap.get(u.dataId).id,d=r.shape.length,p=s.shape.length,h=d===0||d>1||p===1?1:w.sizeFromShape(s.shape.slice(1));return Y_(o,i,c,h,l),u}var _oe={kernelName:Oc,backendName:"wasm",kernelFunc:Noe,setupFunc:Toe},Z_;function Eoe(e){Z_=e.wasm.cwrap(To,null,["number","number"])}function Aoe(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(s.dataId).id;return w.sizeFromShape(s.shape)===0||Z_(r,a),s}var Doe={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Eoe,kernelFunc:Aoe},$oe=un(Co),J_;function Foe(e){J_=e.wasm.cwrap(Eo,null,["number","number","number","number"])}function Roe(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,s=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[r],c=w.sizeFromShape(n.shape)/i;return w.sizeFromShape(a.shape)===0||J_(s,o,i,c),a}var Poe={kernelName:Eo,backendName:"wasm",setupFunc:Foe,kernelFunc:Roe};function Ooe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r,i=w.sizeFromShape(a),c=[[0,0]];c.push(...o);for(let C=1+a.length;C<s.shape.length;++C)c.push([0,0]);let u=U_.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),l=_.getReshaped(u.shape,a,i,!1),d=_.getPermuted(l.length,a.length,!1),p=_.getReshapedPermuted(u.shape,a,i,!1),m=zn({inputs:{x:u},backend:n,attrs:{shape:l}}),y=Mu({inputs:{x:m},backend:n,attrs:{perm:d}}),k=zn({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeData(u.dataId),n.disposeData(m.dataId),n.disposeData(y.dataId),k}var Moe={kernelName:Vc,backendName:"wasm",kernelFunc:Ooe};function Loe(e){let{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=n,i=w.parseAxisParam(o,s.shape)[0],c=_.prepareSplitSize(s,a,i),u=new Array(s.shape.length).fill(0),l=s.shape.slice();return c.map(d=>{let p=[...l];p[i]=d;let h=Gd({inputs:{x:s},attrs:{begin:u,size:p},backend:r});return u[i]+=d,h})}var Boe={kernelName:Uc,backendName:"wasm",kernelFunc:Loe},zoe=un(No),Woe=un($l),Voe=!0,Uoe=Tn(Ao,Voe),Q_;function Goe(e){Q_=e.wasm.cwrap(ta,null,["number","number","number"])}function Hoe(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:s}=r,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),c=t.dataIdMap.get(i.dataId).id;return Q_(o,s,c),i}var joe={kernelName:ta,backendName:"wasm",setupFunc:Goe,kernelFunc:Hoe},eE;function qoe(e){eE=e.wasm.cwrap(Gc,null,["number","array","number","array","array","array","array","array","number","number"])}function Koe(e){let{backend:t,inputs:n,attrs:r}=e,{x:s}=n,{begin:a,end:o,strides:i}=r;i==null&&(i=new Array(a.length));let{beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:p}=r,h=_.slice_util.maskToAxes(l);if(h.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(l!==0&&d!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(l!==0&&p!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let f=s.shape.length-a.length,m=_.slice_util.maskToAxes(d),g=s.shape.slice();m.forEach(D=>{a[D]=0,o[D]=1,g.splice(D,0,1)});let b=zn({inputs:{x:s},attrs:{shape:g},backend:t}),{begin:y,end:v,strides:x}=_.slice_util.getNormalizedAxes(b.shape,h,f,a,o,i,c,u,l);a=y,o=v,i=x;let k=_.slice_util.maskToAxes(p);k.forEach(D=>{o[D]=a[D]+1,i[D]=1});let C=_.slice_util.computeOutShape(a,o,i),N=C.filter((D,P)=>k.indexOf(P)===-1);if(i.every(D=>D===1)){let D=Gd({inputs:{x:b},attrs:{begin:a,size:C},backend:t});t.disposeData(b.dataId);let P=zn({inputs:{x:D},attrs:{shape:N},backend:t});return t.disposeData(D.dataId),P}let R=t.makeOutput(N,"float32");if(!N.some(D=>D===0)){let D=t.dataIdMap.get(b.dataId).id,P=new Uint8Array(new Int32Array(w.computeStrides(b.shape)).buffer),T=new Uint8Array(new Int32Array(a).buffer),L=new Uint8Array(new Int32Array(o).buffer),G=new Uint8Array(new Int32Array(i).buffer),j=new Uint8Array(new Int32Array(N).buffer),q=new Uint8Array(new Int32Array(w.computeStrides(N)).buffer),K=t.dataIdMap.get(R.dataId).id;eE(D,P,b.shape.length,T,L,G,j,q,N.length,K)}t.disposeData(b.dataId);let O=zn({inputs:{x:R},attrs:{shape:N},backend:t});return t.disposeData(R.dataId),O}var Xoe={kernelName:Gc,backendName:"wasm",setupFunc:qoe,kernelFunc:Koe},Yoe=!0,Zoe=Tn(Do,Yoe),tE;function Joe(e){tE=e.wasm.cwrap(_o,null,["number, number, number"])}function Qoe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,c=i,u=o,{transposed:l,axes:d,originalAxes:p,inputWasTransposed:h}=Ca(o,s,t),f=d;if(h){let v=t.dataIdMap.get(l.dataId).id;v!==i&&(u=l,c=v,f=_.getInnerMostAxes(f.length,u.shape.length))}_.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=_.computeOutAndReduceShapes(u.shape,f),b=w.sizeFromShape(g),y=t.makeOutput(m,u.dtype);if(w.sizeFromShape(u.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;tE(c,b,v)}if(h&&t.disposeData(l.dataId),a){let v=_.expandShapeToKeepDim(y.shape,p);y.shape=v}return y}var eie={kernelName:_o,backendName:"wasm",setupFunc:Joe,kernelFunc:Qoe},tie=un($o),nie=un(Fo),nE;function rie(e){nE=e.wasm.cwrap(ea,null,["number","array","number","array","number","number"])}function sie(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,a=n.dataIdMap.get(s.dataId).id,{reps:o}=r,i=new Array(s.shape.length);for(let p=0;p<i.length;p++)i[p]=s.shape[p]*o[p];let c=new Uint8Array(new Int32Array(s.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),l=n.makeOutput(i,s.dtype),d=n.dataIdMap.get(l.dataId).id;return nE(a,c,s.shape.length,u,i.length,Bn[l.dtype],d),l}var aie={kernelName:ea,backendName:"wasm",setupFunc:rie,kernelFunc:sie},rE;function oie(e){rE=e.wasm.cwrap(Hc,null,["number","array","number","number","number","bool","number","number"])}var iie=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:s,sorted:a}=n,o=t.dataIdMap.get(r.dataId).id,i=new Uint8Array(new Int32Array(r.shape).buffer),c=r.shape.slice();c[c.length-1]=s;let u=t.makeOutput(c,r.dtype),l=t.dataIdMap.get(u.dataId).id,d=t.makeOutput(c,"int32"),p=t.dataIdMap.get(d.dataId).id;return rE(o,i,r.shape.length,Bn[r.dtype],s,a,l,p),[u,d]},cie={kernelName:Hc,backendName:"wasm",setupFunc:oie,kernelFunc:iie},sE;function uie(e){sE=e.wasm.cwrap(jc,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function lie(e){let{backend:t,inputs:n,attrs:r}=e,{image:s,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:c,outputShape:u}=r,[l,d,p,h]=s.shape,[f,m]=u!=null?u:[d,p],g=[l,f,m,h],b=new Uint8Array(new Int32Array(w.computeStrides(s.shape)).buffer),y=t.makeOutput(g,s.dtype),v=t.dataIdMap.get(y.dataId).id,k=t.dataIdMap.get(s.dataId).id,N=t.dataIdMap.get(a.dataId).id,$=o==="nearest"?1:2,R;switch(i){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return sE(k,N,a.shape[0]>1,l,f,m,h,p,d,b,s.shape.length-1,$,R,c,v),y}var die={kernelName:jc,backendName:"wasm",setupFunc:uie,kernelFunc:lie};function pie(e){let{inputs:t,backend:n,attrs:r}=e,{value:s}=t,{axis:a}=r;a<0&&(a+=s.shape.length);let o=s.shape[a],i=s.shape.length,c=new Array(i-1),u=0;for(let h=0;h<i;h++)h!==a&&(c[u++]=s.shape[h]);let l=new Array(o),d=new Array(i).fill(0),p=s.shape.slice();p[a]=1;for(let h=0;h<l.length;h++)d[a]=h,l[h]=Gd({inputs:{x:s},attrs:{begin:d,size:p},backend:n});return l.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:c}))}var hie={kernelName:qc,backendName:"wasm",kernelFunc:pie};function fie(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}var mie={kernelName:Kc,backendName:"wasm",kernelFunc:fie},gie=[yre,xre,Ire,Dre,Rre,Mre,zre,Gre,Yre,Zre,Jre,tse,nse,ase,cse,use,lse,hse,gse,vse,kse,Ise,Cse,Tse,Nse,_se,Dse,$se,Rse,bre,Mse,zse,Use,jse,Xse,Zse,Qse,Sre,nae,sae,oae,iae,uae,pae,fae,bae,xae,Iae,Cae,_ae,Aae,Dae,Rae,Mae,zae,Vae,Hae,qae,Xae,U_,Qae,noe,aoe,ioe,uoe,loe,doe,Wre,foe,boe,xoe,koe,woe,Coe,_oe,Doe,$oe,Kre,Poe,Moe,Boe,zoe,Woe,Uoe,joe,Xoe,Zoe,eie,tie,nie,aie,cie,die,_re,hie,mie];for(let e of gie)Pl(e);var Yw=Q();Yw.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));Yw.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Yw.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var aE=Ra(pD()),bie='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',yie=Ra(hD()),oE=class extends bl{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new Dp(this,Cs())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,n,r,s){let a=this.dataIdNextNumber++;if(r==="string"){let u=t;this.dataIdMap.set(e,{id:a,stringBytes:u,shape:n,dtype:r,memoryOffset:null,refCount:s});return}let o=w.sizeFromShape(n),i=o*w.bytesPerElement(r),c=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:c,shape:n,dtype:r,refCount:s}),this.wasm.tfjs.registerTensor(a,o,c),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),c)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:r,stringBytes:s}=this.dataIdMap.get(e);if(n==="string")return s;let a=this.wasm.HEAPU8.slice(t,t+w.sizeFromShape(r)*w.bytesPerElement(n));return wie(a.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(n==null)r=this.write(null,e,t);else{let s=this.dataIdNextNumber++;r={id:s},this.dataIdMap.set(r,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,s,a);case"int32":return new Int32Array(r,s,a);case"bool":return new Uint8Array(r,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function vie(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(s=>{WebAssembly.instantiate(s,t).then(a=>{n(a.instance,a.module)})})}),{})}function iE(e,t,n){if(Nm!=null)return Nm;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),jd!=null&&jd[r]!=null?jd[r]:n+r}async function xie(){let[e,t]=await Promise.all([Q().getAsync("WASM_HAS_SIMD_SUPPORT"),Q().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{let s={};s.locateFile=(i,c)=>{if(i.endsWith(".worker.js")){let u=bie,l=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(l)}return i.endsWith(".wasm")?iE(e,t,Hd!=null?Hd:c):c+i},Zw&&(s.instantiateWasm=vie(iE(e,t,Hd!=null?Hd:"")));let a=!1;s.onAbort=()=>{if(a||qd)return;qd=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&Nm==null?(s.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+aE.default.toString()],{type:"text/javascript"}),o=(0,aE.default)(s)):o=(0,yie.default)(s),o.then(i=>{a=!0,qd=!1;let c=null;i.tfjs={init:i.cwrap("init",null,[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",c,["number"]),dispose:i.cwrap("dispose",c,[])},n({wasm:i})})})}function wie(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var kie=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Nm=null,Hd=null,jd={},qd=!1,Zw=!1;function Iie(e,t=!1){if(fy("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),qd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Nm=e,Zw=t}function Sie(e,t=!1){if(qd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Hd=e;else{jd=e;let n=kie.filter(r=>jd[r]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Zw=t}var Cie="3.9.0",Tie=2;Dh("wasm",async()=>{let{wasm:e}=await xie();return new oE(e)},Tie);var Nie="3.9.0",_ie="3.9.0",Eie="3.9.0",Aie="3.9.0",Die="3.9.0",$ie="3.9.0",Fie="3.9.0",Rie="3.9.0",Pie={tfjs:Nie,"tfjs-core":_ie,"tfjs-data":Eie,"tfjs-layers":Aie,"tfjs-converter":Die,"tfjs-backend-cpu":$ie,"tfjs-backend-webgl":Fie,"tfjs-backend-wasm":Rie};var S0={};Ep(S0,{AnchorPosition:()=>ms,DrawBox:()=>Dm,DrawBoxOptions:()=>h0,DrawFaceLandmarks:()=>I0,DrawFaceLandmarksOptions:()=>k0,DrawTextField:()=>Na,DrawTextFieldOptions:()=>Zd,drawContour:()=>Os,drawDetections:()=>Gie,drawFaceExpressions:()=>Xie,drawFaceLandmarks:()=>Zie});function Os(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:r,y:s},a)=>{let o=t[a];e.moveTo(o.x,o.y),e.lineTo(r,s)}),n){let r=t[t.length-1],s=t[0];if(!r||!s)return;e.moveTo(r.x,r.y),e.lineTo(s.x,s.y)}e.stroke()}var n0={};Ep(n0,{computeReshapedDimensions:()=>t0,getCenterPoint:()=>wi,isDimensions:()=>Em,isEven:()=>_m,isFloat:()=>e0,isTensor:()=>vi,isTensor1D:()=>Oie,isTensor2D:()=>Qw,isTensor3D:()=>Ms,isTensor4D:()=>br,isValidNumber:()=>jr,isValidProbablitiy:()=>Lu,range:()=>hs,round:()=>xi});var Nn=class{constructor(t,n){if(!jr(t)||!jr(n))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:t,height:n})}`);this._width=t,this._height=n}get width(){return this._width}get height(){return this._height}reverse(){return new Nn(1/this.width,1/this.height)}};function vi(e,t){return e instanceof Ee&&e.shape.length===t}function Oie(e){return vi(e,1)}function Qw(e){return vi(e,2)}function Ms(e){return vi(e,3)}function br(e){return vi(e,4)}function e0(e){return e%1!=0}function _m(e){return e%2==0}function xi(e,t=2){let n=10**t;return Math.floor(e*n)/n}function Em(e){return e&&e.width&&e.height}function t0({width:e,height:t},n){let r=n/Math.max(t,e);return new Nn(Math.round(e*r),Math.round(t*r))}function wi(e){return e.reduce((t,n)=>t.add(n),new Oe(0,0)).div(new Oe(e.length,e.length))}function hs(e,t,n){return Array(e).fill(0).map((r,s)=>t+s*n)}function jr(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||e===0}function Lu(e){return jr(e)&&e>=0&&e<=1}var Oe=class{constructor(t,n){this._x=t,this._y=n}get x(){return this._x}get y(){return this._y}add(t){return new Oe(this.x+t.x,this.y+t.y)}sub(t){return new Oe(this.x-t.x,this.y-t.y)}mul(t){return new Oe(this.x*t.x,this.y*t.y)}div(t){return new Oe(this.x/t.x,this.y/t.y)}abs(){return new Oe(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new Oe(Math.floor(this.x),Math.floor(this.y))}};var ut=class{static isRect(t){return!!t&&[t.x,t.y,t.width,t.height].every(jr)}static assertIsValidBox(t,n,r=!1){if(!ut.isRect(t))throw new Error(`${n} - invalid box: ${JSON.stringify(t)}, expected object with properties x, y, width, height`);if(!r&&(t.width<0||t.height<0))throw new Error(`${n} - width (${t.width}) and height (${t.height}) must be positive numbers`)}constructor(t,n=!0){let r=t||{},s=[r.left,r.top,r.right,r.bottom].every(jr),a=[r.x,r.y,r.width,r.height].every(jr);if(!a&&!s)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(r)}`);let[o,i,c,u]=a?[r.x,r.y,r.width,r.height]:[r.left,r.top,r.right-r.left,r.bottom-r.top];ut.assertIsValidBox({x:o,y:i,width:c,height:u},"Box.constructor",n),this._x=o,this._y=i,this._width=c,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new Oe(this.left,this.top)}get topRight(){return new Oe(this.right,this.top)}get bottomLeft(){return new Oe(this.left,this.bottom)}get bottomRight(){return new Oe(this.right,this.bottom)}round(){let[t,n,r,s]=[this.x,this.y,this.width,this.height].map(a=>Math.round(a));return new ut({x:t,y:n,width:r,height:s})}floor(){let[t,n,r,s]=[this.x,this.y,this.width,this.height].map(a=>Math.floor(a));return new ut({x:t,y:n,width:r,height:s})}toSquare(){let{x:t,y:n,width:r,height:s}=this,a=Math.abs(r-s);return r<s&&(t-=a/2,r+=a),s<r&&(n-=a/2,s+=a),new ut({x:t,y:n,width:r,height:s})}rescale(t){let n=Em(t)?t.width:t,r=Em(t)?t.height:t;return new ut({x:this.x*n,y:this.y*r,width:this.width*n,height:this.height*r})}pad(t,n){let[r,s,a,o]=[this.x-t/2,this.y-n/2,this.width+t,this.height+n];return new ut({x:r,y:s,width:a,height:o})}clipAtImageBorders(t,n){let{x:r,y:s,right:a,bottom:o}=this,i=Math.max(r,0),c=Math.max(s,0),u=a-i,l=o-c,d=Math.min(u,t-i),p=Math.min(l,n-c);return new ut({x:i,y:c,width:d,height:p}).floor()}shift(t,n){let{width:r,height:s}=this,a=this.x+t,o=this.y+n;return new ut({x:a,y:o,width:r,height:s})}padAtBorders(t,n){let r=this.width+1,s=this.height+1,a=1,o=1,i=r,c=s,u=this.left,l=this.top,d=this.right,p=this.bottom;return d>n&&(i=-d+n+r,d=n),p>t&&(c=-p+t+s,p=t),u<1&&(c=2-u,u=1),l<1&&(c=2-l,l=1),{dy:o,edy:c,dx:a,edx:i,y:l,ey:p,x:u,ex:d,w:r,h:s}}calibrate(t){return new ut({left:this.left+t.left*this.width,top:this.top+t.top*this.height,right:this.right+t.right*this.width,bottom:this.bottom+t.bottom*this.height}).toSquare().round()}};var Bu=class extends ut{constructor(t,n,r,s,a=!1){super({left:t,top:n,right:r,bottom:s},a)}};var Ta=class{constructor(t,n,r,s,a){this._imageDims=new Nn(a.width,a.height),this._score=t,this._classScore=n,this._className=r,this._box=new ut(s).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new ut(this._box).rescale(this.imageDims.reverse())}forSize(t,n){return new Ta(this.score,this.classScore,this.className,this.relativeBox,{width:t,height:n})}};var vt=class extends Ta{constructor(t,n,r){super(t,t,"",n,r)}forSize(t,n){let{score:r,relativeBox:s,imageDims:a}=super.forSize(t,n);return new vt(r,s,a)}};function r0(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),s=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),a=r*s;return n?a/(e.area+t.area-a):a/Math.min(e.area,t.area)}function s0(e){let t=e.map(i=>i.x),n=e.map(i=>i.y),r=t.reduce((i,c)=>c<i?c:i,1/0),s=n.reduce((i,c)=>c<i?c:i,1/0),a=t.reduce((i,c)=>i<c?c:i,0),o=n.reduce((i,c)=>i<c?c:i,0);return new Bu(r,s,a,o)}function a0(e,t,n,r=!0){let s=t.map((o,i)=>({score:o,boxIndex:i})).sort((o,i)=>o.score-i.score).map(o=>o.boxIndex),a=[];for(;s.length>0;){let o=s.pop();a.push(o);let i=s,c=[];for(let u=0;u<i.length;u++){let l=i[u],d=e[o],p=e[l];c.push(r0(d,p,r))}s=s.filter((u,l)=>c[l]<=n)}return a}function qr(e,t){return M(()=>{let[n,r,s]=t,a=xn([...e.shape.slice(0,3),1],n,"float32"),o=xn([...e.shape.slice(0,3),1],r,"float32"),i=xn([...e.shape.slice(0,3),1],s,"float32"),c=Ze([a,o,i],3);return fe(e,c)})}function o0(e,t=!1){return M(()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let s=Math.abs(n-r),a=Math.round(s*(t?.5:1)),o=n>r?2:1,i=p=>{let h=e.shape.slice();return h[o]=p,xn(h,0,"float32")},c=i(a),u=s-c.shape[o],d=[t&&u?i(u):null,e,c].filter(p=>!!p).map(p=>ce(p,"float32"));return Ze(d,o)})}function Mie(e){let t=e.slice();for(let n=t.length-1;n>0;n--){let r=Math.floor(Math.random()*(n+1)),s=t[n];t[n]=t[r],t[r]=s}return t}function Kd(e){return 1/(1+Math.exp(-e))}function Lie(e){return Math.log(e/(1-e))}var zu=class extends ut{constructor(t,n,r,s,a=!1){super({x:t,y:n,width:r,height:s},a)}};var Bie=.5,zie=.43,Wie=.45,yr=class{constructor(t,n,r=new Oe(0,0)){let{width:s,height:a}=n;this._imgDims=new Nn(s,a),this._shift=r,this._positions=t.map(o=>o.mul(new Oe(s,a)).add(r))}get shift(){return new Oe(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(t=>t.sub(this._shift).div(new Oe(this.imageWidth,this.imageHeight)))}forSize(t,n){return new this.constructor(this.relativePositions,{width:t,height:n})}shiftBy(t,n){return new this.constructor(this.relativePositions,this._imgDims,new Oe(t,n))}shiftByPoint(t){return this.shiftBy(t.x,t.y)}align(t,n={}){if(t){let a=t instanceof vt?t.box.floor():new ut(t);return this.shiftBy(a.x,a.y).align(null,n)}let{useDlibAlignment:r,minBoxPadding:s}={useDlibAlignment:!1,minBoxPadding:.2,...n};return r?this.alignDlib():this.alignMinBbox(s)}alignDlib(){let t=this.getRefPointsForAlignment(),[n,r,s]=t,a=d=>s.sub(d).magnitude(),o=(a(n)+a(r))/2,i=Math.floor(o/Wie),c=wi(t),u=Math.floor(Math.max(0,c.x-Bie*i)),l=Math.floor(Math.max(0,c.y-zie*i));return new zu(u,l,Math.min(i,this.imageWidth+u),Math.min(i,this.imageHeight+l))}alignMinBbox(t){let n=s0(this.positions);return n.pad(n.width*t,n.height*t)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}};var cE=class extends yr{getRefPointsForAlignment(){let t=this.positions;return[t[0],t[1],wi([t[3],t[4]])]}};var Wu=class extends yr{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(wi)}};var Xd=class{constructor(t,n){this._label=t,this._distance=n}get label(){return this._label}get distance(){return this._distance}toString(t=!0){return`${this.label}${t?` (${xi(this.distance)})`:""}`}};var Yd=class extends ut{static assertIsValidLabeledBox(t,n){if(ut.assertIsValidBox(t,n),!jr(t.label))throw new Error(`${n} - expected property label (${t.label}) to be a number`)}constructor(t,n){super(t);this._label=n}get label(){return this._label}};var Ls=class{constructor(t,n){if(typeof t!="string")throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(n)||n.some(r=>!(r instanceof Float32Array)))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=t,this._descriptors=n}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map(t=>Array.from(t))}}static fromJSON(t){let n=t.descriptors.map(r=>new Float32Array(r));return new Ls(t.label,n)}};var uE=class extends Yd{static assertIsValidPredictedBox(t,n){if(Yd.assertIsValidLabeledBox(t,n),!Lu(t.score)||!Lu(t.classScore))throw new Error(`${n} - expected properties score (${t.score}) and (${t.classScore}) to be a number between [0, 1]`)}constructor(t,n,r,s){super(t,n);this._score=r,this._classScore=s}get score(){return this._score}get classScore(){return this._classScore}};function fs(e){return e.detection instanceof vt}function ki(e,t){return{...e,...{detection:t}}}function i0(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function Am(e){let t="";if(!e)try{e=Zr("fs")}catch(r){t=r.toString()}return{readFile:e?r=>new Promise((s,a)=>{e.readFile(r,(o,i)=>o?a(o):s(i))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function c0(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},s=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},a=()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},o=global.fetch,i=Am();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:r,createImageElement:s,createVideoElement:a,fetch:o,...i}}function u0(){return typeof window=="object"&&typeof document!="undefined"&&typeof HTMLImageElement!="undefined"&&typeof HTMLCanvasElement!="undefined"&&typeof HTMLVideoElement!="undefined"&&typeof ImageData!="undefined"&&typeof CanvasRenderingContext2D!="undefined"}function l0(){return typeof global=="object"&&typeof Zr=="function"&&typeof module!="undefined"&&typeof process!="undefined"&&!!process.version}var tn;function Vie(){if(!tn)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return tn}function d0(e){tn=e}function p0(){return u0()?d0(i0()):l0()?d0(c0()):null}function Uie(e){if(tn||p0(),!tn)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=tn.Canvas,Image:n=tn.Image}=e;tn.Canvas=t,tn.Image=n,tn.createCanvasElement=e.createCanvasElement||(()=>new t),tn.createImageElement=e.createImageElement||(()=>new n),tn.ImageData=e.ImageData||tn.ImageData,tn.Video=e.Video||tn.Video,tn.fetch=e.fetch||tn.fetch,tn.readFile=e.readFile||tn.readFile}var Je={getEnv:Vie,setEnv:d0,initialize:p0,createBrowserEnv:i0,createFileSystem:Am,createNodejsEnv:c0,monkeyPatch:Uie,isBrowser:u0,isNodejs:l0};p0();function Ii(e){return!Je.isNodejs()&&typeof e=="string"?document.getElementById(e):e}function Wn(e){let{Canvas:t,CanvasRenderingContext2D:n}=Je.getEnv();if(e instanceof n)return e;let r=Ii(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let s=r.getContext("2d");if(!s)throw new Error("resolveContext2d - canvas 2d context is null");return s}var ms;(function(s){s.TOP_LEFT="TOP_LEFT",s.TOP_RIGHT="TOP_RIGHT",s.BOTTOM_LEFT="BOTTOM_LEFT",s.BOTTOM_RIGHT="BOTTOM_RIGHT"})(ms||(ms={}));var Zd=class{constructor(t={}){let{anchorPosition:n,backgroundColor:r,fontColor:s,fontSize:a,fontStyle:o,padding:i}=t;this.anchorPosition=n||ms.TOP_LEFT,this.backgroundColor=r||"rgba(0, 0, 0, 0.5)",this.fontColor=s||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=o||"Georgia",this.padding=i||4}},Na=class{constructor(t,n,r={}){this.text=typeof t=="string"?[t]:t instanceof Na?t.text:t,this.anchor=n,this.options=new Zd(r)}measureWidth(t){let{padding:n}=this.options;return this.text.map(r=>t.measureText(r).width).reduce((r,s)=>r<s?s:r,0)+2*n}measureHeight(){let{fontSize:t,padding:n}=this.options;return this.text.length*t+2*n}getUpperLeft(t,n){let{anchorPosition:r}=this.options,s=r===ms.BOTTOM_RIGHT||r===ms.TOP_RIGHT,a=r===ms.BOTTOM_LEFT||r===ms.BOTTOM_RIGHT,o=this.measureWidth(t),i=this.measureHeight(),c=s?this.anchor.x-o:this.anchor.x,u=a?this.anchor.y-i:this.anchor.y;if(n){let{width:l,height:d}=n,p=Math.max(Math.min(c,l-o),0),h=Math.max(Math.min(u,d-i),0);return{x:p,y:h}}return{x:c,y:u}}draw(t){let n=Ii(t),r=Wn(n),{backgroundColor:s,fontColor:a,fontSize:o,fontStyle:i,padding:c}=this.options;r.font=`${o}px ${i}`;let u=this.measureWidth(r),l=this.measureHeight();r.fillStyle=s;let d=this.getUpperLeft(r,n);r.fillRect(d.x,d.y,u,l),r.fillStyle=a,this.text.forEach((p,h)=>{let f=c+d.x,m=c+d.y+(h+1)*o;r.fillText(p,f,m)})}};var h0=class{constructor(t={}){let{boxColor:n,lineWidth:r,label:s,drawLabelOptions:a}=t;this.boxColor=n||"rgba(0, 0, 255, 1)",this.lineWidth=r||2,this.label=s;let o={anchorPosition:ms.BOTTOM_LEFT,backgroundColor:this.boxColor};this.drawLabelOptions=new Zd({...o,...a})}},Dm=class{constructor(t,n={}){this.box=new ut(t),this.options=new h0(n)}draw(t){let n=Wn(t),{boxColor:r,lineWidth:s}=this.options,{x:a,y:o,width:i,height:c}=this.box;n.strokeStyle=r,n.lineWidth=s,n.strokeRect(a,o,i,c);let{label:u}=this.options;u&&new Na([u],{x:a-s/2,y:o},this.options.drawLabelOptions).draw(t)}};function Gie(e,t){(Array.isArray(t)?t:[t]).forEach(r=>{let s=r instanceof vt?r.score:fs(r)?r.detection.score:void 0,a=r instanceof vt?r.box:fs(r)?r.detection.box:new ut(r),o=s?`${xi(s)}`:void 0;new Dm(a,{label:o}).draw(e)})}function Jd(e){let{Image:t,Video:n}=Je.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function f0(e){return new Promise((t,n)=>{if(e instanceof Je.getEnv().Canvas||Jd(e))return t(null);function r(a){!a.currentTarget||(a.currentTarget.removeEventListener("load",s),a.currentTarget.removeEventListener("error",r),n(a))}function s(a){!a.currentTarget||(a.currentTarget.removeEventListener("load",s),a.currentTarget.removeEventListener("error",r),t(a))}e.addEventListener("load",s),e.addEventListener("error",r)})}function m0(e){return new Promise((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let r=new FileReader;r.onload=()=>{typeof r.result!="string"&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let s=Je.getEnv().createImageElement();s.onload=()=>t(s),s.onerror=n,s.src=r.result},r.onerror=n,r.readAsDataURL(e)})}function Si(e){let{Image:t,Video:n}=Je.getEnv();return e instanceof t?new Nn(e.naturalWidth,e.naturalHeight):e instanceof n?new Nn(e.videoWidth,e.videoHeight):new Nn(e.width,e.height)}function Ci({width:e,height:t}){let{createCanvasElement:n}=Je.getEnv(),r=n();return r.width=e,r.height=t,r}function Qd(e,t){let{ImageData:n}=Je.getEnv();if(!(e instanceof n)&&!Jd(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:s}=t||Si(e),a=Ci({width:r,height:s});return e instanceof n?Wn(a).putImageData(e,0,0):Wn(a).drawImage(e,0,0,r,s),a}async function g0(e,t){let n=t||Je.getEnv().createCanvasElement(),[r,s,a]=e.shape.slice(br(e)?1:0),o=M(()=>e.as3D(r,s,a).toInt());return await Uo.toPixels(o,n),o.dispose(),n}function $m(e){let{Image:t,Canvas:n,Video:r}=Je.getEnv();return e instanceof t||e instanceof n||e instanceof r}function b0(e,t,n=!1){let{Image:r,Canvas:s}=Je.getEnv();if(!(e instanceof r||e instanceof s))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return Ci({width:1,height:1});let a=Si(e),o=t/Math.max(a.height,a.width),i=o*a.width,c=o*a.height,u=Ci({width:t,height:t}),l=e instanceof s?e:Qd(e),d=Math.abs(i-c)/2,p=n&&i<c?d:0,h=n&&c<i?d:0;return l.width>0&&l.height>0&&Wn(u).drawImage(l,p,h,i,c),u}var Bs=class{constructor(t,n=!1){this._imageTensors=[];this._canvases=[];this._treatAsBatchInput=!1;this._inputDimensions=[];this._inputSize=0;if(!Array.isArray(t))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${t}`);this._treatAsBatchInput=n,this._batchSize=t.length,t.forEach((r,s)=>{if(Ms(r)){this._imageTensors[s]=r,this._inputDimensions[s]=r.shape;return}if(br(r)){let o=r.shape[0];if(o!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${o} passed, but not supported in input array`);this._imageTensors[s]=r,this._inputDimensions[s]=r.shape.slice(1);return}let a=r instanceof Je.getEnv().Canvas?r:Qd(r);this._canvases[s]=a,this._inputDimensions[s]=[a.height,a.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return hs(this.batchSize,0,1).map((t,n)=>this.getReshapedInputDimensions(n))}getInput(t){return this.canvases[t]||this.imageTensors[t]}getInputDimensions(t){return this._inputDimensions[t]}getInputHeight(t){return this._inputDimensions[t][0]}getInputWidth(t){return this._inputDimensions[t][1]}getReshapedInputDimensions(t){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let n=this.getInputWidth(t),r=this.getInputHeight(t);return t0({width:n,height:r},this.inputSize)}toBatchTensor(t,n=!0){return this._inputSize=t,M(()=>{let r=hs(this.batchSize,0,1).map(a=>{let o=this.getInput(a);if(o instanceof Ee){let i=br(o)?o:fn(o);return i=o0(i,n),(i.shape[1]!==t||i.shape[2]!==t)&&(i=Jn.resizeBilinear(i,[t,t],!1,!1)),i.as3D(t,t,3)}if(o instanceof Je.getEnv().Canvas)return Uo.fromPixels(b0(o,t,n));throw new Error(`toBatchTensor - at batchIdx ${a}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${o}`)});return Pt(r.map(a=>ce(a,"float32"))).as4D(this.batchSize,t,t,3)})}};async function mt(e){if(e instanceof Bs)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=s=>Array.isArray(e)?` at input index ${s}:`:"",r=t.map(Ii);return r.forEach((s,a)=>{if(!$m(s)&&!Ms(s)&&!br(s))throw typeof t[a]=="string"?new Error(`toNetInput -${n(a)} string passed, but could not resolve HTMLElement for element id ${t[a]}`):new Error(`toNetInput -${n(a)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(br(s)){let o=s.shape[0];if(o!==1)throw new Error(`toNetInput -${n(a)} tf.Tensor4D with batchSize ${o} passed, but not supported in input array`)}}),await Promise.all(r.map(s=>$m(s)&&f0(s))),new Bs(r,Array.isArray(e))}async function Vu(e,t){let{Canvas:n}=Je.getEnv(),r=e;if(!(e instanceof n)){let o=await mt(e);if(o.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let i=o.getInput(0);r=i instanceof n?i:await g0(i)}let s=Wn(r);return t.map(o=>o instanceof vt?o.forSize(r.width,r.height).box.floor():o).map(o=>o.clipAtImageBorders(r.width,r.height)).map(({x:o,y:i,width:c,height:u})=>{let l=Ci({width:c,height:u});return c>0&&u>0&&Wn(l).putImageData(s.getImageData(o,i,c,u),0,0),l})}async function Uu(e,t){if(!Ms(e)&&!br(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(br(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return M(()=>{let[n,r,s]=e.shape.slice(br(e)?1:0);return t.map(i=>i instanceof vt?i.forSize(r,n).box:i).map(i=>i.clipAtImageBorders(r,n)).map(({x:i,y:c,width:u,height:l})=>lu(e.as3D(n,r,s),[c,i,0],[l,u,s]))})}async function zs(e,t){let{fetch:n}=Je.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function Hie(e){let t=await zs(e),n=await t.blob();if(!n.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return m0(n)}async function y0(e){return(await zs(e)).json()}async function jie(e){return new Float32Array(await(await zs(e)).arrayBuffer())}function lE(e){return new Promise((t,n)=>{e instanceof Blob||n(new Error("bufferToVideo - expected buf to be of type: Blob"));let r=Je.getEnv().createVideoElement();r.oncanplay=()=>t(r),r.onerror=n,r.playsInline=!0,r.muted=!0,r.src=URL.createObjectURL(e),r.play()})}async function qie(e){let t=await zs(e),n=await t.blob();if(!n.type.startsWith("video/"))throw new Error(`fetchVideo - expected blob type to be of type video/*, instead have: ${n.type}, for url: ${t.url}`);return lE(n)}function Fm(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if(e==="/")return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(r,"");let s=e.split("/").filter(i=>i),a=e.endsWith(".json")?s[s.length-1]:n,o=r+(e.endsWith(".json")?s.slice(0,s.length-1):s).join("/");return o=e.startsWith("/")?`/${o}`:o,{modelBaseUri:o,manifestUri:o==="/"?`/${a}`:`${o}/${a}`}}async function v0(e,t){let{manifestUri:n,modelBaseUri:r}=Fm(e,t),s=await y0(n);return Xt.loadWeights(s,r)}function Kie(e,t,n=!1){let{width:r,height:s}=n?Si(t):t;return e.width=r,e.height=s,{width:r,height:s}}var ln=class{constructor(t){this._params=void 0;this._paramMappings=[];this._name=t}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(t){let{obj:n,objProp:r}=this.traversePropertyPath(t);return n[r]}reassignParamFromPath(t,n){let{obj:r,objProp:s}=this.traversePropertyPath(t);r[s].dispose(),r[s]=n}getParamList(){return this._paramMappings.map(({paramPath:t})=>({path:t,tensor:this.getParamFromPath(t)}))}getTrainableParams(){return this.getParamList().filter(t=>t.tensor instanceof ra)}getFrozenParams(){return this.getParamList().filter(t=>!(t.tensor instanceof ra))}variable(){this.getFrozenParams().forEach(({path:t,tensor:n})=>{this.reassignParamFromPath(t,n.variable())})}freeze(){this.getTrainableParams().forEach(({path:t,tensor:n})=>{let r=jn(n.dataSync());n.dispose(),this.reassignParamFromPath(t,r)})}dispose(t=!0){this.getParamList().forEach(n=>{if(t&&n.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${n.path}`);n.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:t})=>Array.from(t.dataSync())).reduce((t,n)=>t.concat(n)))}async load(t){if(t instanceof Float32Array){this.extractWeights(t);return}await this.loadFromUri(t)}async loadFromUri(t){if(t&&typeof t!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let n=await v0(t,this.getDefaultModelName());this.loadFromWeightMap(n)}async loadFromDisk(t){if(t&&typeof t!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:n}=Je.getEnv(),{manifestUri:r,modelBaseUri:s}=Fm(t,this.getDefaultModelName()),a=u=>Promise.all(u.map(l=>n(l).then(d=>d.buffer))),o=Xt.weightsLoaderFactory(a),i=JSON.parse((await n(r)).toString()),c=await o(i,s);this.loadFromWeightMap(c)}loadFromWeightMap(t){let{paramMappings:n,params:r}=this.extractParamsFromWeightMap(t);this._paramMappings=n,this._params=r}extractWeights(t){let{paramMappings:n,params:r}=this.extractParams(t);this._paramMappings=n,this._params=r}traversePropertyPath(t){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let n=t.split("/").reduce((a,o)=>{if(!a.nextObj.hasOwnProperty(o))throw new Error(`traversePropertyPath - object does not have property ${o}, for path ${t}`);return{obj:a.nextObj,objProp:o,nextObj:a.nextObj[o]}},{nextObj:this.params}),{obj:r,objProp:s}=n;if(!r||!s||!(r[s]instanceof Ee))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${t}`);return{obj:r,objProp:s}}};function Vn(e,t,n){return M(()=>{let r=Jo(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=Y(r,t.bias),r})}function Rm(e,t,n=!1){return M(()=>{let r=qe(n?Y(Ft(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):Vn(e,t.conv0,[2,2])),s=Vn(r,t.conv1,[1,1]),a=qe(Y(r,s)),o=Vn(a,t.conv2,[1,1]);return qe(Y(r,Y(s,o)))})}function ep(e,t,n=!1,r=!0){return M(()=>{let s=qe(n?Y(Ft(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):Vn(e,t.conv0,r?[2,2]:[1,1])),a=Vn(s,t.conv1,[1,1]),o=qe(Y(s,a)),i=Vn(o,t.conv2,[1,1]),c=qe(Y(s,Y(a,i))),u=Vn(c,t.conv3,[1,1]);return qe(Y(s,Y(a,Y(i,u))))})}function Ti(e,t,n="same",r=!1){return M(()=>{let s=Y(Ft(e,t.filters,[1,1],n),t.bias);return r?qe(s):s})}function _n(e,t){Object.keys(e).forEach(n=>{t.some(r=>r.originalPath===n)||e[n].dispose()})}function Gu(e,t){return(n,r,s,a)=>{let o=Or(e(n*r*s*s),[s,s,n,r]),i=He(e(r));return t.push({paramPath:`${a}/filters`},{paramPath:`${a}/bias`}),{filters:o,bias:i}}}function Pm(e,t){return(n,r,s)=>{let a=Pr(e(n*r),[n,r]),o=He(e(r));return t.push({paramPath:`${s}/weights`},{paramPath:`${s}/bias`}),{weights:a,bias:o}}}var Om=class{constructor(t,n,r){this.depthwise_filter=t;this.pointwise_filter=n;this.bias=r}};function Hu(e,t){return(n,r,s)=>{let a=Or(e(3*3*n),[3,3,n,1]),o=Or(e(n*r),[1,1,n,r]),i=He(e(r));return t.push({paramPath:`${s}/depthwise_filter`},{paramPath:`${s}/pointwise_filter`},{paramPath:`${s}/bias`}),new Om(a,o,i)}}function ju(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),s=e(`${t}/bias`,1);return new Om(n,r,s)}}function rr(e,t){return(n,r,s)=>{let a=e[n];if(!vi(a,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${a}`);return t.push({originalPath:n,paramPath:s||n}),a}}function En(e){let t=e;function n(s){let a=t.slice(0,s);return t=t.slice(s),a}function r(){return t}return{extractWeights:n,getRemainingWeights:r}}function Mm(e,t){let n=Gu(e,t),r=Hu(e,t);function s(o,i,c,u=!1){let l=u?n(o,i,3,`${c}/conv0`):r(o,i,`${c}/conv0`),d=r(i,i,`${c}/conv1`),p=r(i,i,`${c}/conv2`);return{conv0:l,conv1:d,conv2:p}}function a(o,i,c,u=!1){let{conv0:l,conv1:d,conv2:p}=s(o,i,c,u),h=r(i,i,`${c}/conv3`);return{conv0:l,conv1:d,conv2:p,conv3:h}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:a}}function dE(e){let t=[],{extractWeights:n,getRemainingWeights:r}=En(e),{extractDenseBlock4Params:s}=Mm(n,t),a=s(3,32,"dense0",!0),o=s(32,64,"dense1"),i=s(64,128,"dense2"),c=s(128,256,"dense3");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:a,dense1:o,dense2:i,dense3:c}}}function Lm(e){return t=>{let n=e(`${t}/filters`,4),r=e(`${t}/bias`,1);return{filters:n,bias:r}}}function Bm(e,t){let n=rr(e,t),r=Lm(n),s=ju(n);function a(i,c=!1){let u=c?r(`${i}/conv0`):s(`${i}/conv0`),l=s(`${i}/conv1`),d=s(`${i}/conv2`);return{conv0:u,conv1:l,conv2:d}}function o(i,c=!1){let u=c?r(`${i}/conv0`):s(`${i}/conv0`),l=s(`${i}/conv1`),d=s(`${i}/conv2`),p=s(`${i}/conv3`);return{conv0:u,conv1:l,conv2:d,conv3:p}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:o}}function pE(e){let t=[],{extractDenseBlock4Params:n}=Bm(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return _n(e,t),{params:r,paramMappings:t}}var tp=class extends ln{constructor(){super("FaceFeatureExtractor")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("FaceFeatureExtractor - load model before inference");return M(()=>{let r=ce(t.toBatchTensor(112,!0),"float32"),a=qr(r,[122.782,117.001,104.298]).div(255),o=ep(a,n.dense0,!0);return o=ep(o,n.dense1),o=ep(o,n.dense2),o=ep(o,n.dense3),o=ur(o,[7,7],[2,2],"valid"),o})}async forward(t){return this.forwardInput(await mt(t))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(t){return pE(t)}extractParams(t){return dE(t)}};function np(e,t){return M(()=>Y(De(e,t.weights),t.bias))}function hE(e,t,n){let r=[],{extractWeights:s,getRemainingWeights:a}=En(e),i=Pm(s,r)(t,n,"fc");if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:r,params:{fc:i}}}function fE(e){let t=[],n=rr(e,t);function r(a){let o=n(`${a}/weights`,2),i=n(`${a}/bias`,1);return{weights:o,bias:i}}let s={fc:r("fc")};return _n(e,t),{params:s,paramMappings:t}}function zm(e){let t={},n={};return Object.keys(e).forEach(r=>{let s=r.startsWith("fc")?n:t;s[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var rp=class extends ln{constructor(t,n){super(t);this._faceFeatureExtractor=n}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(t){let{params:n}=this;if(!n)throw new Error(`${this._name} - load model before inference`);return M(()=>{let r=t instanceof Bs?this.faceFeatureExtractor.forwardInput(t):t;return np(r.as2D(r.shape[0],-1),n.fc)})}dispose(t=!0){this.faceFeatureExtractor.dispose(t),super.dispose(t)}loadClassifierParams(t){let{params:n,paramMappings:r}=this.extractClassifierParams(t);this._params=n,this._paramMappings=r}extractClassifierParams(t){return hE(t,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(t){let{featureExtractorMap:n,classifierMap:r}=zm(t);return this.faceFeatureExtractor.loadFromWeightMap(n),fE(r)}extractParams(t){let n=this.getClassifierChannelsIn(),r=this.getClassifierChannelsOut(),s=r*n+r,a=t.slice(0,t.length-s),o=t.slice(t.length-s);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(o)}};var x0=["neutral","happy","sad","angry","fearful","disgusted","surprised"],_a=class{constructor(t){this.neutral=0;this.happy=0;this.sad=0;this.angry=0;this.fearful=0;this.disgusted=0;this.surprised=0;if(t.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${t.length}`);x0.forEach((n,r)=>{this[n]=t[r]})}asSortedArray(){return x0.map(t=>({expression:t,probability:this[t]})).sort((t,n)=>n.probability-t.probability)}};var Wm=class extends rp{constructor(t=new tp){super("FaceExpressionNet",t)}forwardInput(t){return M(()=>Rr(this.runNet(t)))}async forward(t){return this.forwardInput(await mt(t))}async predictExpressions(t){let n=await mt(t),r=await this.forwardInput(n),s=await Promise.all(dt(r).map(async o=>{let i=o.dataSync();return o.dispose(),i}));r.dispose();let a=s.map(o=>new _a(o));return n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function w0(e){return e.expressions instanceof _a}function Vm(e,t){return{...e,...{expressions:t}}}function Xie(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(a=>{let o=a instanceof _a?a:w0(a)?a.expressions:void 0;if(!o)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let c=o.asSortedArray().filter(d=>d.probability>n),u=fs(a)?a.detection.box.bottomLeft:r||new Oe(0,0);new Na(c.map(d=>`${d.expression} (${xi(d.probability)})`),u).draw(e)})}function Ni(e){return fs(e)&&e.landmarks instanceof yr&&e.unshiftedLandmarks instanceof yr&&e.alignedRect instanceof vt}function Yie(e){let t=(i,c,u,l)=>Math.atan2(l-c,u-i)%Math.PI,n=i=>i*180/Math.PI,r={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||e._positions.length!==68)return r;let s=e._positions;r.roll=-t(s[36]._x,s[36]._y,s[45]._x,s[45]._y),r.pitch=t(0,Math.abs(s[0]._x-s[30]._x)/s[30]._x,Math.PI,Math.abs(s[16]._x-s[30]._x)/s[30]._x);let a=s.reduce((i,c)=>i<c._y?i:c._y,1/0),o=s.reduce((i,c)=>i>c._y?i:c._y,-1/0);return r.yaw=Math.PI*(e._imgDims._height/(o-a)/1.4-1),r}function qu(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),s=r.align(),{imageDims:a}=e.detection,o=new vt(e.detection.score,s.rescale(a.reverse()),a),i=Yie(t);return{...e,...{landmarks:r,unshiftedLandmarks:t,alignedRect:o,angle:i}}}var k0=class{constructor(t={}){let{drawLines:n=!0,drawPoints:r=!0,lineWidth:s,lineColor:a,pointSize:o,pointColor:i}=t;this.drawLines=n,this.drawPoints=r,this.lineWidth=s||1,this.pointSize=o||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},I0=class{constructor(t,n={}){this.faceLandmarks=t,this.options=new k0(n)}draw(t){let n=Wn(t),{drawLines:r,drawPoints:s,lineWidth:a,lineColor:o,pointSize:i,pointColor:c}=this.options;if(r&&this.faceLandmarks instanceof Wu&&(n.strokeStyle=o,n.lineWidth=a,Os(n,this.faceLandmarks.getJawOutline()),Os(n,this.faceLandmarks.getLeftEyeBrow()),Os(n,this.faceLandmarks.getRightEyeBrow()),Os(n,this.faceLandmarks.getNose()),Os(n,this.faceLandmarks.getLeftEye(),!0),Os(n,this.faceLandmarks.getRightEye(),!0),Os(n,this.faceLandmarks.getMouth(),!0)),s){n.strokeStyle=c,n.fillStyle=c;let u=l=>{n.beginPath(),n.arc(l.x,l.y,i,0,2*Math.PI),n.fill()};this.faceLandmarks.positions.forEach(u)}}};function Zie(e,t){(Array.isArray(t)?t:[t]).forEach(r=>{let s=r instanceof yr?r:Ni(r)?r.landmarks:void 0;if(!s)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new I0(s).draw(e)})}var mE="1.5.4";function Qie(e,t){let n=Gu(e,t),r=Hu(e,t);function s(o,i,c){let u=r(o,i,`${c}/separable_conv0`),l=r(i,i,`${c}/separable_conv1`),d=n(o,i,1,`${c}/expansion_conv`);return{separable_conv0:u,separable_conv1:l,expansion_conv:d}}function a(o,i){let c=r(o,o,`${i}/separable_conv0`),u=r(o,o,`${i}/separable_conv1`),l=r(o,o,`${i}/separable_conv2`);return{separable_conv0:c,separable_conv1:u,separable_conv2:l}}return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:s,extractMainBlockParams:a}}function gE(e,t){let n=[],{extractWeights:r,getRemainingWeights:s}=En(e),{extractConvParams:a,extractSeparableConvParams:o,extractReductionBlockParams:i,extractMainBlockParams:c}=Qie(r,n),u=a(3,32,3,"entry_flow/conv_in"),l=i(32,64,"entry_flow/reduction_block_0"),d=i(64,128,"entry_flow/reduction_block_1"),p={conv_in:u,reduction_block_0:l,reduction_block_1:d},h={};hs(t,0,1).forEach(b=>{h[`main_block_${b}`]=c(128,`middle_flow/main_block_${b}`)});let f=i(128,256,"exit_flow/reduction_block"),m=o(256,512,"exit_flow/separable_conv"),g={reduction_block:f,separable_conv:m};if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:n,params:{entry_flow:p,middle_flow:h,exit_flow:g}}}function ece(e,t){let n=rr(e,t),r=Lm(n),s=ju(n);function a(i){let c=s(`${i}/separable_conv0`),u=s(`${i}/separable_conv1`),l=r(`${i}/expansion_conv`);return{separable_conv0:c,separable_conv1:u,expansion_conv:l}}function o(i){let c=s(`${i}/separable_conv0`),u=s(`${i}/separable_conv1`),l=s(`${i}/separable_conv2`);return{separable_conv0:c,separable_conv1:u,separable_conv2:l}}return{extractConvParams:r,extractSeparableConvParams:s,extractReductionBlockParams:a,extractMainBlockParams:o}}function bE(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:s,extractReductionBlockParams:a,extractMainBlockParams:o}=ece(e,n),i=r("entry_flow/conv_in"),c=a("entry_flow/reduction_block_0"),u=a("entry_flow/reduction_block_1"),l={conv_in:i,reduction_block_0:c,reduction_block_1:u},d={};hs(t,0,1).forEach(m=>{d[`main_block_${m}`]=o(`middle_flow/main_block_${m}`)});let p=a("exit_flow/reduction_block"),h=s("exit_flow/separable_conv"),f={reduction_block:p,separable_conv:h};return _n(e,n),{params:{entry_flow:l,middle_flow:d,exit_flow:f},paramMappings:n}}function yE(e,t,n){return Y(Ft(e,t.filters,n,"same"),t.bias)}function C0(e,t,n=!0){let r=n?qe(e):e;return r=Vn(r,t.separable_conv0,[1,1]),r=Vn(qe(r),t.separable_conv1,[1,1]),r=Rt(r,[3,3],[2,2],"same"),r=Y(r,yE(e,t.expansion_conv,[2,2])),r}function tce(e,t){let n=Vn(qe(e),t.separable_conv0,[1,1]);return n=Vn(qe(n),t.separable_conv1,[1,1]),n=Vn(qe(n),t.separable_conv2,[1,1]),n=Y(n,e),n}var T0=class extends ln{constructor(t){super("TinyXception");this._numMainBlocks=t}forwardInput(t){let{params:n}=this;if(!n)throw new Error("TinyXception - load model before inference");return M(()=>{let r=ce(t.toBatchTensor(112,!0),"float32"),a=qr(r,[122.782,117.001,104.298]).div(255),o=qe(yE(a,n.entry_flow.conv_in,[2,2]));return o=C0(o,n.entry_flow.reduction_block_0,!1),o=C0(o,n.entry_flow.reduction_block_1),hs(this._numMainBlocks,0,1).forEach(i=>{o=tce(o,n.middle_flow[`main_block_${i}`])}),o=C0(o,n.exit_flow.reduction_block),o=qe(Vn(o,n.exit_flow.separable_conv,[1,1])),o})}async forward(t){return this.forwardInput(await mt(t))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(t){return bE(t,this._numMainBlocks)}extractParams(t){return gE(t,this._numMainBlocks)}};function vE(e){let t=[],{extractWeights:n,getRemainingWeights:r}=En(e),s=Pm(n,t),a=s(512,1,"fc/age"),o=s(512,2,"fc/gender");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:a,gender:o}}}}function xE(e){let t=[],n=rr(e,t);function r(a){let o=n(`${a}/weights`,2),i=n(`${a}/bias`,1);return{weights:o,bias:i}}let s={fc:{age:r("fc/age"),gender:r("fc/gender")}};return _n(e,t),{params:s,paramMappings:t}}var Ws;(function(n){n.FEMALE="female",n.MALE="male"})(Ws||(Ws={}));var Um=class extends ln{constructor(t=new T0(2)){super("AgeGenderNet");this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(t){let{params:n}=this;if(!n)throw new Error(`${this._name} - load model before inference`);return M(()=>{let r=t instanceof Bs?this.faceFeatureExtractor.forwardInput(t):t,s=ur(r,[7,7],[2,2],"valid").as2D(r.shape[0],-1),a=np(s,n.fc.age).as1D(),o=np(s,n.fc.gender);return{age:a,gender:o}})}forwardInput(t){return M(()=>{let{age:n,gender:r}=this.runNet(t);return{age:n,gender:Rr(r)}})}async forward(t){return this.forwardInput(await mt(t))}async predictAgeAndGender(t){let n=await mt(t),r=await this.forwardInput(n),s=dt(r.age),a=dt(r.gender),o=s.map((c,u)=>({ageTensor:c,genderTensor:a[u]})),i=await Promise.all(o.map(async({ageTensor:c,genderTensor:u})=>{let l=c.dataSync()[0],d=u.dataSync()[0],p=d>.5,h=p?Ws.MALE:Ws.FEMALE,f=p?d:1-d;return c.dispose(),u.dispose(),{age:l,gender:h,genderProbability:f}}));return r.age.dispose(),r.gender.dispose(),n.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(t=!0){this.faceFeatureExtractor.dispose(t),super.dispose(t)}loadClassifierParams(t){let{params:n,paramMappings:r}=this.extractClassifierParams(t);this._params=n,this._paramMappings=r}extractClassifierParams(t){return vE(t)}extractParamsFromWeightMap(t){let{featureExtractorMap:n,classifierMap:r}=zm(t);return this.faceFeatureExtractor.loadFromWeightMap(n),xE(r)}extractParams(t){let n=512*1+1+(512*2+2),r=t.slice(0,t.length-n),s=t.slice(t.length-n);return this.faceFeatureExtractor.extractWeights(r),this.extractClassifierParams(s)}};var sp=class extends rp{postProcess(t,n,r){let s=r.map(({width:o,height:i})=>{let c=n/Math.max(i,o);return{width:o*c,height:i*c}}),a=s.length;return M(()=>{let o=(d,p)=>Pt([xn([68],d,"float32"),xn([68],p,"float32")],1).as2D(1,136).as1D(),i=(d,p)=>{let{width:h,height:f}=s[d];return p(h,f)?Math.abs(h-f)/2:0},c=d=>i(d,(p,h)=>p<h),u=d=>i(d,(p,h)=>h<p);return t.mul(xn([a,136],n,"float32")).sub(Pt(Array.from(Array(a),(d,p)=>o(c(p),u(p))))).div(Pt(Array.from(Array(a),(d,p)=>o(s[p].width,s[p].height))))})}forwardInput(t){return M(()=>{let n=this.runNet(t);return this.postProcess(n,t.inputSize,t.inputDimensions.map(([r,s])=>({height:r,width:s})))})}async forward(t){return this.forwardInput(await mt(t))}async detectLandmarks(t){let n=await mt(t),r=M(()=>dt(this.forwardInput(n))),s=await Promise.all(r.map(async(a,o)=>{let i=Array.from(a.dataSync()),c=i.filter((l,d)=>_m(d)),u=i.filter((l,d)=>!_m(d));return new Wu(Array(68).fill(0).map((l,d)=>new Oe(c[d],u[d])),{height:n.getInputHeight(o),width:n.getInputWidth(o)})}));return r.forEach(a=>a.dispose()),n.isBatchInput?s:s[0]}getClassifierChannelsOut(){return 136}};var Ku=class extends sp{constructor(t=new tp){super("FaceLandmark68Net",t)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function wE(e){let t=[],{extractDenseBlock3Params:n}=Bm(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return _n(e,t),{params:r,paramMappings:t}}function kE(e){let t=[],{extractWeights:n,getRemainingWeights:r}=En(e),{extractDenseBlock3Params:s}=Mm(n,t),a=s(3,32,"dense0",!0),o=s(32,64,"dense1"),i=s(64,128,"dense2");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:a,dense1:o,dense2:i}}}var N0=class extends ln{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("TinyFaceFeatureExtractor - load model before inference");return M(()=>{let r=ce(t.toBatchTensor(112,!0),"float32"),a=qr(r,[122.782,117.001,104.298]).div(255),o=Rm(a,n.dense0,!0);return o=Rm(o,n.dense1),o=Rm(o,n.dense2),o=ur(o,[14,14],[2,2],"valid"),o})}async forward(t){return this.forwardInput(await mt(t))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(t){return wE(t)}extractParams(t){return kE(t)}};var Gm=class extends sp{constructor(t=new N0){super("FaceLandmark68TinyNet",t)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};var IE=class extends Ku{};function SE(e,t){return Y(V(e,t.weights),t.biases)}function _0(e,t,n,r,s="same"){let{filters:a,bias:o}=t.conv,i=Ft(e,a,n,s);return i=Y(i,o),i=SE(i,t.scale),r?qe(i):i}function CE(e,t){return _0(e,t,[1,1],!0)}function E0(e,t){return _0(e,t,[1,1],!1)}function Hm(e,t){return _0(e,t,[2,2],!0,"valid")}function nce(e,t){function n(i,c,u){let l=e(i),d=l.length/(c*u*u);if(e0(d))throw new Error(`depth has to be an integer: ${d}, weights.length: ${l.length}, numFilters: ${c}, filterSize: ${u}`);return M(()=>Pe(Or(l,[c,d,u,u]),[2,3,1,0]))}function r(i,c,u,l){let d=n(i,c,u),p=He(e(c));return t.push({paramPath:`${l}/filters`},{paramPath:`${l}/bias`}),{filters:d,bias:p}}function s(i,c){let u=He(e(i)),l=He(e(i));return t.push({paramPath:`${c}/weights`},{paramPath:`${c}/biases`}),{weights:u,biases:l}}function a(i,c,u,l){let d=r(i,c,u,`${l}/conv`),p=s(c,`${l}/scale`);return{conv:d,scale:p}}function o(i,c,u,l,d=!1){let p=a((d?.5:1)*i,c,u,`${l}/conv1`),h=a(i,c,u,`${l}/conv2`);return{conv1:p,conv2:h}}return{extractConvLayerParams:a,extractResidualLayerParams:o}}function TE(e){let{extractWeights:t,getRemainingWeights:n}=En(e),r=[],{extractConvLayerParams:s,extractResidualLayerParams:a}=nce(t,r),o=s(4704,32,7,"conv32_down"),i=a(9216,32,3,"conv32_1"),c=a(9216,32,3,"conv32_2"),u=a(9216,32,3,"conv32_3"),l=a(36864,64,3,"conv64_down",!0),d=a(36864,64,3,"conv64_1"),p=a(36864,64,3,"conv64_2"),h=a(36864,64,3,"conv64_3"),f=a(147456,128,3,"conv128_down",!0),m=a(147456,128,3,"conv128_1"),g=a(147456,128,3,"conv128_2"),b=a(589824,256,3,"conv256_down",!0),y=a(589824,256,3,"conv256_1"),v=a(589824,256,3,"conv256_2"),x=a(589824,256,3,"conv256_down_out"),k=M(()=>Pe(Pr(t(256*128),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:o,conv32_1:i,conv32_2:c,conv32_3:u,conv64_down:l,conv64_1:d,conv64_2:p,conv64_3:h,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:b,conv256_1:y,conv256_2:v,conv256_down_out:x,fc:k},paramMappings:r}}function rce(e,t){let n=rr(e,t);function r(o){let i=n(`${o}/scale/weights`,1),c=n(`${o}/scale/biases`,1);return{weights:i,biases:c}}function s(o){let i=n(`${o}/conv/filters`,4),c=n(`${o}/conv/bias`,1),u=r(o);return{conv:{filters:i,bias:c},scale:u}}function a(o){return{conv1:s(`${o}/conv1`),conv2:s(`${o}/conv2`)}}return{extractConvLayerParams:s,extractResidualLayerParams:a}}function NE(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=rce(e,t),s=n("conv32_down"),a=r("conv32_1"),o=r("conv32_2"),i=r("conv32_3"),c=r("conv64_down"),u=r("conv64_1"),l=r("conv64_2"),d=r("conv64_3"),p=r("conv128_down"),h=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),b=r("conv256_2"),y=r("conv256_down_out"),{fc:v}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!Qw(v))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${v}`);let x={conv32_down:s,conv32_1:a,conv32_2:o,conv32_3:i,conv64_down:c,conv64_1:u,conv64_2:l,conv64_3:d,conv128_down:p,conv128_1:h,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:b,conv256_down_out:y,fc:v};return _n(e,t),{params:x,paramMappings:t}}function Kr(e,t){let n=CE(e,t.conv1);return n=E0(n,t.conv2),n=Y(n,e),n=qe(n),n}function ap(e,t){let n=Hm(e,t.conv1);n=E0(n,t.conv2);let r=ur(e,2,2,"valid"),s=It(r.shape),a=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let i=[...n.shape];i[1]=1;let c=It(i);n=Ze([n,c],1);let u=[...n.shape];u[2]=1;let l=It(u);n=Ze([n,l],2)}return r=a?Ze([r,s],3):r,n=Y(r,n),n=qe(n),n}var Xu=class extends ln{constructor(){super("FaceRecognitionNet")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("FaceRecognitionNet - load model before inference");return M(()=>{let r=ce(t.toBatchTensor(150,!0),"float32"),a=qr(r,[122.782,117.001,104.298]).div(255),o=Hm(a,n.conv32_down);o=Rt(o,3,2,"valid"),o=Kr(o,n.conv32_1),o=Kr(o,n.conv32_2),o=Kr(o,n.conv32_3),o=ap(o,n.conv64_down),o=Kr(o,n.conv64_1),o=Kr(o,n.conv64_2),o=Kr(o,n.conv64_3),o=ap(o,n.conv128_down),o=Kr(o,n.conv128_1),o=Kr(o,n.conv128_2),o=ap(o,n.conv256_down),o=Kr(o,n.conv256_1),o=Kr(o,n.conv256_2),o=ap(o,n.conv256_down_out);let i=o.mean([1,2]);return De(i,n.fc)})}async forward(t){return this.forwardInput(await mt(t))}async computeFaceDescriptor(t){var a;if((a=t==null?void 0:t.shape)==null?void 0:a.some(o=>o<=0))return new Float32Array(128);let n=await mt(t),r=M(()=>dt(this.forwardInput(n))),s=await Promise.all(r.map(o=>o.data()));return r.forEach(o=>o.dispose()),n.isBatchInput?s:s[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(t){return NE(t)}extractParams(t){return TE(t)}};function sce(e){let t=new Xu;return t.extractWeights(e),t}function jm(e,t){return{...e,...{descriptor:t}}}function ace(e){return typeof e.age=="number"}function qm(e,t){return{...e,...{age:t}}}function oce(e){return(e.gender===Ws.MALE||e.gender===Ws.FEMALE)&&Lu(e.genderProbability)}function Km(e,t,n){return{...e,...{gender:t,genderProbability:n}}}function ice(e,t){function n(c,u){let l=Or(e(3*3*c),[3,3,c,1]),d=He(e(c)),p=He(e(c)),h=He(e(c)),f=He(e(c));return t.push({paramPath:`${u}/filters`},{paramPath:`${u}/batch_norm_scale`},{paramPath:`${u}/batch_norm_offset`},{paramPath:`${u}/batch_norm_mean`},{paramPath:`${u}/batch_norm_variance`}),{filters:l,batch_norm_scale:d,batch_norm_offset:p,batch_norm_mean:h,batch_norm_variance:f}}function r(c,u,l,d,p){let h=Or(e(c*u*l*l),[l,l,c,u]),f=He(e(u));return t.push({paramPath:`${d}/filters`},{paramPath:`${d}/${p?"batch_norm_offset":"bias"}`}),{filters:h,bias:f}}function s(c,u,l,d){let{filters:p,bias:h}=r(c,u,l,d,!0);return{filters:p,batch_norm_offset:h}}function a(c,u,l){let d=n(c,`${l}/depthwise_conv`),p=s(c,u,1,`${l}/pointwise_conv`);return{depthwise_conv:d,pointwise_conv:p}}function o(){let c=s(3,32,3,"mobilenetv1/conv_0"),u=a(32,64,"mobilenetv1/conv_1"),l=a(64,128,"mobilenetv1/conv_2"),d=a(128,128,"mobilenetv1/conv_3"),p=a(128,256,"mobilenetv1/conv_4"),h=a(256,256,"mobilenetv1/conv_5"),f=a(256,512,"mobilenetv1/conv_6"),m=a(512,512,"mobilenetv1/conv_7"),g=a(512,512,"mobilenetv1/conv_8"),b=a(512,512,"mobilenetv1/conv_9"),y=a(512,512,"mobilenetv1/conv_10"),v=a(512,512,"mobilenetv1/conv_11"),x=a(512,1024,"mobilenetv1/conv_12"),k=a(1024,1024,"mobilenetv1/conv_13");return{conv_0:c,conv_1:u,conv_2:l,conv_3:d,conv_4:p,conv_5:h,conv_6:f,conv_7:m,conv_8:g,conv_9:b,conv_10:y,conv_11:v,conv_12:x,conv_13:k}}function i(){let c=s(1024,256,1,"prediction_layer/conv_0"),u=s(256,512,3,"prediction_layer/conv_1"),l=s(512,128,1,"prediction_layer/conv_2"),d=s(128,256,3,"prediction_layer/conv_3"),p=s(256,128,1,"prediction_layer/conv_4"),h=s(128,256,3,"prediction_layer/conv_5"),f=s(256,64,1,"prediction_layer/conv_6"),m=s(64,128,3,"prediction_layer/conv_7"),g=r(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),b=r(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),y=r(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),v=r(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),x=r(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),k=r(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),C=r(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),N=r(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),$=r(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),R=r(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),O=r(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),D=r(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:c,conv_1:u,conv_2:l,conv_3:d,conv_4:p,conv_5:h,conv_6:f,conv_7:m,box_predictor_0:{box_encoding_predictor:g,class_predictor:b},box_predictor_1:{box_encoding_predictor:y,class_predictor:v},box_predictor_2:{box_encoding_predictor:x,class_predictor:k},box_predictor_3:{box_encoding_predictor:C,class_predictor:N},box_predictor_4:{box_encoding_predictor:$,class_predictor:R},box_predictor_5:{box_encoding_predictor:O,class_predictor:D}}}return{extractMobilenetV1Params:o,extractPredictionLayerParams:i}}function _E(e){let t=[],{extractWeights:n,getRemainingWeights:r}=En(e),{extractMobilenetV1Params:s,extractPredictionLayerParams:a}=ice(n,t),o=s(),i=a(),u={extra_dim:_h(n(5118*4),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:o,prediction_layer:i,output_layer:u},paramMappings:t}}function cce(e,t){let n=rr(e,t);function r(u,l,d){let p=n(`${u}/Conv2d_${l}_pointwise/weights`,4,`${d}/filters`),h=n(`${u}/Conv2d_${l}_pointwise/convolution_bn_offset`,1,`${d}/batch_norm_offset`);return{filters:p,batch_norm_offset:h}}function s(u){let l=`mobilenetv1/conv_${u}`,d=`MobilenetV1/Conv2d_${u}_depthwise`,p=`${l}/depthwise_conv`,h=`${l}/pointwise_conv`,f=n(`${d}/depthwise_weights`,4,`${p}/filters`),m=n(`${d}/BatchNorm/gamma`,1,`${p}/batch_norm_scale`),g=n(`${d}/BatchNorm/beta`,1,`${p}/batch_norm_offset`),b=n(`${d}/BatchNorm/moving_mean`,1,`${p}/batch_norm_mean`),y=n(`${d}/BatchNorm/moving_variance`,1,`${p}/batch_norm_variance`);return{depthwise_conv:{filters:f,batch_norm_scale:m,batch_norm_offset:g,batch_norm_mean:b,batch_norm_variance:y},pointwise_conv:r("MobilenetV1",u,h)}}function a(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:s(1),conv_2:s(2),conv_3:s(3),conv_4:s(4),conv_5:s(5),conv_6:s(6),conv_7:s(7),conv_8:s(8),conv_9:s(9),conv_10:s(10),conv_11:s(11),conv_12:s(12),conv_13:s(13)}}function o(u,l){let d=n(`${u}/weights`,4,`${l}/filters`),p=n(`${u}/biases`,1,`${l}/bias`);return{filters:d,bias:p}}function i(u){let l=o(`Prediction/BoxPredictor_${u}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${u}/box_encoding_predictor`),d=o(`Prediction/BoxPredictor_${u}/ClassPredictor`,`prediction_layer/box_predictor_${u}/class_predictor`);return{box_encoding_predictor:l,class_predictor:d}}function c(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}return{extractMobilenetV1Params:a,extractPredictionLayerParams:c}}function EE(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=cce(e,t),s=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Ms(s))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${s}`);let a={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:s}};return _n(e,t),{params:a,paramMappings:t}}function Er(e,t,n){return M(()=>{let r=Ft(e,t.filters,n,"same");return r=Y(r,t.batch_norm_offset),Zt(r,0,6)})}var uce=.0010000000474974513;function lce(e,t,n){return M(()=>{let r=ua(e,t.filters,n,"same");return r=Ts(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,uce),Zt(r,0,6)})}function dce(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function AE(e,t){return M(()=>{let n,r=Er(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((a,o)=>{let i=o+1,c=dce(i);r=lce(r,a.depthwise_conv,c),r=Er(r,a.pointwise_conv,[1,1]),i===11&&(n=r)}),n===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}function pce(e,t,n){let r=e.arraySync(),s=Math.min(r[t][0],r[t][2]),a=Math.min(r[t][1],r[t][3]),o=Math.max(r[t][0],r[t][2]),i=Math.max(r[t][1],r[t][3]),c=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),l=Math.max(r[n][0],r[n][2]),d=Math.max(r[n][1],r[n][3]),p=(o-s)*(i-a),h=(l-c)*(d-u);if(p<=0||h<=0)return 0;let f=Math.max(s,c),m=Math.max(a,u),g=Math.min(o,l),b=Math.min(i,d),y=Math.max(g-f,0)*Math.max(b-m,0);return y/(p+h-y)}function DE(e,t,n,r,s){let a=e.shape[0],o=Math.min(n,a),i=t.map((l,d)=>({score:l,boxIndex:d})).filter(l=>l.score>s).sort((l,d)=>d.score-l.score),c=l=>l<=r?1:0,u=[];return i.forEach(l=>{if(u.length>=o)return;let d=l.score;for(let p=u.length-1;p>=0;--p){let h=pce(e,l.boxIndex,u[p]);if(h!==0&&(l.score*=c(h),l.score<=s))break}d===l.score&&u.push(l.boxIndex)}),u}function hce(e){let t=dt(Pe(e,[1,0])),n=[fe(t[2],t[0]),fe(t[3],t[1])],r=[Y(t[0],ge(n[0],2)),Y(t[1],ge(n[1],2))];return{sizes:n,centers:r}}function fce(e,t){let{sizes:n,centers:r}=hce(e),s=dt(Pe(t,[1,0])),a=ge(V(hn(ge(s[2],5)),n[0]),2),o=Y(V(ge(s[0],10),n[0]),r[0]),i=ge(V(hn(ge(s[3],5)),n[1]),2),c=Y(V(ge(s[1],10),n[1]),r[1]);return Pe(Pt([fe(o,a),fe(c,i),Y(o,a),Y(c,i)]),[1,0])}function $E(e,t,n){return M(()=>{let r=e.shape[0],s=fce(U(Fn(n.extra_dim,[r,1,1]),[-1,4]),U(e,[-1,4]));s=U(s,[r,s.shape[0]/r,4]);let a=lr(We(t,[0,0,1],[-1,-1,-1])),o=We(a,[0,0,0],[-1,-1,1]);o=U(o,[r,o.shape[1]]);let i=dt(s),c=dt(o);return{boxes:i,scores:c}})}function _i(e,t){return M(()=>{let n=e.shape[0],r=U(Ti(e,t.box_encoding_predictor),[n,-1,1,4]),s=U(Ti(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:r,classPrediction:s}})}function FE(e,t,n){return M(()=>{let r=Er(e,n.conv_0,[1,1]),s=Er(r,n.conv_1,[2,2]),a=Er(s,n.conv_2,[1,1]),o=Er(a,n.conv_3,[2,2]),i=Er(o,n.conv_4,[1,1]),c=Er(i,n.conv_5,[2,2]),u=Er(c,n.conv_6,[1,1]),l=Er(u,n.conv_7,[2,2]),d=_i(t,n.box_predictor_0),p=_i(e,n.box_predictor_1),h=_i(s,n.box_predictor_2),f=_i(o,n.box_predictor_3),m=_i(c,n.box_predictor_4),g=_i(l,n.box_predictor_5),b=Ze([d.boxPredictionEncoding,p.boxPredictionEncoding,h.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),y=Ze([d.classPrediction,p.classPrediction,h.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1);return{boxPredictions:b,classPredictions:y}})}var Ar=class{constructor({minConfidence:t,maxResults:n}={}){this._name="SsdMobilenetv1Options";if(this._minConfidence=t||.5,this._maxResults=n||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}};var Ei=class extends ln{constructor(){super("SsdMobilenetv1")}forwardInput(t){let{params:n}=this;if(!n)throw new Error("SsdMobilenetv1 - load model before inference");return M(()=>{let r=ce(t.toBatchTensor(512,!1),"float32"),s=fe(ge(r,127.5),1),a=AE(s,n.mobilenetv1),{boxPredictions:o,classPredictions:i}=FE(a.out,a.conv11,n.prediction_layer);return $E(o,i,n.output_layer)})}async forward(t){return this.forwardInput(await mt(t))}async locateFaces(t,n={}){let{maxResults:r,minConfidence:s}=new Ar(n),a=await mt(t),{boxes:o,scores:i}=this.forwardInput(a),c=o[0],u=i[0];for(let v=1;v<o.length;v++)o[v].dispose(),i[v].dispose();let l=Array.from(u.dataSync()),p=DE(c,l,r,.5,s),h=a.getReshapedInputDimensions(0),f=a.inputSize,m=f/h.width,g=f/h.height,b=c.arraySync(),y=p.map(v=>{let[x,k]=[Math.max(0,b[v][0]),Math.min(1,b[v][2])].map($=>$*g),[C,N]=[Math.max(0,b[v][1]),Math.min(1,b[v][3])].map($=>$*m);return new vt(l[v],new zu(C,x,N-C,k-x),{height:a.getInputHeight(0),width:a.getInputWidth(0)})});return c.dispose(),u.dispose(),y}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(t){return EE(t)}extractParams(t){return _E(t)}};function RE(e){let t=new Ei;return t.extractWeights(e),t}function mce(e){return RE(e)}var PE=class extends Ei{};var OE=.4,ME=[new Oe(.738768,.874946),new Oe(2.42204,2.65704),new Oe(4.30971,7.04493),new Oe(10.246,4.59428),new Oe(12.6868,11.8741)],LE=[new Oe(1.603231,2.094468),new Oe(6.041143,7.080126),new Oe(2.882459,3.518061),new Oe(4.266906,5.178857),new Oe(9.041765,10.66308)],BE=[117.001,114.697,97.404],zE="tiny_yolov2_model",WE="tiny_yolov2_separable_conv_model";var Xm=e=>typeof e=="number";function A0(e){if(!e)throw new Error(`invalid config: ${e}`);if(typeof e.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!Xm(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>typeof t=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>Xm(t.x)&&Xm(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||e.meanRgb.length!==3||!e.meanRgb.every(Xm)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function Yu(e){return M(()=>{let t=V(e,Ie(.10000000149011612));return Y(qe(fe(e,t)),t)})}function Vs(e,t){return M(()=>{let n=dr(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Ft(n,t.conv.filters,[1,1],"valid"),n=fe(n,t.bn.sub),n=V(n,t.bn.truediv),n=Y(n,t.conv.bias),Yu(n)})}function Us(e,t){return M(()=>{let n=dr(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Jo(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=Y(n,t.bias),Yu(n)})}function gce(e,t){let n=Gu(e,t);function r(o,i){let c=He(e(o)),u=He(e(o));return t.push({paramPath:`${i}/sub`},{paramPath:`${i}/truediv`}),{sub:c,truediv:u}}function s(o,i,c){let u=n(o,i,3,`${c}/conv`),l=r(i,`${c}/bn`);return{conv:u,bn:l}}let a=Hu(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:s,extractSeparableConvParams:a}}function VE(e,t,n,r){let{extractWeights:s,getRemainingWeights:a}=En(e),o=[],{extractConvParams:i,extractConvWithBatchNormParams:c,extractSeparableConvParams:u}=gce(s,o),l;if(t.withSeparableConvs){let[d,p,h,f,m,g,b,y,v]=r,x=t.isFirstLayerConv2d?i(d,p,3,"conv0"):u(d,p,"conv0"),k=u(p,h,"conv1"),C=u(h,f,"conv2"),N=u(f,m,"conv3"),$=u(m,g,"conv4"),R=u(g,b,"conv5"),O=y?u(b,y,"conv6"):void 0,D=v?u(y,v,"conv7"):void 0,P=i(v||y||b,5*n,1,"conv8");l={conv0:x,conv1:k,conv2:C,conv3:N,conv4:$,conv5:R,conv6:O,conv7:D,conv8:P}}else{let[d,p,h,f,m,g,b,y,v]=r,x=c(d,p,"conv0"),k=c(p,h,"conv1"),C=c(h,f,"conv2"),N=c(f,m,"conv3"),$=c(m,g,"conv4"),R=c(g,b,"conv5"),O=c(b,y,"conv6"),D=c(y,v,"conv7"),P=i(v,5*n,1,"conv8");l={conv0:x,conv1:k,conv2:C,conv3:N,conv4:$,conv5:R,conv6:O,conv7:D,conv8:P}}if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{params:l,paramMappings:o}}function bce(e,t){let n=rr(e,t);function r(i){let c=n(`${i}/sub`,1),u=n(`${i}/truediv`,1);return{sub:c,truediv:u}}function s(i){let c=n(`${i}/filters`,4),u=n(`${i}/bias`,1);return{filters:c,bias:u}}function a(i){let c=s(`${i}/conv`),u=r(`${i}/bn`);return{conv:c,bn:u}}let o=ju(n);return{extractConvParams:s,extractConvWithBatchNormParams:a,extractSeparableConvParams:o}}function UE(e,t){let n=[],{extractConvParams:r,extractConvWithBatchNormParams:s,extractSeparableConvParams:a}=bce(e,n),o;if(t.withSeparableConvs){let i=t.filterSizes&&t.filterSizes.length||9;o={conv0:t.isFirstLayerConv2d?r("conv0"):a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:i>7?a("conv6"):void 0,conv7:i>8?a("conv7"):void 0,conv8:r("conv8")}}else o={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:r("conv8")};return _n(e,n),{params:o,paramMappings:n}}var gs=class{constructor({inputSize:t,scoreThreshold:n}={}){this._name="TinyYolov2Options";if(this._inputSize=t||416,this._scoreThreshold=n||.5,typeof this._inputSize!="number"||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}};var D0=class extends ln{constructor(t){super("TinyYolov2");A0(t),this._config=t}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(t,n){let r=Vs(t,n.conv0);return r=Rt(r,[2,2],[2,2],"same"),r=Vs(r,n.conv1),r=Rt(r,[2,2],[2,2],"same"),r=Vs(r,n.conv2),r=Rt(r,[2,2],[2,2],"same"),r=Vs(r,n.conv3),r=Rt(r,[2,2],[2,2],"same"),r=Vs(r,n.conv4),r=Rt(r,[2,2],[2,2],"same"),r=Vs(r,n.conv5),r=Rt(r,[2,2],[1,1],"same"),r=Vs(r,n.conv6),r=Vs(r,n.conv7),Ti(r,n.conv8,"valid",!1)}runMobilenet(t,n){let r=this.config.isFirstLayerConv2d?Yu(Ti(t,n.conv0,"valid",!1)):Us(t,n.conv0);return r=Rt(r,[2,2],[2,2],"same"),r=Us(r,n.conv1),r=Rt(r,[2,2],[2,2],"same"),r=Us(r,n.conv2),r=Rt(r,[2,2],[2,2],"same"),r=Us(r,n.conv3),r=Rt(r,[2,2],[2,2],"same"),r=Us(r,n.conv4),r=Rt(r,[2,2],[2,2],"same"),r=Us(r,n.conv5),r=Rt(r,[2,2],[1,1],"same"),r=n.conv6?Us(r,n.conv6):r,r=n.conv7?Us(r,n.conv7):r,Ti(r,n.conv8,"valid",!1)}forwardInput(t,n){let{params:r}=this;if(!r)throw new Error("TinyYolov2 - load model before inference");return M(()=>{let s=ce(t.toBatchTensor(n,!1),"float32");return s=this.config.meanRgb?qr(s,this.config.meanRgb):s,s=s.div(255),this.config.withSeparableConvs?this.runMobilenet(s,r):this.runTinyYolov2(s,r)})}async forward(t,n){return this.forwardInput(await mt(t),n)}async detect(t,n={}){let{inputSize:r,scoreThreshold:s}=new gs(n),a=await mt(t),o=await this.forwardInput(a,r),i=M(()=>dt(o)[0].expandDims()),c={width:a.getInputWidth(0),height:a.getInputHeight(0)},u=await this.extractBoxes(i,a.getReshapedInputDimensions(0),s);o.dispose(),i.dispose();let l=u.map(g=>g.box),d=u.map(g=>g.score),p=u.map(g=>g.classScore),h=u.map(g=>this.config.classes[g.label]);return a0(l.map(g=>g.rescale(r)),d,this.config.iouThreshold,!0).map(g=>new Ta(d[g],p[g],h[g],l[g],c))}getDefaultModelName(){return""}extractParamsFromWeightMap(t){return UE(t,this.config)}extractParams(t){let n=this.config.filterSizes||D0.DEFAULT_FILTER_SIZES,r=n?n.length:void 0;if(r!==7&&r!==8&&r!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${r} filterSizes in config`);return VE(t,this.config,this.boxEncodingSize,n)}async extractBoxes(t,n,r){let{width:s,height:a}=n,o=Math.max(s,a),i=o/s,c=o/a,u=t.shape[1],l=this.config.anchors.length,[d,p,h]=M(()=>{let b=t.reshape([u,u,l,this.boxEncodingSize]),y=b.slice([0,0,0,0],[u,u,l,4]),v=b.slice([0,0,0,4],[u,u,l,1]),x=this.withClassScores?Rr(b.slice([0,0,0,5],[u,u,l,this.config.classes.length]),3):Ie(0);return[y,v,x]}),f=[],m=await p.array(),g=await d.array();for(let b=0;b<u;b++)for(let y=0;y<u;y++)for(let v=0;v<l;v++){let x=Kd(m[b][y][v][0]);if(!r||x>r){let k=(y+Kd(g[b][y][v][0]))/u*i,C=(b+Kd(g[b][y][v][1]))/u*c,N=Math.exp(g[b][y][v][2])*this.config.anchors[v].x/u*i,$=Math.exp(g[b][y][v][3])*this.config.anchors[v].y/u*c,R=k-N/2,O=C-$/2,D={row:b,col:y,anchor:v},{classScore:P,label:T}=this.withClassScores?await this.extractPredictedClass(h,D):{classScore:1,label:0};f.push({box:new Bu(R,O,R+N,O+$),score:x,classScore:x*P,label:T,...D})}}return d.dispose(),p.dispose(),h.dispose(),f}async extractPredictedClass(t,n){let{row:r,col:s,anchor:a}=n,o=await t.array();return Array(this.config.classes.length).fill(0).map((i,c)=>o[r][s][a][c]).map((i,c)=>({classScore:i,label:c})).reduce((i,c)=>i.classScore>c.classScore?i:c)}},Zu=D0;Zu.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var Ju=class extends Zu{constructor(t=!0){let n={withSeparableConvs:t,iouThreshold:OE,classes:["face"],...t?{anchors:LE,meanRgb:BE}:{anchors:ME,withClassScores:!0}};super(n)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(t,n){return(await this.detect(t,n)).map(s=>new vt(s.score,s.relativeBox,{width:s.imageWidth,height:s.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?WE:zE}extractParamsFromWeightMap(t){return super.extractParamsFromWeightMap(t)}};function yce(e,t=!0){let n=new Ju(t);return n.extractWeights(e),n}var Ym=class extends gs{constructor(){super(...arguments);this._name="TinyFaceDetectorOptions"}};var Dr=class{async then(t){return t(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function Ai(e,t,n,r,s=({alignedRect:a})=>a){let a=e.map(c=>Ni(c)?s(c):c.detection),o=r||(t instanceof Ee?await Uu(t,a):await Vu(t,a)),i=await n(o);return o.forEach(c=>c instanceof Ee&&c.dispose()),i}async function Qu(e,t,n,r,s){return Ai([e],t,async a=>n(a[0]),r,s)}var GE=.4,HE=[new Oe(1.603231,2.094468),new Oe(6.041143,7.080126),new Oe(2.882459,3.518061),new Oe(4.266906,5.178857),new Oe(9.041765,10.66308)],jE=[117.001,114.697,97.404];var el=class extends Zu{constructor(){let t={withSeparableConvs:!0,iouThreshold:GE,classes:["face"],anchors:HE,meanRgb:jE,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(t)}get anchors(){return this.config.anchors}async locateFaces(t,n){return(await this.detect(t,n)).map(s=>new vt(s.score,s.relativeBox,{width:s.imageWidth,height:s.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(t){return super.extractParamsFromWeightMap(t)}};var Qe={ssdMobilenetv1:new Ei,tinyFaceDetector:new el,tinyYolov2:new Ju,faceLandmark68Net:new Ku,faceLandmark68TinyNet:new Gm,faceRecognitionNet:new Xu,faceExpressionNet:new Wm,ageGenderNet:new Um},qE=(e,t)=>Qe.ssdMobilenetv1.locateFaces(e,t),vce=(e,t)=>Qe.tinyFaceDetector.locateFaces(e,t),xce=(e,t)=>Qe.tinyYolov2.locateFaces(e,t),KE=e=>Qe.faceLandmark68Net.detectLandmarks(e),wce=e=>Qe.faceLandmark68TinyNet.detectLandmarks(e),kce=e=>Qe.faceRecognitionNet.computeFaceDescriptor(e),Ice=e=>Qe.faceExpressionNet.predictExpressions(e),Sce=e=>Qe.ageGenderNet.predictAgeAndGender(e),XE=e=>Qe.ssdMobilenetv1.load(e),Cce=e=>Qe.tinyFaceDetector.load(e),Tce=e=>Qe.tinyYolov2.load(e),Nce=e=>Qe.faceLandmark68Net.load(e),_ce=e=>Qe.faceLandmark68TinyNet.load(e),Ece=e=>Qe.faceRecognitionNet.load(e),Ace=e=>Qe.faceExpressionNet.load(e),Dce=e=>Qe.ageGenderNet.load(e),$ce=XE,Fce=qE,Rce=KE;var $0=class extends Dr{constructor(t,n,r){super();this.parentTask=t;this.input=n;this.extractedFaces=r}},tl=class extends $0{async run(){let t=await this.parentTask,n=await Ai(t,this.input,async r=>Promise.all(r.map(s=>Qe.faceExpressionNet.predictExpressions(s))),this.extractedFaces);return t.map((r,s)=>Vm(r,n[s]))}withAgeAndGender(){return new rl(this,this.input)}},nl=class extends $0{async run(){let t=await this.parentTask;if(!t)return;let n=await Qu(t,this.input,r=>Qe.faceExpressionNet.predictExpressions(r),this.extractedFaces);return Vm(t,n)}withAgeAndGender(){return new sl(this,this.input)}},Di=class extends tl{withAgeAndGender(){return new Fi(this,this.input)}withFaceDescriptors(){return new Ea(this,this.input)}},$i=class extends nl{withAgeAndGender(){return new Ri(this,this.input)}withFaceDescriptor(){return new Aa(this,this.input)}};var F0=class extends Dr{constructor(t,n,r){super();this.parentTask=t;this.input=n;this.extractedFaces=r}},rl=class extends F0{async run(){let t=await this.parentTask,n=await Ai(t,this.input,async r=>Promise.all(r.map(s=>Qe.ageGenderNet.predictAgeAndGender(s))),this.extractedFaces);return t.map((r,s)=>{let{age:a,gender:o,genderProbability:i}=n[s];return qm(Km(r,o,i),a)})}withFaceExpressions(){return new tl(this,this.input)}},sl=class extends F0{async run(){let t=await this.parentTask;if(!t)return;let{age:n,gender:r,genderProbability:s}=await Qu(t,this.input,a=>Qe.ageGenderNet.predictAgeAndGender(a),this.extractedFaces);return qm(Km(t,r,s),n)}withFaceExpressions(){return new nl(this,this.input)}},Fi=class extends rl{withFaceExpressions(){return new Di(this,this.input)}withFaceDescriptors(){return new Ea(this,this.input)}},Ri=class extends sl{withFaceExpressions(){return new $i(this,this.input)}withFaceDescriptor(){return new Aa(this,this.input)}};var Zm=class extends Dr{constructor(t,n){super();this.parentTask=t;this.input=n}},Ea=class extends Zm{async run(){let t=await this.parentTask;return(await Ai(t,this.input,r=>Promise.all(r.map(s=>Qe.faceRecognitionNet.computeFaceDescriptor(s))),null,r=>r.landmarks.align(null,{useDlibAlignment:!0}))).map((r,s)=>jm(t[s],r))}withFaceExpressions(){return new Di(this,this.input)}withAgeAndGender(){return new Fi(this,this.input)}},Aa=class extends Zm{async run(){let t=await this.parentTask;if(!t)return;let n=await Qu(t,this.input,r=>Qe.faceRecognitionNet.computeFaceDescriptor(r),null,r=>r.landmarks.align(null,{useDlibAlignment:!0}));return jm(t,n)}withFaceExpressions(){return new $i(this,this.input)}withAgeAndGender(){return new Ri(this,this.input)}};var Jm=class extends Dr{constructor(t,n,r){super();this.parentTask=t;this.input=n;this.useTinyLandmarkNet=r}get landmarkNet(){return this.useTinyLandmarkNet?Qe.faceLandmark68TinyNet:Qe.faceLandmark68Net}},Qm=class extends Jm{async run(){let t=await this.parentTask,n=t.map(a=>a.detection),r=this.input instanceof Ee?await Uu(this.input,n):await Vu(this.input,n),s=await Promise.all(r.map(a=>this.landmarkNet.detectLandmarks(a)));return r.forEach(a=>a instanceof Ee&&a.dispose()),t.map((a,o)=>qu(a,s[o]))}withFaceExpressions(){return new Di(this,this.input)}withAgeAndGender(){return new Fi(this,this.input)}withFaceDescriptors(){return new Ea(this,this.input)}},eg=class extends Jm{async run(){let t=await this.parentTask;if(!t)return;let{detection:n}=t,r=this.input instanceof Ee?await Uu(this.input,[n]):await Vu(this.input,[n]),s=await this.landmarkNet.detectLandmarks(r[0]);return r.forEach(a=>a instanceof Ee&&a.dispose()),qu(t,s)}withFaceExpressions(){return new $i(this,this.input)}withAgeAndGender(){return new Ri(this,this.input)}withFaceDescriptor(){return new Aa(this,this.input)}};var tg=class extends Dr{constructor(t,n=new Ar){super();this.input=t;this.options=n}},op=class extends tg{async run(){let{input:t,options:n}=this,r;if(n instanceof Ym)r=Qe.tinyFaceDetector.locateFaces(t,n);else if(n instanceof Ar)r=Qe.ssdMobilenetv1.locateFaces(t,n);else if(n instanceof gs)r=Qe.tinyYolov2.locateFaces(t,n);else throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");return r}runAndExtendWithFaceDetections(){return new Promise((t,n)=>{this.run().then(r=>t(r.map(s=>ki({},s)))).catch(r=>n(r))})}withFaceLandmarks(t=!1){return new Qm(this.runAndExtendWithFaceDetections(),this.input,t)}withFaceExpressions(){return new tl(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new rl(this.runAndExtendWithFaceDetections(),this.input)}},ng=class extends tg{async run(){let t=await new op(this.input,this.options),n=t[0];return t.forEach(r=>{r.score>n.score&&(n=r)}),n}runAndExtendWithFaceDetection(){return new Promise(async t=>{let n=await this.run();t(n?ki({},n):void 0)})}withFaceLandmarks(t=!1){return new eg(this.runAndExtendWithFaceDetection(),this.input,t)}withFaceExpressions(){return new nl(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new sl(this.runAndExtendWithFaceDetection(),this.input)}};function Pce(e,t=new Ar){return new ng(e,t)}function rg(e,t=new Ar){return new op(e,t)}async function YE(e,t){return rg(e,new Ar(t?{minConfidence:t}:{})).withFaceLandmarks().withFaceDescriptors()}async function Oce(e,t={}){return rg(e,new gs(t)).withFaceLandmarks().withFaceDescriptors()}var Mce=YE;function R0(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map((s,a)=>s-r[a]).reduce((s,a)=>s+a**2,0))}var sg=class{constructor(t,n=.6){this._distanceThreshold=n;let r=Array.isArray(t)?t:[t];if(!r.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let s=1,a=()=>`person ${s++}`;this._labeledDescriptors=r.map(o=>{if(o instanceof Ls)return o;if(o instanceof Float32Array)return new Ls(a(),[o]);if(o.descriptor&&o.descriptor instanceof Float32Array)return new Ls(a(),[o.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")})}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(t,n){return n.map(r=>R0(r,t)).reduce((r,s)=>r+s,0)/(n.length||1)}matchDescriptor(t){return this.labeledDescriptors.map(({descriptors:n,label:r})=>new Xd(r,this.computeMeanDistance(t,n))).reduce((n,r)=>n.distance<r.distance?n:r)}findBestMatch(t){let n=this.matchDescriptor(t);return n.distance<this._distanceThreshold?n:new Xd("unknown",n.distance)}toJSON(){return{distanceThreshold:this._distanceThreshold,labeledDescriptors:this._labeledDescriptors.map(t=>t.toJSON())}}static fromJSON(t){let n=t.labeledDescriptors.map(r=>Ls.fromJSON(r));return new sg(n,t.distanceThreshold)}};function Lce(e){let t=new el;return t.extractWeights(e),t}function ZE(e,t){let{width:n,height:r}=new Nn(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map(s=>ZE(s,{width:n,height:r}));if(Ni(e)){let s=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(s.box.width,s.box.height);return qu(ki(e,s),a)}return fs(e)?ki(e,e.detection.forSize(n,r)):e instanceof yr||e instanceof vt?e.forSize(n,r):e}var Bce=typeof process!="undefined",JE=typeof navigator!="undefined"&&typeof navigator.userAgent!="undefined",zce={faceapi:mE,node:Bce,browser:JE};JE&&(Ma.set("CHECK_COMPUTATION_FOR_ERRORS",!1),Ma.set("WEBGL_CPU_FORWARD",!0),Ma.set("WEBGL_PACK_DEPTHWISECONV",!1),Ma.set("WEBGL_USE_SHAPES_UNIFORMS",!0));return Wce;})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
